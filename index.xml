<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>小十的部落格</title><link>https://blog.smallten.tk/</link><description>Recent content on 小十的部落格</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 19 Jul 2021 14:03:54 +0800</lastBuildDate><atom:link href="https://blog.smallten.tk/index.xml" rel="self" type="application/rss+xml"/><item><title>2021 R2S CTF</title><link>https://blog.smallten.tk/p/experience-01/</link><pubDate>Mon, 19 Jul 2021 14:03:54 +0800</pubDate><guid>https://blog.smallten.tk/p/experience-01/</guid><description>&lt;h1 id="前情提要">前情提要&lt;/h1>
&lt;p>  一開始時，學長們在 Messenger 的群組裡問有沒有人要參加這場新手向的 CTF 競賽，我是沒有選擇參加的 (因為我從來沒有深入的去玩、學習這方面的東東，可以算是個純正的小萌新~~)，然而到最後因為人數的關係學長們組成了兩隊，然後還能再多 2 個人，因此我也加入想說去見見世面也好。(其中還得感謝學長們的鼓勵，以及願意帶我這個什麼都不會的新手)😆😆&lt;/p>
&lt;h1 id="競賽簡介">競賽簡介&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="https://ctf.r2s.tw/" target="_blank" rel="noopener"
>R2S CTF&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://quals.r2s.tw/" target="_blank" rel="noopener"
>競賽網站&lt;/a>&lt;/li>
&lt;li>Online Qualification : 7/16 - 18&lt;/li>
&lt;li>Flag 樣式：&lt;code>R2S{}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="成績">成績&lt;/h1>
&lt;ul>
&lt;li>All: 7 / 81&lt;/li>
&lt;li>Offical Only: 4 / 43
&lt;figure style="flex-grow: 211; flex-basis: 507px">
&lt;a href="https://blog.smallten.tk/p/experience-01/experience-01-01.jpg" data-size="1389x657">&lt;img src="https://blog.smallten.tk/p/experience-01/experience-01-01.jpg"
srcset="https://blog.smallten.tk/p/experience-01/experience-01-01_hudf993d8a5054573643f5cb1dd7f7aa2a_159043_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/experience-01/experience-01-01_hudf993d8a5054573643f5cb1dd7f7aa2a_159043_1024x0_resize_q75_box.jpg 1024w"
width="1389"
height="657"
loading="lazy"
>
&lt;/a>
&lt;/figure> &lt;figure style="flex-grow: 210; flex-basis: 505px">
&lt;a href="https://blog.smallten.tk/p/experience-01/experience-01-02.jpg" data-size="1388x659">&lt;img src="https://blog.smallten.tk/p/experience-01/experience-01-02.jpg"
srcset="https://blog.smallten.tk/p/experience-01/experience-01-02_hu3cee8c5ca47deb5799bf636471e379a5_167978_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/experience-01/experience-01-02_hu3cee8c5ca47deb5799bf636471e379a5_167978_1024x0_resize_q75_box.jpg 1024w"
width="1388"
height="659"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h1 id="解題紀錄">解題紀錄&lt;/h1>
&lt;ul>
&lt;li>以下是我解的題目，其他題目我無能為力，就只能看有沒有學長寫題解了(顆顆&lt;/li>
&lt;/ul>
&lt;h3 id="welcome">Welcome&lt;/h3>
&lt;ul>
&lt;li>Welcome to R2S CTF o((&amp;gt;ω&amp;lt; ))o
&lt;ul>
&lt;li>在 R2S Discord 群組中的 challenge-announcement 頻道中，有黑黑的訊息要點開就能到 Flag 了。&lt;/li>
&lt;li>一開始覺得很酷，事後知道了這叫暴雷標籤 &lt;code>||暴雷訊息||&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="forensics">Forensics&lt;/h3>
&lt;ul>
&lt;li>Headache
&lt;ul>
&lt;li>這題依照 CRC32 找出圖片的長寬，並用 hex editor 把 png 的 header 改成正確的就行了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="crypto">Crypto&lt;/h3>
&lt;ul>
&lt;li>Base1024
&lt;ul>
&lt;li>這題將那堆 emoji 解碼後就得到 Flag 了。&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/keith-turner/ecoji" target="_blank" rel="noopener"
>ecoji&lt;/a>、&lt;a class="link" href="https://ecoji.io/" target="_blank" rel="noopener"
>ecoji 線上工具&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>BiGGG_RSA
&lt;ul>
&lt;li>一開始不知道怎麼分解 N，對於 &lt;a class="link" href="http://factordb.com/" target="_blank" rel="noopener"
>Factordb&lt;/a> 來說也太大了，解不出來。之後到了這個 &lt;a class="link" href="https://github.com/elliptic-shiho/primefac-fork" target="_blank" rel="noopener"
>primefac-fork&lt;/a>，再寫個簡單的程式就解決了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Seeeeed
&lt;ul>
&lt;li>也是 RSA 相關題。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="misc">Misc&lt;/h3>
&lt;ul>
&lt;li>Time Traveler
&lt;ul>
&lt;li>&lt;code>nc time-traveler.misc.quals.r2s.tw 5487&lt;/code>&lt;/li>
&lt;li>依照格式輸入並計算一下，弄到 1937 年就有 Flag 了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Fat7z
&lt;ul>
&lt;li>依照給的 code 反著寫，就能得到 Flag 了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="reverse">Reverse&lt;/h3>
&lt;ul>
&lt;li>What is this!?
&lt;ul>
&lt;li>JavaSript aaencode&lt;/li>
&lt;li>將言文字轉回 js，再執行裡面的 function 就行了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="web">Web&lt;/h3>
&lt;ul>
&lt;li>Chatroom
&lt;ul>
&lt;li>&lt;a class="link" href="https://chat.web.quals.r2s.tw/" target="_blank" rel="noopener"
>chatroom&lt;/a>&lt;/li>
&lt;li>一樣是 JavaSript aaencode&lt;/li>
&lt;li>複製下來，F12 丟 console，Flag 就噴出來了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="心得">心得&lt;/h1>
&lt;p>  這次是我第一次參加 CTF 相關的競賽，雖然幾乎都不太會寫，主要的題目還都是學長們解開的，但這場比賽中我依然學到了不少新的技巧，也對 CTF 有了更多的興趣，未來繼續努力吧!&lt;/p></description></item><item><title>StarCoder2021暑訓：Week01</title><link>https://blog.smallten.tk/p/star_coder-02/</link><pubDate>Thu, 15 Jul 2021 00:07:54 +0800</pubDate><guid>https://blog.smallten.tk/p/star_coder-02/</guid><description>&lt;h1 id="主題">主題&lt;/h1>
&lt;ul>
&lt;li>搜尋、排序、貪心&lt;/li>
&lt;/ul>
&lt;h1 id="題目">題目&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="https://vjudge.net/contest/446298" target="_blank" rel="noopener"
>Virtual Judge&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="題解">題解&lt;/h1>
&lt;h2 id="a---flip-sort">A - Flip Sort&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>給一堆數字，輸出要交換(只能相鄰交換)多少次，才能由小到大排好。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>Bubble sort&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1005&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">ans&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Minimum exchange operations : &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="sc">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="b---age-sort">B - Age Sort&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>給一堆數字，由小到大排序。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>std::sort()&lt;/li>
&lt;li>小心 Presentation error&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">ios&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sync_with_stdio&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">cin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tie&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span> &lt;span class="nl">i&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="sc">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">21&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="c---conformity">C - Conformity&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>輸出最多人選擇課的程組合的人數，若是最多的有多個，將人數相加。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>將每行的課程排序後，再丟入 map 中統計。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">ios&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sync_with_stdio&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">cin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tie&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">maxNum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">msi&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">vs&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">vs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">vs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push_back&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">vs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">vs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">msi&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">msi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">msi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">maxNum&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">maxNum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">second&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">msi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">msi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">maxNum&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">maxNum&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">30&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="d---guessing-game">D - Guessing Game&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>依照題目模擬，看有沒有說謊。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>模擬操作，最後看 right on 的值有沒有在區間中。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">EOF&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">getline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">str&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s">&amp;#34;right on&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;too high&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">e&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;too low&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Stan may be honest&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Stan is dishonest&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="e---ancient-cipher">E - Ancient Cipher&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>判斷第一行字串能不能依照題目的轉換方式變成第二行字串。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>先紀錄彼此字母出現的次數並排序，再比對排序後數值是否相同即可。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">s1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s1&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span> &lt;span class="nl">i&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">s1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="sc">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span> &lt;span class="nl">i&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">s2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="sc">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;NO&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;YES&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">22&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="f---bridge-hands">F - Bridge Hands&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>依照給定方位的下一個人開始給牌，最後輸出要依照順序排列。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>就模擬發牌並排序吧。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="n">pcc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pair&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">pcc&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">bool&lt;/span> &lt;span class="nf">cmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pcc&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pcc&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ta&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">tb&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">cc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="sc">&amp;#39;C&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;D&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;S&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;H&amp;#39;&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">ct&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="sc">&amp;#39;2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;4&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;5&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;6&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;7&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;9&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;T&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;J&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;Q&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;K&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">cc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">ta&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">cc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">tb&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">second&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ct&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">ta&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">second&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ct&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">tb&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ta&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">tb&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ta&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tb&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ta&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">tb&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">25&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">sortCard&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">cmp&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">29&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">30&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">printCard&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">oc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="sc">&amp;#39;S&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;W&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;N&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;E&amp;#39;&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">cc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="sc">&amp;#39;N&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;E&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;S&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;W&amp;#39;&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ic&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">}};&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">36&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">39&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">40&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">41&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">oc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;:&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">43&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span> &lt;span class="nl">it&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ic&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;span class="ln">44&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">45&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">46&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">47&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">48&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">49&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="sc">&amp;#39;#&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">50&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">51&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">52&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">53&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">54&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">55&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">56&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">57&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">temp&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">push_back&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]});&lt;/span>
&lt;span class="ln">58&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">59&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">60&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">61&lt;/span> &lt;span class="n">sortCard&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">62&lt;/span> &lt;span class="n">printCard&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">63&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">64&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">65&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="g---vitos-family">G - Vito&amp;rsquo;s Family&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>選出一個數，並計算彼此距離和最小的值。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>中位數算距離和。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="h---shoemakers-problem">H - Shoemaker&amp;rsquo;s Problem&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>找出能使罰金最少的工作順序。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>貪心法&lt;/li>
&lt;li>依照 (罰金 / 時間) 的值，大到小排序。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="n">pdi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pair&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kt">bool&lt;/span> &lt;span class="nf">cmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pdi&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pdi&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">pdi&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push_back&lt;/span>&lt;span class="p">({(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">1.0&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">});&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">cmp&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">auto&lt;/span> &lt;span class="nl">it&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="sc">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">30&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="i---the-bus-driver-problem">I - The Bus Driver Problem&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>公車工作安排，輸出雇主最少需要支付的加班費。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>先依照早晚排序，頭尾配對(最大配最小)，最後計算加班費的金額。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">morning&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">night&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">morning&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">night&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">morning&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">morning&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">night&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">night&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">morning&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">night&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">morning&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">night&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="j---watering-grass">J - Watering Grass&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>計算最少需要多少個噴水頭才能覆蓋整個區域，若都不行輸出 -1。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>先轉換成一維。&lt;/li>
&lt;li>貪心法&lt;/li>
&lt;li>區間覆蓋&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="n">pdd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pair&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">double&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kt">bool&lt;/span> &lt;span class="nf">cmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pdd&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pdd&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">second&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">w&lt;/span> &lt;span class="o">/=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">pdd&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">dd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">w&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push_back&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">dd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">dd&lt;/span>&lt;span class="p">});&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">cmp&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">second&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">ans&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;-1&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">36&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">38&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="k---ultra-quicksort">K - Ultra-QuickSort&lt;/h2>
&lt;ul>
&lt;li>題目說明：
&lt;ul>
&lt;li>輸出最少要交換的數量。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解題思路：
&lt;ul>
&lt;li>用 merge sort 求逆序數對。&lt;/li>
&lt;li>大佬們要用 BIT 去解也行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>程式碼：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">500005&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">mergeSort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">len&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">leftLen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rightLen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">leftLen&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">leftArr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">rightArr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">leftLen&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">mergeSort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">leftArr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">leftLen&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">mergeSort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rightArr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rightLen&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">500005&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">tmpLen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">leftLen&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">rightLen&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">leftArr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">rightArr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">tmpLen&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">leftArr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">tmpLen&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rightArr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">leftLen&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">leftLen&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">tmpLen&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">leftArr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">rightLen&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">tmpLen&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rightArr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">tmpLen&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">23&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">mergeSort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">33&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>StarCoder2021暑訓</title><link>https://blog.smallten.tk/p/star_coder-01/</link><pubDate>Wed, 14 Jul 2021 22:52:11 +0800</pubDate><guid>https://blog.smallten.tk/p/star_coder-01/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">週次&lt;/th>
&lt;th style="text-align:center">主題&lt;/th>
&lt;th style="text-align:center">題解&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">一&lt;/td>
&lt;td style="text-align:center">搜尋、排序、貪心&lt;/td>
&lt;td style="text-align:center">&lt;a class="link" href="../star_coder-02/" >Link&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">二&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">三&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">四&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">五&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">六&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">七&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">八&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="學習資源">學習資源&lt;/h1>
&lt;h2 id="第一週---搜尋排序貪心">第一週 - 搜尋、排序、貪心&lt;/h2>
&lt;ul>
&lt;li>線上教材
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>教材&lt;/th>
&lt;th>說明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://drive.google.com/file/d/1_7Ch2G52jH8fHqlO_Atmjp9smAnvq9R4/view?usp=sharing" target="_blank" rel="noopener"
>師大碼賽客：排序/貪心/二分搜&lt;/a>&lt;/td>
&lt;td>子緯學長的教學講義（詳盡的新手入門）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://web.fg.tp.edu.tw/~tfgcsblog/blog/wp-content/uploads/2010/12/Training-2-Sorting-All.pdf" target="_blank" rel="noopener"
>北一女培訓：排序&lt;/a>&lt;/td>
&lt;td>六種排序法的程式與簡介&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://tioj.ck.tp.edu.tw/uploads/attachment/5/12/1_2.pdf" target="_blank" rel="noopener"
>建中培訓 (第4/6/7節)&lt;/a>&lt;/td>
&lt;td>4.排序STL/6.貪心/7.二分搜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://www.csie.ntu.edu.tw/~sprout/algo2019/ppt_pdf/week05/greedy.pdf" target="_blank" rel="noopener"
>台大資訊之芽：貪心&lt;/a>&lt;/td>
&lt;td>貪心法與理論/Huffman Tree&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://nckuacm.github.io/2019/" target="_blank" rel="noopener"
>成大競程培訓 (單元5/6)&lt;/a>&lt;/td>
&lt;td>5.二分搜/6.三種排序&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>線上影片
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>影片&lt;/th>
&lt;th>說明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://youtu.be/QVj81KR-_Hk" target="_blank" rel="noopener"
>台大孔令傑老師：二分搜尋法&lt;/a>&lt;/td>
&lt;td>7 分鐘學會二分搜尋法&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://www.youtube.com/user/AlgoRythmics/videos" target="_blank" rel="noopener"
>看舞蹈學排序法&lt;/a>&lt;/td>
&lt;td>以舞蹈呈現各種排序法的運作過程&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://youtu.be/Q6VyP6P4ukA" target="_blank" rel="noopener"
>台大陳縕儂老師：貪心&lt;/a>&lt;/td>
&lt;td>50 分鐘的正規演算法課程 (CLRS課本)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>演算法視覺化
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>演算法&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://www.cs.usfca.edu/~galles/visualization/Search.html" target="_blank" rel="noopener"
>線性搜尋與二分搜尋&lt;/a>&lt;/td>
&lt;td>以動畫呈現兩種搜尋法的運作過程&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://www.cs.usfca.edu/~galles/visualization/ComparisonSort.html" target="_blank" rel="noopener"
>排序&lt;/a>&lt;/td>
&lt;td>以動畫呈現六種排序演算法的運作過程&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ul></description></item><item><title>程式設計(二)-08：Linux List</title><link>https://blog.smallten.tk/p/computer_programming_2-08/</link><pubDate>Tue, 13 Jul 2021 22:25:50 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-08/</guid><description>&lt;ul>
&lt;li>linuxlist.h&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#pragma once
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 6&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="cp">#define LIST_HEAD_INIT(name) { &amp;amp;(name), &amp;amp;(name) }
&lt;/span>&lt;span class="ln"> 8&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="cp">#define LIST_HEAD(name) struct list_head name = LIST_HEAD_INIT(name)
&lt;/span>&lt;span class="ln"> 10&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 11&lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;span class="ln"> 12&lt;/span>&lt;span class="cm"> * Insert a new entry between two known consecutive entries.
&lt;/span>&lt;span class="ln"> 13&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="ln"> 14&lt;/span>&lt;span class="cm"> * This is only for internal list manipulation where we know
&lt;/span>&lt;span class="ln"> 15&lt;/span>&lt;span class="cm"> * the prev/next entries already!
&lt;/span>&lt;span class="ln"> 16&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln"> 17&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kr">inline&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">__list_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 18&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 19&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 20&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 21&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 22&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prev&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 23&lt;/span> &lt;span class="n">prev&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 24&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 25&lt;/span>
&lt;span class="ln"> 26&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln"> 27&lt;/span>&lt;span class="cm"> * list_add - add a new entry
&lt;/span>&lt;span class="ln"> 28&lt;/span>&lt;span class="cm"> * @new: new entry to be added
&lt;/span>&lt;span class="ln"> 29&lt;/span>&lt;span class="cm"> * @head: list head to add it after
&lt;/span>&lt;span class="ln"> 30&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="ln"> 31&lt;/span>&lt;span class="cm"> * Insert a new entry after the specified head.
&lt;/span>&lt;span class="ln"> 32&lt;/span>&lt;span class="cm"> * This is good for implementing stacks.
&lt;/span>&lt;span class="ln"> 33&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln"> 34&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kr">inline&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">list_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 35&lt;/span> &lt;span class="n">__list_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 36&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 37&lt;/span>
&lt;span class="ln"> 38&lt;/span>
&lt;span class="ln"> 39&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln"> 40&lt;/span>&lt;span class="cm"> * list_add_tail - add a new entry
&lt;/span>&lt;span class="ln"> 41&lt;/span>&lt;span class="cm"> * @new: new entry to be added
&lt;/span>&lt;span class="ln"> 42&lt;/span>&lt;span class="cm"> * @head: list head to add it before
&lt;/span>&lt;span class="ln"> 43&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="ln"> 44&lt;/span>&lt;span class="cm"> * Insert a new entry before the specified head.
&lt;/span>&lt;span class="ln"> 45&lt;/span>&lt;span class="cm"> * This is useful for implementing queues.
&lt;/span>&lt;span class="ln"> 46&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln"> 47&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kr">inline&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">list_add_tail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 48&lt;/span> &lt;span class="n">__list_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 49&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 50&lt;/span>
&lt;span class="ln"> 51&lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;span class="ln"> 52&lt;/span>&lt;span class="cm"> * Delete a list entry by making the prev/next entries
&lt;/span>&lt;span class="ln"> 53&lt;/span>&lt;span class="cm"> * point to each other.
&lt;/span>&lt;span class="ln"> 54&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="ln"> 55&lt;/span>&lt;span class="cm"> * This is only for internal list manipulation where we know
&lt;/span>&lt;span class="ln"> 56&lt;/span>&lt;span class="cm"> * the prev/next entries already!
&lt;/span>&lt;span class="ln"> 57&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln"> 58&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kr">inline&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">__list_del&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">prev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 59&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prev&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 60&lt;/span> &lt;span class="n">prev&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 61&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 62&lt;/span>
&lt;span class="ln"> 63&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln"> 64&lt;/span>&lt;span class="cm"> * list_del - deletes entry from list.
&lt;/span>&lt;span class="ln"> 65&lt;/span>&lt;span class="cm"> * @entry: the element to delete from the list.
&lt;/span>&lt;span class="ln"> 66&lt;/span>&lt;span class="cm"> * Note: list_empty() on entry does not return true after this, the entry is
&lt;/span>&lt;span class="ln"> 67&lt;/span>&lt;span class="cm"> * in an undefined state.
&lt;/span>&lt;span class="ln"> 68&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln"> 69&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kr">inline&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">__list_del_entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 70&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">entry&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 71&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 72&lt;/span>
&lt;span class="ln"> 73&lt;/span> &lt;span class="n">__list_del&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">entry&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 74&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 75&lt;/span>
&lt;span class="ln"> 76&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kr">inline&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">list_del&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 77&lt;/span> &lt;span class="n">__list_del_entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 78&lt;/span> &lt;span class="n">entry&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 79&lt;/span> &lt;span class="n">entry&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 80&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 81&lt;/span>
&lt;span class="ln"> 82&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln"> 83&lt;/span>&lt;span class="cm"> * list_empty - tests whether a list is empty
&lt;/span>&lt;span class="ln"> 84&lt;/span>&lt;span class="cm"> * @head: the list to test.
&lt;/span>&lt;span class="ln"> 85&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln"> 86&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kr">inline&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">list_empty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 87&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">next&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 88&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 89&lt;/span>
&lt;span class="ln"> 90&lt;/span>&lt;span class="cp">#define offsetof(TYPE, MEMBER) ((size_t)&amp;amp;((TYPE *)0)-&amp;gt;MEMBER)
&lt;/span>&lt;span class="ln"> 91&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 92&lt;/span>&lt;span class="cp">#define container_of(ptr, type, member) ({ \
&lt;/span>&lt;span class="ln"> 93&lt;/span>&lt;span class="cp"> void *__mptr = (void *)(ptr); \
&lt;/span>&lt;span class="ln"> 94&lt;/span>&lt;span class="cp"> ((type *)(__mptr - offsetof(type, member))); })
&lt;/span>&lt;span class="ln"> 95&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 96&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln"> 97&lt;/span>&lt;span class="cm"> * list_entry - get the struct for this entry
&lt;/span>&lt;span class="ln"> 98&lt;/span>&lt;span class="cm"> * @ptr: the &amp;amp;struct list_head pointer.
&lt;/span>&lt;span class="ln"> 99&lt;/span>&lt;span class="cm"> * @type: the type of the struct this is embedded in.
&lt;/span>&lt;span class="ln">100&lt;/span>&lt;span class="cm"> * @member: the name of the list_head within the struct.
&lt;/span>&lt;span class="ln">101&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln">102&lt;/span>&lt;span class="cp">#define list_entry(ptr, type, member) \
&lt;/span>&lt;span class="ln">103&lt;/span>&lt;span class="cp"> container_of(ptr, type, member)
&lt;/span>&lt;span class="ln">104&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln">105&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln">106&lt;/span>&lt;span class="cm"> * list_first_entry - get the first element from a list
&lt;/span>&lt;span class="ln">107&lt;/span>&lt;span class="cm"> * @ptr: the list head to take the element from.
&lt;/span>&lt;span class="ln">108&lt;/span>&lt;span class="cm"> * @type: the type of the struct this is embedded in.
&lt;/span>&lt;span class="ln">109&lt;/span>&lt;span class="cm"> * @member: the name of the list_head within the struct.
&lt;/span>&lt;span class="ln">110&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="ln">111&lt;/span>&lt;span class="cm"> * Note, that list is expected to be not empty.
&lt;/span>&lt;span class="ln">112&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln">113&lt;/span>&lt;span class="cp">#define list_first_entry(ptr, type, member) \
&lt;/span>&lt;span class="ln">114&lt;/span>&lt;span class="cp"> list_entry((ptr)-&amp;gt;next, type, member)
&lt;/span>&lt;span class="ln">115&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln">116&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln">117&lt;/span>&lt;span class="cm"> * list_last_entry - get the last element from a list
&lt;/span>&lt;span class="ln">118&lt;/span>&lt;span class="cm"> * @ptr: the list head to take the element from.
&lt;/span>&lt;span class="ln">119&lt;/span>&lt;span class="cm"> * @type: the type of the struct this is embedded in.
&lt;/span>&lt;span class="ln">120&lt;/span>&lt;span class="cm"> * @member: the name of the list_head within the struct.
&lt;/span>&lt;span class="ln">121&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="ln">122&lt;/span>&lt;span class="cm"> * Note, that list is expected to be not empty.
&lt;/span>&lt;span class="ln">123&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln">124&lt;/span>&lt;span class="cp">#define list_last_entry(ptr, type, member) \
&lt;/span>&lt;span class="ln">125&lt;/span>&lt;span class="cp"> list_entry((ptr)-&amp;gt;prev, type, member)
&lt;/span>&lt;span class="ln">126&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln">127&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln">128&lt;/span>&lt;span class="cm"> * list_for_each - iterate over a list
&lt;/span>&lt;span class="ln">129&lt;/span>&lt;span class="cm"> * @pos: the &amp;amp;struct list_head to use as a loop cursor.
&lt;/span>&lt;span class="ln">130&lt;/span>&lt;span class="cm"> * @head: the head for your list.
&lt;/span>&lt;span class="ln">131&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln">132&lt;/span>&lt;span class="cp">#define list_for_each(pos, head) \
&lt;/span>&lt;span class="ln">133&lt;/span>&lt;span class="cp"> for (pos = (head)-&amp;gt;next; pos != (head); pos = pos-&amp;gt;next)
&lt;/span>&lt;span class="ln">134&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln">135&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;span class="ln">136&lt;/span>&lt;span class="cm"> * list_for_each_prev - iterate over a list backwards
&lt;/span>&lt;span class="ln">137&lt;/span>&lt;span class="cm"> * @pos: the &amp;amp;struct list_head to use as a loop cursor.
&lt;/span>&lt;span class="ln">138&lt;/span>&lt;span class="cm"> * @head: the head for your list.
&lt;/span>&lt;span class="ln">139&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln">140&lt;/span>&lt;span class="cp">#define list_for_each_prev(pos, head) \
&lt;/span>&lt;span class="ln">141&lt;/span>&lt;span class="cp"> for (pos = (head)-&amp;gt;prev; pos != (head); pos = pos-&amp;gt;prev)
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>main.c&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;time.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;linuxlist.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">_sCharacter&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">hp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">mp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">exp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">atk&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">def&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">ats&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">adf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">spd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">sCharacter&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="n">sCharacter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">allocCharacter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">sCharacter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">newComer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sCharacter&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">26&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sc">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">26&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sc">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">hp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">mp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">exp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">atk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">def&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ats&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">adf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">spd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">34&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">newComer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">36&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">37&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">printCharacter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sCharacter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">one&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%04d) &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">one&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">39&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%8s &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">one&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">40&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">one&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">hp&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="n">ptr&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">one&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">spd&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="n">ptr&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">41&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%3d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">43&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">44&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">45&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">46&lt;/span> &lt;span class="n">LIST_HEAD&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">char_list_head&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">47&lt;/span> &lt;span class="n">srand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln">48&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">49&lt;/span> &lt;span class="n">sCharacter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">newComer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">allocCharacter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">50&lt;/span> &lt;span class="n">list_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newComer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">char_list_head&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">51&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">52&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">list_head&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">listptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">53&lt;/span> &lt;span class="n">list_for_each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">listptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">char_list_head&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">54&lt;/span> &lt;span class="n">sCharacter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">cptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">list_entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">listptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sCharacter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">55&lt;/span> &lt;span class="n">printCharacter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cptr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">56&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">57&lt;/span> &lt;span class="cm">/*
&lt;/span>&lt;span class="ln">58&lt;/span>&lt;span class="cm"> list_for_each_prev(listptr, &amp;amp;char_list_head) {
&lt;/span>&lt;span class="ln">59&lt;/span>&lt;span class="cm"> sCharacter *cptr = list_entry(listptr, sCharacter, list);
&lt;/span>&lt;span class="ln">60&lt;/span>&lt;span class="cm"> printCharacter(cptr);
&lt;/span>&lt;span class="ln">61&lt;/span>&lt;span class="cm"> }
&lt;/span>&lt;span class="ln">62&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="ln">63&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">64&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>程式設計(二)-07：Some Tricks</title><link>https://blog.smallten.tk/p/computer_programming_2-07/</link><pubDate>Tue, 13 Jul 2021 21:39:10 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-07/</guid><description>&lt;h1 id="predefined-macros">Predefined Macros&lt;/h1>
&lt;h2 id="standard-predefined-macros">Standard Predefined Macros&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;line: %d &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__LINE__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file: %s &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__FILE__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;function: %s &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__FUNCTION__&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// gcc
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;function: %s &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__func__&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// C99
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;time: %s &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__TIME__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;date: %s &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__DATE__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;STDC: %d &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__STDC__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;STDC_VERSION: %ld &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__STDC_VERSION__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;TIMESTAMP: %s &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__TIMESTAMP__&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>我們可以怎麼使用這些 Macros ?
&lt;ul>
&lt;li>&lt;code>fprintf(stderr, &amp;quot;Internal␣error: at %s, line %d. ver %s %s&amp;quot;, __FILE__, __LINE__, __DATE__, __TIME__);&lt;/code>&lt;/li>
&lt;li>Define when Compiling
&lt;ul>
&lt;li>&lt;code>gcc -D__DEBUG__ debug.c&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello World!!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="cp">#ifdef __DEBUG__
&lt;/span>&lt;span class="ln">5&lt;/span>&lt;span class="cp">&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;debug!!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="cp">#endif
&lt;/span>&lt;span class="ln">7&lt;/span>&lt;span class="cp">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">8&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Other GCC Predefined MACROs
&lt;ul>
&lt;li>&lt;a class="link" href="https://gcc.gnu.org/onlinedocs/cpp/Common-Predefined-Macros.html" target="_blank" rel="noopener"
>Common Predefined Macros&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="comparing-unsigned-integers">Comparing Unsigned Integers&lt;/h1>
&lt;ul>
&lt;li>When comparisons between signed and unsigned integers, C will force the signed type to unsigned.&lt;/li>
&lt;li>C99 and C11 section 6.3.1.8.&lt;/li>
&lt;li>It is hard to debug since it looks so nature.&lt;/li>
&lt;/ul>
&lt;h1 id="call-functions-at-program-termination">Call Functions at Program Termination&lt;/h1>
&lt;h3 id="atexit">atexit&lt;/h3>
&lt;p>&lt;code>int atexit(void (*function)(void));&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Register a Function to be Called at Normal Process Termination&lt;/li>
&lt;li>The atexit() function registers the given function to be called at normal process termination, either via exit(3) or via return from the program’s main(). Functions so registered are called in the reverse order of their registration; no arguments are passed.&lt;/li>
&lt;li>The atexit() function returns the value 0 if successful; otherwise it returns a nonzero value.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Goodbye Foo!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">bar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Goodbye Bar!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">wchar_t&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">atexit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">atexit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">foo&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="system-and-more">system and more&lt;/h1>
&lt;h3 id="system-execute-a-shell-command">System: Execute a Shell Command&lt;/h3>
&lt;p>&lt;code>int system(const char *command);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>The system() library function uses fork(2) to create a child process that executes the shell command specified in command.&lt;/li>
&lt;li>system() returns after the command has been completed.&lt;/li>
&lt;/ul>
&lt;h4 id="fork">fork&lt;/h4>
&lt;ul>
&lt;li>fork() creates a new process by duplicating the calling process.&lt;/li>
&lt;li>This is an important function. However, I will not talk too much about this function but you will learn more in System Programming.
&lt;figure style="flex-grow: 139; flex-basis: 335px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-07/computer_programming_2-07-01.jpg" data-size="599x429">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-07/computer_programming_2-07-01.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-07/computer_programming_2-07-01_hu58d3ef6e379e47a9e3ed9a35c4d45175_58420_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-07/computer_programming_2-07-01_hu58d3ef6e379e47a9e3ed9a35c4d45175_58420_1024x0_resize_q75_box.jpg 1024w"
width="599"
height="429"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>system() is a &lt;!-- raw HTML omitted -->blocking&lt;!-- raw HTML omitted --> function.
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;while true; do echo &amp;#39;Hit CTRL+C&amp;#39;; sleep 1; done&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>The system() returns &lt;code>-1&lt;/code> means &lt;!-- raw HTML omitted -->your system cannot fork another process instead of your command fails.&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>You can try a command to delete a non-existing file.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Every system call is &lt;!-- raw HTML omitted -->independent&lt;!-- raw HTML omitted -->.
&lt;ul>
&lt;li>So you cannot setup an environment variable and hope other other system calls use this variable.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="popen">popen&lt;/h3>
&lt;p>&lt;code>FILE *popen(const char *command, const char *type);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>The popen() function opens a process by creating a pipe, forking, and invoking the shell.&lt;/li>
&lt;li>The popen() function returns NULL if the fork(2) or pipe(2) calls fail, or if it cannot allocate memory.&lt;/li>
&lt;li>別忘了使用 &lt;code>pclose&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">512&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">FILE&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pPing&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">counter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">pPing&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">popen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ping -c 4 www.google.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pPing&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;error end&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fgets&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pPing&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">counter&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;--- %d ---&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">counter&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">pclose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pPing&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="assert">assert&lt;/h1>
&lt;ul>
&lt;li>In computer programming, an assertion is a statement that a &lt;!-- raw HTML omitted -->predicate&lt;!-- raw HTML omitted --> (Boolean-valued function, i.e. a true-false expression) is always true at that point in code execution.&lt;/li>
&lt;li>It can &lt;strong>help&lt;/strong> a programmer read the code, help a compiler compile it, or help the program detect its own defects.&lt;/li>
&lt;li>If the assertion check is not in fact true, an assertion failure, &lt;!-- raw HTML omitted -->the program considers itself to be broken&lt;!-- raw HTML omitted --> and typically deliberately &lt;strong>crashes&lt;/strong> or throws an assertion failure exception.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;code>void assert(scalar expression);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>The macro assert() prints an error message to standard error and terminates the program by calling abort(3) if expression is false.&lt;/li>
&lt;li>The purpose of this macro is to help programmers find bugs in their programs.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;assert.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">FILE&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">fd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fopen&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;file.txt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="n">assert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="n">fclose&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>我可以簡單的使用 &lt;code>if-else&lt;/code> 去確認並回傳值。那為什麼還要使用 &lt;code>assert&lt;/code>?
&lt;ul>
&lt;li>這取決於您是否可以優雅地處理錯誤。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Note:
&lt;ul>
&lt;li>一般來說，&lt;code>assert&lt;/code> 被用在開發階段。&lt;/li>
&lt;li>當發佈時，請移除所有 &lt;code>assert&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="qsort">qsort&lt;/h1>
&lt;p>&lt;code>void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));&lt;/code>&lt;/p>
&lt;ul>
&lt;li>The qsort() function sorts an array with nmemb elements of size size. The base argument points to the start of the array.&lt;/li>
&lt;li>The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. If two members compare as equal, their order in the sorted array is undefined.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">values&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">88&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">56&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">25&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">cmpfunc&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Before sorting the list is:&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">qsort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">cmpfunc&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;After sorting the list is:&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="libcurl">libcurl&lt;/h1>
&lt;ul>
&lt;li>安裝: &lt;code>sudo apt-get install libcurl4 libcurl4-openssl-dev&lt;/code>&lt;/li>
&lt;li>使用: &lt;a class="link" href="https://curl.se/libcurl/c/example.html" target="_blank" rel="noopener"
>Example codes&lt;/a>&lt;/li>
&lt;li>編譯: &lt;code>gcc -I curl-7.63.0/include -L curl-7.63.0/lib/.libs/ opendata.c -lcurl&lt;/code> (需依照情況自行修改)
&lt;ul>
&lt;li>Makefile:
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-makefile" data-lang="makefile">&lt;span class="ln">1&lt;/span>&lt;span class="nv">CFLAGS&lt;/span> &lt;span class="o">=&lt;/span> -O3 -Wall
&lt;span class="ln">2&lt;/span>&lt;span class="nv">INCLUDE&lt;/span> &lt;span class="o">=&lt;/span> -I curl-7.63.0/include
&lt;span class="ln">3&lt;/span>&lt;span class="nv">LIB&lt;/span> &lt;span class="o">=&lt;/span> -L curl-7.63.0/lib/.libs/
&lt;span class="ln">4&lt;/span>&lt;span class="nf">all&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">opendata&lt;/span>.&lt;span class="n">c&lt;/span>
&lt;span class="ln">5&lt;/span> gcc &lt;span class="si">${&lt;/span>&lt;span class="nv">CFLAGS&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">INCLUDE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">LIB&lt;/span>&lt;span class="si">}&lt;/span> opendata.c -o opendata -lcurl
&lt;span class="ln">6&lt;/span>&lt;span class="nf">clean&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">7&lt;/span> rm -f opendata
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>程式設計(二)-06：Macro</title><link>https://blog.smallten.tk/p/computer_programming_2-06/</link><pubDate>Tue, 13 Jul 2021 20:47:06 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-06/</guid><description>&lt;h1 id="preprocessor-預處理器">Preprocessor 預處理器&lt;/h1>
&lt;ul>
&lt;li>在編譯器將您的源代碼編譯為組語前，還有一個稱為預處理的附加階段。&lt;/li>
&lt;li>Objective: Produce a source code file with preprocessing commands properly sorted out.
&lt;figure style="flex-grow: 232; flex-basis: 558px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-06/computer_programming_2-06-01.jpg" data-size="896x385">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-06/computer_programming_2-06-01.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-06/computer_programming_2-06-01_huf7812d2979363ef4f58bc7b553e0d967_57019_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-06/computer_programming_2-06-01_huf7812d2979363ef4f58bc7b553e0d967_57019_1024x0_resize_q75_box.jpg 1024w"
width="896"
height="385"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>Preprocessor commands are known as &lt;!-- raw HTML omitted -->Directives&lt;!-- raw HTML omitted -->.&lt;/li>
&lt;li>Preprocessor provides certain features, which are called &lt;!-- raw HTML omitted -->preprocessor directives&lt;!-- raw HTML omitted -->.&lt;/li>
&lt;li>Preprocessor directive 以 &lt;code>#&lt;/code> 為開頭。(例如：&lt;code>#include &amp;lt;stdio.h&amp;gt;&lt;/code>)&lt;/li>
&lt;li>Preprocessor directives 可以被放在程式中的任何地方。但建議放在開頭，並且每個必須獨立一行。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#define MACRO_DEMO 123
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;demo:␣%d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MACRO_DEMO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>以 &lt;code>gcc -E main.c&lt;/code> 查看預處理後的狀態。&lt;/li>
&lt;/ul>
&lt;h1 id="macro-巨集">Macro 巨集&lt;/h1>
&lt;ul>
&lt;li>&lt;code>#define&lt;/code> is known as &lt;!-- raw HTML omitted -->macro expansion&lt;!-- raw HTML omitted -->.&lt;/li>
&lt;li>General Form: &lt;code>#define macro_template macro_expansion&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="macro-expansion">Macro Expansion&lt;/h2>
&lt;ul>
&lt;li>Preprocessor searches for macro definition.&lt;/li>
&lt;li>After finding macro definition, it searches the whole program for &lt;strong>macro_template&lt;/strong>.&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->Replace&lt;!-- raw HTML omitted --> every &lt;strong>macro_template&lt;/strong> with &lt;strong>macro_expansion&lt;/strong>.
&lt;ul>
&lt;li>Replacement will not occur if the template is in a quoted string.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Notes:
&lt;ul>
&lt;li>通常 macro_template 會使用&lt;!-- raw HTML omitted -->大寫字母&lt;!-- raw HTML omitted -->&lt;/li>
&lt;li>不要使用分號 &lt;code>;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>為什麼要用巨集?
&lt;ul>
&lt;li>為了寫出更高效率的程式。&lt;/li>
&lt;li>提高程式的可讀性。&lt;/li>
&lt;li>定義的巨集名稱可作為其他定義的一部分。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>巨集可以像函式一樣擁有 arguments。&lt;/li>
&lt;li>Notes：
&lt;ul>
&lt;li>在定義巨集時，參數和名稱之間不允許有空格。&lt;/li>
&lt;li>Macro expansions 應該用括號括起來。&lt;/li>
&lt;li>使用 &lt;code>\&lt;/code> 將巨集拆分為多行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="macro-vs-function">Macro vs. Function&lt;/h2>
&lt;h3 id="macro">Macro&lt;/h3>
&lt;ul>
&lt;li>單純替換&lt;/li>
&lt;li>雖然你可能沒感覺，但比函式更快。&lt;/li>
&lt;/ul>
&lt;h3 id="function">Function&lt;/h3>
&lt;ul>
&lt;li>傳遞參數 -&amp;gt; 執行 -&amp;gt; 回傳結果&lt;/li>
&lt;li>支援&lt;!-- raw HTML omitted -->遞迴&lt;!-- raw HTML omitted -->&lt;/li>
&lt;/ul>
&lt;h2 id="inline-functions">inline Functions&lt;/h2>
&lt;ul>
&lt;li>&lt;code>inline&lt;/code> is a CPP keyword.&lt;/li>
&lt;li>C includes this keyword from C99. Though GNU C (and some other compilers) had inline functions long before standard C.&lt;/li>
&lt;li>Comparison:
&lt;ol>
&lt;li>inline is just a suggestion.&lt;/li>
&lt;li>inline will check types.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>I will not talk too much about this keyword since it is different from CPP. I do not want to mislead you.&lt;/li>
&lt;li>If you are interested in this topic, please read &lt;a class="link" href="http://www.greenend.org.uk/rjk/tech/inline.html" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h1 id="file-inclusion">File Inclusion&lt;/h1>
&lt;ul>
&lt;li>Why File Inclusion?
&lt;ul>
&lt;li>Divide a program in multiple files.
&lt;ul>
&lt;li>Each file contains related functions.&lt;/li>
&lt;li>How to classify functions. Up to you.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Some functions or macros are required in lot of programs.
&lt;ul>
&lt;li>Put them in a file. Make them a library.&lt;/li>
&lt;li>Include them when you need them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What does Inclusion Mean?
&lt;ul>
&lt;li>Nothing but simply &lt;!-- raw HTML omitted -->copy and paste&lt;!-- raw HTML omitted -->.&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->Nested Inclusion&lt;!-- raw HTML omitted --> is supported.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="conditional-compilation">Conditional Compilation&lt;/h1>
&lt;ul>
&lt;li>Write one code to run on different environments.
&lt;ul>
&lt;li>&lt;code>#if&lt;/code>: if.&lt;/li>
&lt;li>&lt;code>#else&lt;/code>: else.&lt;/li>
&lt;li>&lt;code>#elif&lt;/code>: else if.&lt;/li>
&lt;li>&lt;code>#endif&lt;/code>: end if.&lt;/li>
&lt;li>&lt;code>#ifdef&lt;/code>: if defined.&lt;/li>
&lt;li>&lt;code>#ifndef&lt;/code>: if not defined.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="ifdef-and-endif">ifdef and endif&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#ifdef macroname
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span> &lt;span class="n">statement&lt;/span> &lt;span class="n">sequence&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="cp">#endif
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果 macroname 被定義了，那麼 &lt;code>#ifdef&lt;/code> 和 &lt;code>#endif&lt;/code> 之間的程式將被執行。&lt;/li>
&lt;li>範例：
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#ifndef TEST_H
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#define TEST_H
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="p">...&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="cp">#endif
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>但也可用 &lt;code>#pragma once&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>&lt;code>gcc -D OS_LINUX os_dependent.c&lt;/code>&lt;/li>
&lt;li>&lt;code>-D&lt;/code>: Predefine name as a macro, with definition 1.&lt;/li>
&lt;li>So one code can be executed on different OSs. What you need to do is to build your code with different definitions.&lt;/li>
&lt;li>This is a very useful technique. Let’s see a real case (&lt;a class="link" href="https://github.com/DaveGamble/cJSON/blob/master/cJSON.h" target="_blank" rel="noopener"
>cJSON&lt;/a>).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>請自行去了解 &lt;code>#&lt;/code> 及 &lt;code>##&lt;/code> 在巨集中的作用。&lt;/li>
&lt;/ul></description></item><item><title>程式設計(二)-05：Variable Length Arguments List</title><link>https://blog.smallten.tk/p/computer_programming_2-05/</link><pubDate>Mon, 12 Jul 2021 21:57:26 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-05/</guid><description>&lt;h1 id="program-argument">Program Argument&lt;/h1>
&lt;h3 id="argc-argv">argc, argv&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;argc: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">argc&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;argv[%d]: %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>誰呼叫了 main 函式?&lt;/li>
&lt;li>誰提供了 &lt;code>argc&lt;/code> 和 &lt;code>argv&lt;/code> 到 main 函式?&lt;/li>
&lt;li>Is &lt;code>main()&lt;/code> the actual starting entry point?
&lt;ul>
&lt;li>No! Actually, the process start from &lt;code>_start&lt;/code> which is defined in &lt;code>crt1.o&lt;/code>.&lt;/li>
&lt;li>等等&amp;hellip; 我並沒有使用 &lt;code>crt1.o&lt;/code> 呀!&lt;/li>
&lt;li>實際上是有的。請查看 &lt;code>gcc -v&lt;/code>
&lt;code>$ nm /usr/lib/x86_64-linux-gnu/crt1.o&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Simplified C Linking Process
&lt;figure style="flex-grow: 137; flex-basis: 329px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-05/computer_programming_2-05-01.jpg" data-size="903x657">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-05/computer_programming_2-05-01.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-05/computer_programming_2-05-01_hu609b65fe33cfb39abc5fd9afd4fd484b_119236_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-05/computer_programming_2-05-01_hu609b65fe33cfb39abc5fd9afd4fd484b_119236_1024x0_resize_q75_box.jpg 1024w"
width="903"
height="657"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>main() 是如何取得 argc, argv 的?
&lt;ul>
&lt;li>Actually, &lt;code>_start&lt;/code> will prepare argc and argv first.&lt;/li>
&lt;li>Then &lt;code>_start&lt;/code> will register main function to &lt;code>__libc_start_main&lt;/code>.&lt;/li>
&lt;li>&lt;code>_start&lt;/code> will call &lt;code>__libc_start_main&lt;/code> and &lt;code>__libc_start_main&lt;/code> will call main.&lt;/li>
&lt;li>More details will be described in Assembly.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="getopt">getopt&lt;/h3>
&lt;p>&lt;code>int getopt(int argc, char * const argv[], const char *optstring);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>The getopt() function parses the command-line arguments. Its arguments argc and argv are the argument count and array as passed to the main() function on program invocation. An element of argv that starts with ’-’ (and is not exactly ”-” or ”–”) is an option element. The characters of this element (aside from the initial ’-’) are option characters. If getopt() is called repeatedly, it returns successively each of the option characters from each of the option elements.&lt;/li>
&lt;li>提醒：這是一個 &lt;code>POSIX 標準&lt;/code>而不是 C 標準。&lt;/li>
&lt;li>extern 變數
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">extern&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">optarg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="k">extern&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">optind&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">opterr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">optopt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>這意味著我們可以在程式中使用這些變數。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getopt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;ab:&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: -a&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: -b, %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">optarg&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;?&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: ?&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: unknown&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>optstring
&lt;ul>
&lt;li>optstring 是一個包含合法選項字符的字符串。&lt;/li>
&lt;li>Example: &lt;code>&amp;quot;abc&amp;quot;&lt;/code> implies supporting &lt;code>-a&lt;/code>, &lt;code>-b&lt;/code>, &lt;code>-c&lt;/code>.&lt;/li>
&lt;li>&lt;code>-ab&lt;/code>, &lt;code>-bc&lt;/code>, &lt;code>-ac&lt;/code>, &lt;code>-abc&lt;/code> are also supported.&lt;/li>
&lt;li>如果這樣的字符後跟一個冒號，則意味著該選項需要一個參數。 &lt;code>optarg&lt;/code> 為參數值。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>回傳值
&lt;ul>
&lt;li>如果成功找到選項，則 getopt() 回傳選項字符。&lt;/li>
&lt;li>如果所有命令行選項都已解析，則 getopt() 回傳 -1。&lt;/li>
&lt;li>如果 getopt() 遇到不在 optstring 中的選項字符，則返回 &lt;code>'?'&lt;/code>。&lt;/li>
&lt;li>如果 getopt() 遇到缺少參數的選項，則返回值取決於 optstring 中的第一個字符：
&lt;ul>
&lt;li>如果是&lt;code>':'&lt;/code>，則返回&lt;code>':'&lt;/code>；&lt;/li>
&lt;li>否則返回&lt;code>'?'&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="getopt_long">getopt_long&lt;/h3>
&lt;p>&lt;code>int getopt_long(int argc, char * const argv[], const char *optstring, const struct option *longopts, int *longindex);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>The getopt_long() function works like getopt() except that it also accepts long options, started with two dashes. If the program accepts only long options, then optstring should be specified as an empty string (””), not NULL. Long option names may be abbreviated if the abbreviation is unique or is an exact match for some defined option. A long option may take a parameter, of the form –arg=param or –arg param.&lt;/li>
&lt;li>If longindex is not NULL, it points to a variable which is set to the index of the long option relative to longopts.&lt;/li>
&lt;li>struct option
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">option&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">has_arg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>name: the name of the long option.&lt;/li>
&lt;li>has_arg:
&lt;ul>
&lt;li>0: no arguments.&lt;/li>
&lt;li>1: required arguments.&lt;/li>
&lt;li>2: optional arguments.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>flag: specifies how results are returned for a long option.&lt;/li>
&lt;li>val: the value to return, or to load into the variable pointed to by flag.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;getopt.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">option&lt;/span> &lt;span class="n">long_options&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;all&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;break&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">13&lt;/span>
&lt;span class="ln">14&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getopt_long&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;abc:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">long_options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;index: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: -a&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: -b&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: -c, %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">optarg&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;?&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: ?&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;option: unknown&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">36&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">37&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="variable-length-arguments">Variable Length Arguments&lt;/h1>
&lt;ul>
&lt;li>可變長度參數是一項功能，允許函數接收任意數量的參數。&lt;/li>
&lt;li>可變數量的參數由三個點表示 &lt;code>...&lt;/code>。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdarg.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">va_start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">last&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">va_end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">va_copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">va_list&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">va_list&lt;/span> &lt;span class="n">src&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Actually, they are macros instead of functions.&lt;/li>
&lt;li>範例一： printargs.c
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdarg.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="cm">/* print all args one at a time until a negative argument is seen;
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="cm">all args are assumed to be of int type */&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">printargs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">arg1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">va_start&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arg1&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arg1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">int32_t&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;%d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">va_end&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">ap&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">putchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sc">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">printargs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">84&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">97&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">printargs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">84&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">51&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">printargs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="n">printargs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">22&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>範例二： avg.c
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdarg.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">double&lt;/span> &lt;span class="nf">average&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">va_list&lt;/span> &lt;span class="n">valist&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">va_start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">valist&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">valist&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">int32_t&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">va_end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">valist&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Average of { 3, 4 } = %lf&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">average&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Average of { 5, 10, 15 } = %lf&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">average&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>程式設計(二)-04：File Processing-02</title><link>https://blog.smallten.tk/p/computer_programming_2-04/</link><pubDate>Sat, 08 May 2021 17:23:11 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-04/</guid><description>&lt;ul>
&lt;li>如何顯示 BMP 檔 ?
&lt;ul>
&lt;li>有很多 libraries 可以幫助您做到這一點。實際上，您應該使用它們而不是從頭開始開發。&lt;/li>
&lt;li>如何在螢幕上顯示圖像？
&lt;ul>
&lt;li>您必須至少學習一個 GUI 庫，例如 Gtk、Qt 等。&lt;/li>
&lt;li>我的建議：Qt。但是，這是一個 C++ 框架。&lt;/li>
&lt;li>了解如何使用 GUI 平台提供的功能顯示圖像。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="gtk">GTK&lt;/h1>
&lt;ul>
&lt;li>GTK（以前稱為 GTK+、GIMP ToolKit）是一個免費的開源跨平台的部件工具箱 (widget toolkit)，用於創建圖形用戶界面（GUIs）。&lt;/li>
&lt;li>GTK 是用 C 語言所編寫的物件導向的部件工具箱。它使用 GObject（即 GLib 物件系統）進行物件導向。
&lt;ul>
&lt;li>因此，不要告訴我 C 不能物件導向。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>安裝：sudo apt install libgtk-3-dev&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="sdl">SDL&lt;/h1>
&lt;ul>
&lt;li>Simple DirectMedia Layer&lt;/li>
&lt;li>SDL是跨平台的軟件開發庫，為計算機多媒體硬件組件提供硬件抽象層。
&lt;ul>
&lt;li>視頻&lt;/li>
&lt;li>聲音的&lt;/li>
&lt;li>輸入設備&lt;/li>
&lt;li>光盤&lt;/li>
&lt;li>螺紋&lt;/li>
&lt;li>共享對象加載&lt;/li>
&lt;li>聯網&lt;/li>
&lt;li>計時器&lt;/li>
&lt;li>3D圖形&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>軟體開發者可以使用它來編寫高性能的電腦遊戲和其他多媒體應用程式。&lt;/li>
&lt;li>SDL 架構 / 範例
&lt;figure style="flex-grow: 119; flex-basis: 285px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-01.jpg" data-size="789x663">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-01.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-01_hue4d52e9742e6093c8d24bd012990f19a_136214_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-01_hue4d52e9742e6093c8d24bd012990f19a_136214_1024x0_resize_q75_box.jpg 1024w"
width="789"
height="663"
loading="lazy"
>
&lt;/a>
&lt;/figure> &lt;figure style="flex-grow: 157; flex-basis: 378px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-02.jpg" data-size="799x506">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-02.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-02_hu34191f78c5c7c4ed21a8a17ff1a3ddc2_390701_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-02_hu34191f78c5c7c4ed21a8a17ff1a3ddc2_390701_1024x0_resize_q75_box.jpg 1024w"
width="799"
height="506"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>SDL Object
&lt;ul>
&lt;li>&lt;code>SDL_Window&lt;/code>：包含有關 Window 本身的所有信息的結構：大小、位置、全螢幕、邊框等。&lt;/li>
&lt;li>&lt;code>SDL_Renderer&lt;/code>：處理所有渲染的結構。它與 &lt;code>SDL_Window&lt;/code> 綁定在一起，因此只能在該 &lt;code>SDL_Window&lt;/code> 中呈現。&lt;/li>
&lt;li>&lt;code>SDL_Textures&lt;/code> 和 &lt;code>SDL_Surface&lt;/code>：&lt;code>SDL_Renderer&lt;/code> 渲染&lt;code>SDL_Texture&lt;/code>(存儲一個元素的像素資訊)。這是 &lt;code>SDL_Surface&lt;/code> 的新版本，他們幾乎相同。
&lt;ul>
&lt;li>重要的區別是 &lt;code>SDL_Surface&lt;/code> 使用軟件渲染（通過CPU），而 &lt;code>SDL_Texture&lt;/code> 使用硬件渲染（通過GPU）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>安裝：&lt;code>sudo apt-get install libsdl2-dev libsdl2-image-dev&lt;/code>&lt;/li>
&lt;li>Makefile
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Makefile" data-lang="Makefile">&lt;span class="ln">1&lt;/span>&lt;span class="nv">CFLAGS&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="sb">`&lt;/span>sdl2-config --libs --cflags&lt;span class="sb">`&lt;/span> -ggdb3 -O0 --std&lt;span class="o">=&lt;/span>c99 -Wall -lSDL2_image -lm
&lt;span class="ln">2&lt;/span>&lt;span class="nf">all&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">example&lt;/span>.&lt;span class="n">c&lt;/span>
&lt;span class="ln">3&lt;/span> gcc example.c -o example &lt;span class="k">$(&lt;/span>CFLAGS&lt;span class="k">)&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="nf">clean&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">5&lt;/span> rm example
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="file-descriptor">File Descriptor&lt;/h1>
&lt;ul>
&lt;li>POSIX C Implementation
&lt;ul>
&lt;li>C 標准定義了語法和標準庫，但不規範實現。&lt;/li>
&lt;li>所以在 Linux 中，fopen、fclose、printf、scanf、fprintf、fscanf、fread 和 fwrite 是通過低階 API 實現的：
&lt;ul>
&lt;li>open&lt;/li>
&lt;li>read&lt;/li>
&lt;li>write&lt;/li>
&lt;li>close&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>現在，我們將使用這些較低級別的 API 來訪問文件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="open-close">open, close&lt;/h3>
&lt;p>&lt;code>int open(const char *pathname, int flags);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Given a pathname for a file, open() returns a file descriptor, a small, nonnegative integer for use in subsequent system calls.&lt;/li>
&lt;li>open() returns the new file descriptor, or -1 if an error occurred.&lt;/li>
&lt;li>The argument flags must include one of the following access modes: &lt;code>O_RDONLY&lt;/code>, &lt;code>O_WRONLY&lt;/code>, or &lt;code>O_RDWR&lt;/code>.
&lt;code>int close(int fd);&lt;/code>&lt;/li>
&lt;li>close() closes a file descriptor, so that it no longer refers to any file and may be reused. close() returns zero on success. On error, -1 is returned, and errno is set appropriately.&lt;/li>
&lt;li>For more flags, please read manual.&lt;/li>
&lt;/ul>
&lt;h3 id="read-write">read, write&lt;/h3>
&lt;p>&lt;code>ssize_t read(int fd, void *buf, size_t count);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>read() attempts to read up to count bytes from file descriptor fd into the buffer starting at buf. On files that support seeking, the read operation commences at the current file offset, and the file offset is incremented by the number of bytes read. If the current file offset is at or past the end of file, no bytes are read, and read() returns zero.
&lt;code>ssize_t write(int fd, const void *buf, size_t count);&lt;/code>&lt;/li>
&lt;li>write() writes up to count bytes from the buffer pointed buf to the file referred to by the file descriptor fd.&lt;/li>
&lt;li>How about seek? use &lt;code>lseek&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="fstat">fstat&lt;/h3>
&lt;p>&lt;code>int fstat(int fd, struct stat *buf);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>These functions return information about a file, in the buffer pointed to by buf.&lt;/li>
&lt;/ul>
&lt;h1 id="mmap">mmap&lt;/h1>
&lt;p>&lt;figure style="flex-grow: 135; flex-basis: 324px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-03.png" data-size="504x373">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-03.png"
srcset="https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-03_huc7b7701c1b95c48223e934783f4e517f_25210_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_2-04/computer_programming_2-04-03_huc7b7701c1b95c48223e934783f4e517f_25210_1024x0_resize_box_2.png 1024w"
width="504"
height="373"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>&lt;code>void *mmap(void *addr, size_t length, int prot, int flags,int fd, off_t offset);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>mmap() creates a new mapping in the virtual address space of the calling process. The starting address for the new mapping is specified in addr. The length argument specifies the length of the mapping.&lt;/li>
&lt;li>If addr is NULL, then the kernel chooses the address at which to create the mapping.&lt;/li>
&lt;li>現在您可以將返回地址視為一個大陣列，您可以直接訪問數據，包括修改數值。&lt;/li>
&lt;li>在使用 mmap 後，請記得要 &lt;code>munmap&lt;/code>。&lt;/li>
&lt;li>&lt;code>mmap()&lt;/code> 不是標準 C 的函式&lt;/li>
&lt;li>&lt;code>MapViewOfFile&lt;/code> function is somewhat equivalent to mmap in Windows.&lt;/li>
&lt;/ul></description></item><item><title>程式設計(二)-03：File Processing-01</title><link>https://blog.smallten.tk/p/computer_programming_2-03/</link><pubDate>Fri, 02 Apr 2021 17:58:22 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-03/</guid><description>&lt;h1 id="file">File&lt;/h1>
&lt;ul>
&lt;li>C 將每個檔案視為一個連續的 bytes stream&lt;/li>
&lt;li>每個檔案以 &lt;code>end-of-file&lt;/code> 為結尾，這是由系統提供而不是文件。
&lt;figure style="flex-grow: 812; flex-basis: 1948px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-01.jpg" data-size="812x100">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-01.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-01_hu792fa457355e68a2355b76d5d56b035a_25287_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-01_hu792fa457355e68a2355b76d5d56b035a_25287_1024x0_resize_q75_box.jpg 1024w"
width="812"
height="100"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>It looks like there is an additional byte appended to the file. However, that additional byte does not exist. Instead, it is a signal raised by your system.&lt;/li>
&lt;li>&lt;code>int feof(FILE *stream);&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="file-stream">File Stream&lt;/h2>
&lt;ul>
&lt;li>Streams 提供了更高級別的介面(interface)讓你存取資料。
&lt;ul>
&lt;li>&lt;code>fprintf&lt;/code>&lt;/li>
&lt;li>&lt;code>fscanf&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>事實上，你已經使用過 file stream !
&lt;ul>
&lt;li>三種標準流
&lt;ol>
&lt;li>標準輸入 0 (standard input.)&lt;/li>
&lt;li>標準輸出 1 (standard output.)&lt;/li>
&lt;li>標準錯誤 2 (standard error.)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>真的嗎? 哪時候呀?&lt;/li>
&lt;li>&lt;code>scanf&lt;/code> -&amp;gt; scanf() 從標準輸入流中讀取輸入&lt;/li>
&lt;li>&lt;code>scanf&lt;/code> 的實作
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...){&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">va_start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vfscanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="n">va_end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">8&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="file-descriptor">File Descriptor&lt;/h2>
&lt;ul>
&lt;li>File descriptor 為輸出入的操作提供了原始的低級介面(interface)。&lt;/li>
&lt;li>在 Linux 中，任何東西都可以被視為一個檔案。
&lt;ul>
&lt;li>Network socker&lt;/li>
&lt;li>Device driver&lt;/li>
&lt;li>Inter-process communication&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>支援哪些操作?
&lt;ul>
&lt;li>&lt;code>open&lt;/code>、&lt;code>read&lt;/code>、&lt;code>write&lt;/code>、&lt;code>close&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果要控制某些詳細的設定，你需要使用 file descriptor 而不是 file stream。&lt;/li>
&lt;/ul>
&lt;h3 id="file-stream-vs-file-descriptor">File Stream vs. File Descriptor&lt;/h3>
&lt;ul>
&lt;li>Structure:
&lt;ul>
&lt;li>Stream: &lt;code>FILE *&lt;/code>&lt;/li>
&lt;li>Descriptor: &lt;code>int&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>可以用 file stream 實現的，就一定可以用 file descriptor 實現，其逆不真。&lt;/li>
&lt;li>File streams 有更多方便的介面(interface)給你使用。&lt;/li>
&lt;/ul>
&lt;h2 id="io-redirection">I/O Redirection&lt;/h2>
&lt;h3 id="stdout">stdout&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 161; flex-basis: 386px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-02.jpg" data-size="890x552">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-02.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-02_hue8705212640a98a2e2334529e9e848d6_118317_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-02_hue8705212640a98a2e2334529e9e848d6_118317_1024x0_resize_q75_box.jpg 1024w"
width="890"
height="552"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;gt;&lt;/code> filename
&lt;ul>
&lt;li>重導向 stdout 到一個檔案&lt;/li>
&lt;li>如果檔案不存在就創建文件，否則就將其覆蓋&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>&amp;gt;&amp;gt;&lt;/code> filename
&lt;ul>
&lt;li>重導向 stdout 到一個檔案&lt;/li>
&lt;li>如果檔案不存在就創建文件，否則就加在後方&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>&lt;code>&amp;gt;&lt;/code> filename&lt;/li>
&lt;li>&lt;code>1&amp;gt;&lt;/code> filename
&lt;ul>
&lt;li>Redirect stdout to file &amp;ldquo;filename&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>&amp;gt;&amp;gt;&lt;/code> filename&lt;/li>
&lt;li>&lt;code>1&amp;gt;&amp;gt;&lt;/code> filename
&lt;ul>
&lt;li>Redirect and append stdout to file &amp;ldquo;filename&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>2&amp;gt;&lt;/code> filename
&lt;ul>
&lt;li>Redirect stderr to file ”filename.”&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>2&amp;gt;&amp;gt;&lt;/code> filename
&lt;ul>
&lt;li>Redirect and append stderr to file ”filename.”&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>&amp;amp;&amp;gt;&lt;/code> filename
&lt;ul>
&lt;li>Redirect stdout, stderr to file ”filename.”&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="stdin">stdin&lt;/h3>
&lt;p>&lt;code>$ . / abs &amp;lt; number.txt&lt;/code>&lt;/p>
&lt;h1 id="text-file-processing">Text File Processing&lt;/h1>
&lt;h3 id="fopen">fopen&lt;/h3>
&lt;p>&lt;code>FILE *fopen(const char *path, const char *mode);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>path：檔案路徑&lt;/li>
&lt;li>mode：
&lt;ul>
&lt;li>&lt;code>r&lt;/code>：read&lt;/li>
&lt;li>&lt;code>w&lt;/code>：write&lt;/li>
&lt;li>&lt;code>a&lt;/code>：append&lt;/li>
&lt;li>更多的選項在手冊中&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Return：&lt;code>FILE *&lt;/code>
&lt;ul>
&lt;li>成功的話，FILE pointer 將被回傳&lt;/li>
&lt;li>如果失敗的話，將回傳 NULL 並且 errno 被設置為表明 error&lt;/li>
&lt;li>永遠記得確認回傳的 pointer!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="fprintf">fprintf&lt;/h3>
&lt;ul>
&lt;li>幾乎和&lt;code>printf&lt;/code>相同，除了你需要給 FILE stream pointer。&lt;/li>
&lt;/ul>
&lt;h3 id="end-of-file-indicator">End-of-File Indicator&lt;/h3>
&lt;ul>
&lt;li>Linu/Mac OS X/UNIX：&lt;code>&amp;lt;Ctrl&amp;gt; d&lt;/code>&lt;/li>
&lt;li>Windows：&lt;code>&amp;lt;Ctrl&amp;gt; z + enter&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="fclose">fclose&lt;/h3>
&lt;p>&lt;code>int fclose(FILE *stream);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>fclose()&lt;/code>&lt;/li>
&lt;li>The fclose() function flushes the stream pointed to by stream (writing any buffered output data using fflush(3)) and closes the underlying file descriptor.&lt;/li>
&lt;li>也就是說，當你 close 時，在 buffer 中的資料將被寫入檔案&lt;/li>
&lt;li>在開檔後記得關上它!! 因為有同時開檔的數量上限。&lt;/li>
&lt;/ul>
&lt;h3 id="fscanf">fscanf&lt;/h3>
&lt;ul>
&lt;li>操作就如同 &lt;code>fprintf&lt;/code>&lt;/li>
&lt;li>當然，檔案應該被以 &lt;code>r&lt;/code> 的模式打開&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>當你使用 &lt;code>fprintf&lt;/code> 或 &lt;code>fscanf&lt;/code> 去處理文字檔時，它蘊含著你清楚地知道檔案的格式&lt;/li>
&lt;li>在這些情況下，輸入的檢查也許就沒那麼重要了，對吧?
&lt;ul>
&lt;li>Yes：畢竟格式由你決定。&lt;/li>
&lt;li>No：有些人可能會修改檔案，並使你讀取它。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="file-position-pointer">File Position Pointer&lt;/h2>
&lt;p>&lt;figure style="flex-grow: 160; flex-basis: 386px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-03.jpg" data-size="784x487">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-03.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-03_hua2b4272fe0830ebb7786617a2f4a12e5_73450_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-03/computer_programming_2-03-03_hua2b4272fe0830ebb7786617a2f4a12e5_73450_1024x0_resize_q75_box.jpg 1024w"
width="784"
height="487"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>所以我們可以返回到開始的位置嗎??
&lt;ul>
&lt;li>為什麼我們需要這麼做? -&amp;gt; 影片倒放&lt;/li>
&lt;li>當然，你可以關掉檔案並重開它。&lt;/li>
&lt;li>但我們有另外的函式可以幫助我們 -&amp;gt; &lt;code>rewind&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="rewind">rewind&lt;/h3>
&lt;p>&lt;code>void rewind(FILE *stream);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>將位置指回檔案的開頭。&lt;/li>
&lt;li>那麼我們想要改變 file pointer 到任何地方呢? -&amp;gt; &lt;code>fseek&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="fseek">fseek&lt;/h3>
&lt;p>&lt;code>int fseek(FILE *stream, long offset, int whence);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>The fseek() function sets the file position indicator for the stream pointed to by stream. The new position, measured in bytes, is obtained by adding offset bytes to the position specified by whence.&lt;/li>
&lt;li>&lt;code>SEEK_SET&lt;/code>：檔案開頭&lt;/li>
&lt;li>&lt;code>SEEK_CUR&lt;/code>：當前位置&lt;/li>
&lt;li>&lt;code>SEEK_END&lt;/code>：end-of-file&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>&lt;code>rewind()&lt;/code> 相當於 &lt;code>fseek(stream, 0L, SEEK_SET)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="ftell">ftell&lt;/h3>
&lt;p>&lt;code>long ftell(FILE *stream);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>告訴你當前所在的位置。&lt;/li>
&lt;/ul>
&lt;h1 id="binary-file-processing">Binary File Processing&lt;/h1>
&lt;h2 id="binary-file">Binary File&lt;/h2>
&lt;ul>
&lt;li>文字檔以字元的方式儲存資料，然而並不是所有的檔案都是文字檔。例如，你可以用文字編輯器打開一張圖片。&lt;/li>
&lt;li>此外文字檔的儲存效率並不高
&lt;ul>
&lt;li>需要多少大小去儲存數字 123 ?&lt;/li>
&lt;li>Text File：3 bytes&lt;/li>
&lt;li>Binary File：1 byte&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="fread">fread&lt;/h3>
&lt;p>&lt;code>size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>從 FILE * 讀取 nmemb 個資料，每個 size bytes 長，並將它們儲存在 *ptr。&lt;/li>
&lt;li>成功時回傳資料讀取的數量。如果失敗，或到達文件尾端時，則回傳是一短項計數 (或 0)&lt;/li>
&lt;/ul>
&lt;h3 id="fwrite">fwrite&lt;/h3>
&lt;p>&lt;code>size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>從 *ptr 讀取 nmemb 個資料，每個 size bytes 長，並將它們儲存在 FILE *。&lt;/li>
&lt;li>成功時回傳資料寫入的數量。如果失敗，或到達文件尾端時，則回傳是一短項計數 (或 0)&lt;/li>
&lt;/ul>
&lt;h2 id="bmp-file-format">BMP File Format&lt;/h2>
&lt;ul>
&lt;li>這裡將使用 bmp 檔作為示範
&lt;ul>
&lt;li>為什麼是 bmp 而不是 jpg ? -&amp;gt; 因為 bmp 是一種未被壓縮的照片格式。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://engineering.purdue.edu/ece264/17au/hw/HW15" target="_blank" rel="noopener"
>連結&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="讀取-bmp-檔">讀取 bmp 檔&lt;/h3>
&lt;ul>
&lt;li>讀取 bmp file header 並印出資訊&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">_sBmpHeader&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">bm&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">reserve&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">offset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">header_size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">uint16_t&lt;/span> &lt;span class="n">planes&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">uint16_t&lt;/span> &lt;span class="n">bpp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">compression&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">bitmap_size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">hres&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">vres&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">used&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">important&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">22&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="n">__attribute__&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">__packed__&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln">23&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">_sBmpHeader&lt;/span> &lt;span class="n">sBmpHeader&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">25&lt;/span>
&lt;span class="ln">26&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">print_bmp_header&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">sBmpHeader&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pHeader&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;ID: %c%c&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">bm&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">bm&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Size: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Reserve: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">reserve&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Offset: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">offset&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Header Size: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">header_size&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Width: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">width&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Height: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Planes: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">planes&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Bits Per Pixel: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">bpp&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">36&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Compression: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">compression&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Bitmap Data Size: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">bitmap_size&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;H-Resolution: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">hres&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">39&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;V-Resolution: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">vres&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">40&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Used Colors: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">41&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;Important Colors: %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pHeader&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">important&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">43&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">44&lt;/span>
&lt;span class="ln">45&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">46&lt;/span> &lt;span class="n">FILE&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">47&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">pFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;maldives_16.bmp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rb&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">48&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;File could not be opened!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">49&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">50&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">51&lt;/span> &lt;span class="n">sBmpHeader&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">52&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%lu&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln">53&lt;/span> &lt;span class="n">fread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">54&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pFile&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">54&lt;/span> &lt;span class="n">print_bmp_header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">55&lt;/span> &lt;span class="n">fclose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pFile&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">56&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">57&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="修改-bmp-檔">修改 bmp 檔&lt;/h3>
&lt;ul>
&lt;li>翻轉顏色&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1">// ...略...
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="n">FILE&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">FILE&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pFile2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">pFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;maldives.bmp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rb&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;File could not be opened!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">pFile2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;maldives_gray.bmp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;wb&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;File could not be opened!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">sBmpHeader&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">fread&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">header&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pFile&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">fwrite&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">header&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pFile2&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">feof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pFile&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">modified&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fread&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pFile&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">modified&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">255&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">fwrite&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">modified&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pFile2&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="n">fclose&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">pFile&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">fclose&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">pFile2&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">28&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>轉成灰階&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1">// ...略...
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">feof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pFile&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">999&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">modified&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">999&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fread&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">999&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pFile&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="c1">// BGR
&lt;/span>&lt;span class="ln"> 8&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">gray&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.299&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.587&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.114&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">modified&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gray&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">fwrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">modified&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pFile2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">14&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">15&lt;/span>&lt;span class="c1">// ...略...
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h4 id="hex-編輯工具">Hex 編輯工具&lt;/h4>
&lt;ul>
&lt;li>Bless Hex Editor&lt;/li>
&lt;li>GHex&lt;/li>
&lt;/ul></description></item><item><title>程式設計(二)-02：Structure</title><link>https://blog.smallten.tk/p/computer_programming_2-02/</link><pubDate>Fri, 02 Apr 2021 16:24:46 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-02/</guid><description>&lt;h1 id="structure">Structure&lt;/h1>
&lt;ul>
&lt;li>Structures 就是將一堆相關的變數整合在一個名字下。
&lt;ul>
&lt;li>關鍵字：&lt;code>struct&lt;/code>&lt;/li>
&lt;li>資料型別：&lt;code>struct _name_&lt;/code>&lt;/li>
&lt;li>成員：在 struct 的大括號內宣告的變數。&lt;/li>
&lt;li>同一個結構體下的成員名稱是唯一的。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">_sCard&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">suit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">face&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>初始化
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">_sCard&lt;/span> &lt;span class="n">a_card&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{.&lt;/span>&lt;span class="n">suit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">face&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">_sCard&lt;/span> &lt;span class="n">a_card&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>structure member operator -&amp;gt; &lt;code>.&lt;/code>&lt;/li>
&lt;li>structure pointer operator -&amp;gt; &lt;code>-&amp;gt;&lt;/code>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="n">a_card_ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">a_card&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="n">a_card_ptr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">face&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="c1">// Equivalent to
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">a_card_ptr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">face&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="cpu-alignment">CPU Alignment&lt;/h2>
&lt;ul>
&lt;li>CPU 有時候會為了減少從記憶體呼叫變數的次數，而主動將變數的記憶體放在連續的地方。&lt;/li>
&lt;li>為了避免 alignment，你可以使用以下兩種方法：
&lt;ul>
&lt;li>&lt;code>__attribute__((packed))&lt;/code>&lt;/li>
&lt;li>pragma
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#pragma pack(push)
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#pragma pack(1)
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">#pragma pack(pop)
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1">// 法一
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="n">__attribute__&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">packed&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="c1">// 法二
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="cp">#pragma pack(push)
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="cp">#pragma pack(1)
&lt;/span>&lt;span class="ln"> 8&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="cp">#pragma pack(pop)
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Structure 不能包含自己，如果需要請用 pointer !
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">student&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">gender&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">student&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">leader&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="typedef">typedef&lt;/h2>
&lt;ul>
&lt;li>由於軟體開發者盡可能的保持懶惰，因此他們嘗試縮短程式碼。&lt;/li>
&lt;li>為了提高可讀性&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">card&lt;/span> &lt;span class="n">Card&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">card&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">suit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">face&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">Card&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="structure-with-functions">Structure With Functions&lt;/h2>
&lt;ul>
&lt;li>為什麼我們時常以傳址的方式傳送 Structures ?
&lt;ul>
&lt;li>因為效率&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>傳值 vs 傳址
&lt;figure style="flex-grow: 129; flex-basis: 310px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-01.jpg" data-size="790x610">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-01.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-01_huda76dad72ba7eecf185e60c3e1f23f56_121265_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-01_huda76dad72ba7eecf185e60c3e1f23f56_121265_1024x0_resize_q75_box.jpg 1024w"
width="790"
height="610"
loading="lazy"
>
&lt;/a>
&lt;/figure> &lt;figure style="flex-grow: 129; flex-basis: 310px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-02.jpg" data-size="790x610">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-02.jpg"
srcset="https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-02_hu3cb647f66cd227f7a5d9066064b60b2a_78814_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/computer_programming_2-02/computer_programming_2-02-02_hu3cb647f66cd227f7a5d9066064b60b2a_78814_1024x0_resize_q75_box.jpg 1024w"
width="790"
height="610"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h2 id="const">const&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// declare a as pointer to int
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// syntax error
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// declare a as const pointer to int
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// syntax error
&lt;/span>&lt;span class="ln">5&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// declare a as pointer to const int
&lt;/span>&lt;span class="ln">6&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// declare a as const pointer to const int
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Although C and C++ read mostly from top-to-bottom and left-to-right, pointer declarations read, in a sense, backwards.&lt;/li>
&lt;/ul>
&lt;h1 id="union">Union&lt;/h1>
&lt;ul>
&lt;li>Union 是所有成員共享相同記憶體空間的派生數據類型。&lt;/li>
&lt;li>記憶體大小足以容納最大的成員。&lt;/li>
&lt;li>實際應用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">ip_addr&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">fam&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// socket family type
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">union&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">in_addr&lt;/span> &lt;span class="n">ipv4_sin_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">in6_addr&lt;/span> &lt;span class="n">ipv6_sin_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="bitwise-operation">Bitwise Operation&lt;/h2>
&lt;ul>
&lt;li>&lt;code>&amp;amp;&lt;/code>：AND -&amp;gt; 0&amp;amp;0 = 0; 0&amp;amp;1 = 0; 1&amp;amp;0 = 0; 1&amp;amp;1 = 1.&lt;/li>
&lt;li>&lt;code>|&lt;/code>：OR -&amp;gt; 0|0 = 0; 0|1 = 1; 1|0 = 1; 1|1 = 1.&lt;/li>
&lt;li>&lt;code>^&lt;/code>：XOR -&amp;gt; 0^0 = 0; 0^1 = 1; 1^0 = 1; 1^1 = 0.&lt;/li>
&lt;li>&lt;code>~&lt;/code>：Complement -&amp;gt; \(\text{\textasciitilde}4_{10}\) = \(\text{\textasciitilde}100_2\) = \(011_2\) = \(3_{10}\).&lt;/li>
&lt;li>&lt;code>&amp;lt;&amp;lt;&lt;/code>：Left Shift 0012 &amp;laquo; 2 = 1002.&lt;/li>
&lt;li>&lt;code>&amp;gt;&amp;gt;&lt;/code>：Right Shift 1002 &amp;raquo; 2 = 0012.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>為什麼我們需要 bitwise operation ?
&lt;ul>
&lt;li>在大多數情況下，按位運算比算術運算要快。
&lt;ul>
&lt;li>a = a * 2&lt;/li>
&lt;li>a = a &amp;laquo; 1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>由於編譯器優化，這可能不是正確的。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Mask with better memory utilization.&lt;/li>
&lt;li>Game Cheating Example
&lt;ul>
&lt;li>０１ ⽕炎術 １０ 電擊術&lt;/li>
&lt;li>０２ 烈炎術 ２０ 落雷術&lt;/li>
&lt;li>０４ 炎⿓術 ４０ 轟雷術&lt;/li>
&lt;li>０８ 天⽕術 ８０ 神雷術&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="bit-fields">Bit Fields&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="k">typedef&lt;/span> &lt;span class="k">union&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b7&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="nl">b8&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">byte&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">uByte&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>由於 alignment 問題，記憶體的空間可能不是安全的，這取決於你如何儲存你的資料。&lt;/li>
&lt;li>實際上，bit fields 可能會增加編程時的難度。我不建議您使用此功能，但是，您需要了解此語法，因為其他人可能會使用它。&lt;/li>
&lt;li>Do not take the address of a bit field.&lt;/li>
&lt;/ul>
&lt;h1 id="enumeration">Enumeration&lt;/h1>
&lt;ul>
&lt;li>A set of integer enumeration constants represented by identifiers.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="k">enum&lt;/span> &lt;span class="n">career&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="n">SABER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">LANCER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ARCHER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="n">RIDER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CASTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASSASSIN&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">BERSAKER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RULER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">CAREER_MAX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">31&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">player&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">enum&lt;/span> &lt;span class="n">career&lt;/span> &lt;span class="n">role&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">uint32_t&lt;/span> &lt;span class="n">role2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">Player&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>你不能改變 enumeration constants 的值。&lt;/li>
&lt;li>我是否可以使用 &lt;code>define&lt;/code> 或 &lt;code>const&lt;/code> 而不是 &lt;code>enum&lt;/code>?
&lt;ul>
&lt;li>是，可以的。&lt;/li>
&lt;li>但他們有什麼不同呢?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>程式設計(二)-01：String</title><link>https://blog.smallten.tk/p/computer_programming_2-01/</link><pubDate>Fri, 02 Apr 2021 14:40:30 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-01/</guid><description>&lt;h1 id="字元">字元&lt;/h1>
&lt;ul>
&lt;li>在講字串之前我們先來看什麼是字元。&lt;/li>
&lt;/ul>
&lt;h3 id="ascii">ASCII&lt;/h3>
&lt;ul>
&lt;li>American Standard Code for Information Interchange.&lt;/li>
&lt;li>電子通訊的字元編碼標準&lt;/li>
&lt;li>基於英文字母，ASCII 將 128 個字元編碼成 7 個位元長。
&lt;ul>
&lt;li>95 個可印字元：A-Z, a-z, 0-9, 標點符號&lt;/li>
&lt;li>不可印字元：換行符號&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>在電腦中我們使用 8-bit 的記憶體儲存字元。&lt;/li>
&lt;li>在 C 語言中，使用 &lt;code>char&lt;/code> 這個型別。&lt;/li>
&lt;li>&lt;code>%c&lt;/code> -&amp;gt; 輸出字元&lt;/li>
&lt;li>&lt;code>%x&lt;/code> or &lt;code>%X&lt;/code> -&amp;gt; 印出 hex or HEX 的值。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>在以前，許多情況下，有些人使用 &lt;code>unsigned char&lt;/code> 作為 one byte 的資料型別，但現今你應該使用的是 &lt;code>uint8_t&lt;/code>。&lt;/li>
&lt;li>請把 &lt;code>char&lt;/code> 留給字串，盡管事實上對電腦來說都是一樣的。&lt;/li>
&lt;li>其他編碼：&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E5%A4%A7%E4%BA%94%E7%A2%BC" target="_blank" rel="noopener"
>Big5&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/UTF-8" target="_blank" rel="noopener"
>UTF-8&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="字串">字串&lt;/h1>
&lt;ul>
&lt;li>事實上，字串就是一連串的可印字元。&lt;/li>
&lt;li>這樣看起來很像陣列對吧? Yes!&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;figure style="flex-grow: 566; flex-basis: 1358px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_2-01/computer_programming_2-01-01.png" data-size="600x106">&lt;img src="https://blog.smallten.tk/p/computer_programming_2-01/computer_programming_2-01-01.png"
srcset="https://blog.smallten.tk/p/computer_programming_2-01/computer_programming_2-01-01_huf3482a54bca2f6c60bcb344eea1e67b5_7395_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_2-01/computer_programming_2-01-01_huf3482a54bca2f6c60bcb344eea1e67b5_7395_1024x0_resize_box_2.png 1024w"
width="600"
height="106"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>在 C 語言中，字串是一個字元指標，並以 &lt;code>'\0'&lt;/code> 為結尾。&lt;/li>
&lt;li>常見的錯誤：
&lt;ul>
&lt;li>沒有分配足夠的空間&lt;/li>
&lt;li>輸出一個不包含 &lt;code>'\0'&lt;/code> 的字串&lt;/li>
&lt;li>在 C 的標準中，字元指標是不可修改的，如果要修改字串，必須儲存在字元陣列中。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="字串處理函式">字串處理函式&lt;/h2>
&lt;ul>
&lt;li>首先，這部分有印象就好，不用記，畢竟到這邊大家應該都有能力自己實作出來吧!&lt;/li>
&lt;/ul>
&lt;h3 id="字串轉整數">字串轉整數&lt;/h3>
&lt;ul>
&lt;li>很久很久以前
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">atoi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">nptr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="nf">atol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">nptr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>現今
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="c1">// string to double
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">double&lt;/span> &lt;span class="nf">strtod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">nptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">endptr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="c1">// string to long int
&lt;/span>&lt;span class="ln">5&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">strtol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">nptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">endptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">base&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="輸出入函式">輸出入函式&lt;/h3>
&lt;ul>
&lt;li>輸出&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">putchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 輸出字元
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">puts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 輸出字串
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">snprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kr">restrict&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">bufsz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kr">restrict&lt;/span> &lt;span class="n">format&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>輸入&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">getchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 輸入字元
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">fgets&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FILE&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">stream&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 輸入字串
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">sscanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kr">restrict&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kr">restrict&lt;/span> &lt;span class="n">format&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>一些不推薦的函式，永遠不要用他們
&lt;ul>
&lt;li>&lt;code>char *gets(char *s);&lt;/code>&lt;/li>
&lt;li>&lt;code>int sprintf(char *str, const char *format, ...);&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>有 buffer overflow 的風險&lt;/li>
&lt;/ul>
&lt;h3 id="字串操作函式">字串操作函式&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strncpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 複製字串
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strncat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 串接字串
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>和上述理由一樣，不要使用下方的函式
&lt;ul>
&lt;li>&lt;code>char *strcpy(char *dest,const char *src);&lt;/code>&lt;/li>
&lt;li>&lt;code>char *strcat(char *dest,const char *src);&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="字串比較函式">字串比較函式&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">strcmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">strncmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果s1（或其前n個字節）分別小於、匹配或大於s2，則函數將返回小於、等於或大於零的整數。&lt;/li>
&lt;/ul>
&lt;h3 id="字串搜尋函式">字串搜尋函式&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strchr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 從頭找字元
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strrchr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 從尾找字元
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="c1">// 計算 s 的前綴有多少字元在 accept 中
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="nf">strspn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">accept&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="c1">// 計算 s 的前綴有多少字元不在 reject 中
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="nf">strcspn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">reject&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="c1">// 回傳在 accept 中的任何字元在 s 字串首次出現位置的指標
&lt;/span>&lt;span class="ln"> 9&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strpbrk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">accept&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="c1">// 回傳 needle 在 haystack 中首次出現位置的指標
&lt;/span>&lt;span class="ln">11&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strstr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">haystack&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">needle&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="c1">// 依照 delim 中的字元分割 str
&lt;/span>&lt;span class="ln">13&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strtok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">delim&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="strtok-範例">strtok 範例&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;the value of pi is 3.14&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">strtok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d: %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">strtok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>為何第二次之後呼叫都是以 &lt;code>NULL&lt;/code> 作為輸入?
&lt;ul>
&lt;li>因為這是一個 &lt;code>static&lt;/code> 的變數。如果輸入 &lt;code>NULL&lt;/code>，該函式將繼續從最後一個位置切割字串。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>為甚麼我不能直接使用 &lt;code>const char *str&lt;/code>?
&lt;ul>
&lt;li>因為 &lt;code>strtok&lt;/code> 的實作，將會直接操作在輸入的字串上。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="其他字串函式">其他字串函式&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">size_t&lt;/span> &lt;span class="nf">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 計算字串長度
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="c1">// 輸出錯誤訊息
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nf">strerror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">errnum&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>strerror&lt;/code> 搭配 &lt;code>errno&lt;/code> 使用 (&lt;code>#include &amp;lt;errno.h&amp;gt;&lt;/code>)&lt;/li>
&lt;/ul></description></item><item><title>Hugo-02：優化 Blog</title><link>https://blog.smallten.tk/p/hugo-02/</link><pubDate>Sun, 07 Feb 2021 04:06:17 +0800</pubDate><guid>https://blog.smallten.tk/p/hugo-02/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這部份是紀錄我修改的主題內容，並將 codeblocks 區塊美化，以及支援 &lt;a class="link" href="https://katex.org/" target="_blank" rel="noopener"
>KaTex&lt;/a> 和 Google Analytics&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ul>
&lt;li>我使用的主題為 &lt;a class="link" href="https://themes.gohugo.io/hugo-theme-stack/" target="_blank" rel="noopener"
>Stack&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="主題內容修改">主題內容修改&lt;/h2>
&lt;ul>
&lt;li>找到 &lt;code>assets/scss/variables.scss&lt;/code>，並修改
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="ln">1&lt;/span>&lt;span class="nt">--link-background-color&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">90&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">240&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">250&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//189, 195, 199;
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nt">--code-text-color&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nn">#ef3982&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//rgba(255, 255, 255, 0.9);
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="codeblocks-區塊美化">Codeblocks 區塊美化&lt;/h2>
&lt;ol>
&lt;li>到 &lt;code>static/css/&lt;/code> 下建立 &lt;code>copy-to-clipboard.css&lt;/code>，內容如下
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="ln"> 1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">highlight&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">highlight&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">ln&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="kp">-moz-&lt;/span>&lt;span class="k">user-select&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kp">-webkit-&lt;/span>&lt;span class="k">user-select&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kp">-ms-&lt;/span>&lt;span class="k">user-select&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">user-select&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">highlight-copy-btn&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.8&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">line-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#777&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">min-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">55&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">highlight-copy-btn&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#666&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">26&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>到 &lt;code>static/js/&lt;/code> 下建立 &lt;code>copy-to-clipboard.js&lt;/code>，內容如下
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="ln"> 1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="s1">&amp;#39;use strict&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">queryCommandSupported&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;copy&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">flashCopyMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">el&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="nx">el&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">textContent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="nx">el&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">textContent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Copy&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">selectText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">selection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSelection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createRange&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="nx">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">selectNodeContents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="nx">selection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">removeAllRanges&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="nx">selection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">range&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">selection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">addCopyButton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">containerEl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">copyBtn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="nx">copyBtn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">className&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;highlight-copy-btn&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="nx">copyBtn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">textContent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Copy&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">24&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">codeEl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">containerEl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">firstElementChild&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="nx">copyBtn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;click&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">selection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">selectText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">codeEl&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">execCommand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;copy&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="nx">selection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">removeAllRanges&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">31&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="nx">flashCopyMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">copyBtn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Copied!&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="nx">console&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="nx">flashCopyMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">copyBtn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Failed :\&amp;#39;(&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">36&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="nx">containerEl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">appendChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">copyBtn&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">39&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">40&lt;/span> &lt;span class="c1">// Add copy button to code blocks
&lt;/span>&lt;span class="ln">41&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">highlightBlocks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementsByClassName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;highlight&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">highlightBlocks&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addCopyButton&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">43&lt;/span>&lt;span class="p">})();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>修改 &lt;code>config.yaml&lt;/code>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="ln">1&lt;/span>&lt;span class="nt">custom_css&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;css/copy-to-clipboard.css&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">pygmentsUseClasses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">markup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">highlight&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lineNos&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lineNumbersInTable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>修改 &lt;code>layouts/partials/head/custom.html&lt;/code>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="ln">1&lt;/span>{{ range .Site.Params.custom_css -}}
&lt;span class="ln">2&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ . | absURL }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="ln">3&lt;/span>{{- end }}
&lt;span class="ln">4&lt;/span>{{ range .Site.Params.custom_js -}}
&lt;span class="ln">5&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/javascript&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ . | absURL }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="ln">6&lt;/span>{{- end }}
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>修改 &lt;code>layouts/partials/footer/custom.html&lt;/code>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="ln">1&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/js/copy-to-clipboard.js&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>這樣程式碼區塊就有 Copy Button，並且直接複製時不會選取到行號了&lt;/li>
&lt;/ol>
&lt;h2 id="katex">KaTex&lt;/h2>
&lt;ol>
&lt;li>到 &lt;code>layouts/partials/&lt;/code> 下新增 &lt;code>math.html&lt;/code>，內容如下
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="ln"> 1&lt;/span>{{ if or .Params.math .Site.Params.math }}
&lt;span class="ln"> 2&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">defer&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">defer&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js&amp;#34;&lt;/span> &lt;span class="na">integrity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa&amp;#34;&lt;/span> &lt;span class="na">crossorigin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;anonymous&amp;#34;&lt;/span> &lt;span class="na">onload&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;renderMathInElement(document.body);&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DOMContentLoaded&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="nx">renderMathInElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="nx">delimiters&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">left&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;$$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;$$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">left&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\\[&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\\]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">left&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">left&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\\(&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;\\)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="ln">17&lt;/span>{{ end }}
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>修改 &lt;code>layouts/partials/head/custom.html&lt;/code>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="ln">1&lt;/span>{{ partial &amp;#34;math.html&amp;#34; . }}
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="google-analytics">Google Analytics&lt;/h2>
&lt;ol>
&lt;li>到 Google Analytics 創建一個資料串流&lt;/li>
&lt;li>由於 Hugo 內建的 GA 模板，似乎還不支援 GA4，因此我們使用 &lt;code>gtag.js&lt;/code>&lt;/li>
&lt;li>複製剛剛建立的資料串流中的 &lt;code>gtag.js&lt;/code> 內容到 &lt;code>layouts/partials/google_analytics.html&lt;/code>中&lt;/li>
&lt;li>修改 &lt;code>layouts/partials/head/custom.html&lt;/code>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="ln">1&lt;/span>{{ if not .Site.IsServer }}{{ partial &amp;#34;google_analytics.html&amp;#34; . }}{{ end }}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>這裡的 &lt;code>if&lt;/code> 是避免在 local 測試時的數據也被紀錄下來&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Hugo-01：建立一個Hugo Blog</title><link>https://blog.smallten.tk/p/hugo-01/</link><pubDate>Sun, 07 Feb 2021 03:22:22 +0800</pubDate><guid>https://blog.smallten.tk/p/hugo-01/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將快速帶你建立一個 Hugo Blog 並將其部屬到 GitHub 上&lt;/li>
&lt;/ul>
&lt;h1 id="相關連結">相關連結&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a> - Hugo 官網&lt;/li>
&lt;li>&lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>Hugo Themes&lt;/a> - 選擇自己喜歡的主題&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>Hugo Releases&lt;/a> - 下載 Hugo 並安裝進電腦&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;h2 id="建立-hugo-blog">建立 Hugo Blog&lt;/h2>
&lt;ol>
&lt;li>安裝 Hugo
&lt;ul>
&lt;li>這裡以 Ubuntu 為示範&lt;/li>
&lt;li>先至 &lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>Hugo Releases&lt;/a> 下載自己所需的版本
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>$ dpkg -i hugo_extended_0.79.0_Linux-64bit.deb &lt;span class="c1"># 記得依照檔案自行更改&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>創建一個 Hugo Site
&lt;ul>
&lt;li>這裡創建一個名為 blog
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>$ &lt;span class="nb">cd&lt;/span> ~
&lt;span class="ln">2&lt;/span>$ hugo new site blog &lt;span class="c1"># 可自行修改名稱&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>新增主題
&lt;ul>
&lt;li>這裡我選擇了 &lt;a class="link" href="https://themes.gohugo.io/hugo-theme-stack/" target="_blank" rel="noopener"
>Stack&lt;/a> 這個主題&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>$ &lt;span class="nb">cd&lt;/span> ~/blog/
&lt;span class="ln">2&lt;/span>$ git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>跟著主題的教學文檔修改 config file&lt;/li>
&lt;li>如要建立新文章時
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>$ hugo new post/test.md
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>此時會在 &lt;code>content/post/&lt;/code> 下，建立新文章，檔名為 &lt;code>test.md&lt;/code>&lt;/li>
&lt;li>&lt;code>draft&lt;/code>: 草稿&lt;/li>
&lt;li>&lt;code>slug&lt;/code>: 此文章的 url (可自行建立)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>本機測試
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>$ hugo server -D
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-D&lt;/code>: 將會連草稿都顯示出來&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="部署到-github">部署到 GitHub&lt;/h2>
&lt;ol>
&lt;li>在 GitHub 上建立一個新的 Repository
&lt;ul>
&lt;li>名稱為 &lt;code>&amp;quot;Your account&amp;quot;.github.io&lt;/code> (&amp;ldquo;Your account&amp;rdquo; 使用自己 GitHub 的名稱)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>將剛才建立好的 Blog 上到這個 Repo
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>$ &lt;span class="nb">cd&lt;/span> ~/blog/
&lt;span class="ln">2&lt;/span>$ git add --all
&lt;span class="ln">3&lt;/span>$ git commit -m &lt;span class="s2">&amp;#34;blog init&amp;#34;&lt;/span>
&lt;span class="ln">4&lt;/span>$ git branch -M main
&lt;span class="ln">5&lt;/span>$ git remote add origin git@github.com... &lt;span class="c1">#這裡使用了 ssh 的方式&lt;/span>
&lt;span class="ln">6&lt;/span>$ git push -u origin main
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>使用 GitHub Actions
&lt;ul>
&lt;li>建立一個一個 workflows 名叫 &lt;code>hugo_publish.yml&lt;/code>，內容如下 (有些地方須自行依照情況修改)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="ln"> 1&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;content/**&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;.github/workflows/hugo_publish.yml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;config.yaml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;layouts/**&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;static/**&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 8&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln"> 9&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">10&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">11&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">12&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">13&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">14&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">15&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">16&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">17&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">18&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">19&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">20&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">21&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.79.0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">22&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">23&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">24&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">25&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">26&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">27&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">28&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">29&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">30&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">github_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">31&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="ln">32&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">cname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;blog.smallten.tk&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>修改 Repo 的設定
&lt;ul>
&lt;li>先找到 GitHub Pages 的地方&lt;/li>
&lt;li>將 Source 改成 &lt;code>Branch: gh-pages&lt;/code>&lt;/li>
&lt;li>有 custom domain 的記得填入&lt;/li>
&lt;li>Enforce HTTPS 打勾&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>這樣就完成了，之後只要 push 時，便會自動更新網站了&lt;/li>
&lt;/ol></description></item><item><title>程式設計(一)-08：Pointer</title><link>https://blog.smallten.tk/p/computer_programming_1-08/</link><pubDate>Wed, 23 Dec 2020 19:38:14 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-08/</guid><description>&lt;h1 id="pointer">Pointer&lt;/h1>
&lt;ul>
&lt;li>許多人不喜歡C是因為有「指標」&lt;/li>
&lt;li>這可能是C中最困難的一個部分&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>指標是一個變數，其值為記憶體位置
&lt;figure style="flex-grow: 129; flex-basis: 310px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01.png" data-size="624x482">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01_hu398bb37b63fd8209945f2f56af9b6d3e_23889_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01_hu398bb37b63fd8209945f2f56af9b6d3e_23889_1024x0_resize_box_2.png 1024w"
width="624"
height="482"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>宣告：&lt;code>int32_t *p&lt;/code>
&lt;ul>
&lt;li>p 是一個指標&lt;/li>
&lt;li>指向的記憶體區塊被視為整數&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>初始化：&lt;code>int32_t *p = NULL&lt;/code>&lt;/li>
&lt;li>address operator &lt;code>&amp;amp;&lt;/code>：返回其變數的記憶體位置
&lt;ul>
&lt;li>如果想要印出記憶體位置，你可以使用&lt;code>%p&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>indirection operator &lt;code>*&lt;/code>：也被稱為dereferencing operator，返回指向對象的值
&lt;figure style="flex-grow: 116; flex-basis: 278px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02.png" data-size="560x482">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02_hu0a8930e11c7536ee883fb5d0dfdd78ad_20157_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02_hu0a8930e11c7536ee883fb5d0dfdd78ad_20157_1024x0_resize_box_2.png 1024w"
width="560"
height="482"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>void *：是一個通用的指標型別(generic pointer type)，可以不透過explicit cast轉換成任意指標的型別&lt;/li>
&lt;/ul>
&lt;h3 id="傳參數至函式">傳參數至函式&lt;/h3>
&lt;ul>
&lt;li>在C語言中，argument passing 稱為 call-by-value
&lt;ul>
&lt;li>電腦將會分配另一個記憶體區塊&lt;/li>
&lt;li>複製輸入的參數到記憶體區塊&lt;/li>
&lt;li>函式將會在新的記憶體區塊執行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>這就是為什麼修改函式中的變數，並不會修改到原本外部的變數了。&lt;/li>
&lt;li>在C++有另一種傳送方式稱為 call-by-reference，這邊我們不多加介紹。&lt;/li>
&lt;li>普遍來說，傳址會比傳值更快。&lt;/li>
&lt;/ul>
&lt;h3 id="陣列與指標">陣列與指標&lt;/h3>
&lt;ul>
&lt;li>在大部分的情況下，我們可以把array視為第一個元素的指標
&lt;ul>
&lt;li>現在你應該明白為什麼陣列的值會在函式中被修改&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>為了避免模棱兩可(搞混)，我較喜歡&lt;code>&amp;amp;(array[0])&lt;/code>而不是&lt;code>array&lt;/code>、&lt;code>&amp;amp;array&lt;/code>&lt;/li>
&lt;li>然而你不能寫出 &lt;code>array = &amp;amp;a&lt;/code>&lt;/li>
&lt;li>int32_t
&lt;figure style="flex-grow: 262; flex-basis: 629px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03.png" data-size="1376x525">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03_hua4ffcfffdb0d5cbd6f85ca56310f1d36_36032_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03_hua4ffcfffdb0d5cbd6f85ca56310f1d36_36032_1024x0_resize_box_2.png 1024w"
width="1376"
height="525"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>int16_t
&lt;figure style="flex-grow: 262; flex-basis: 629px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04.png" data-size="1376x525">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04_hu92da0828b2a348267cfe3ac686741655_34474_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04_hu92da0828b2a348267cfe3ac686741655_34474_1024x0_resize_box_2.png 1024w"
width="1376"
height="525"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>int8_t
&lt;figure style="flex-grow: 262; flex-basis: 629px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05.png" data-size="1376x525">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05_hub90ffe0d9cbc8b522addb56c1c004a1c_34140_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05_hub90ffe0d9cbc8b522addb56c1c004a1c_34140_1024x0_resize_box_2.png 1024w"
width="1376"
height="525"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>&lt;code>ptr++&lt;/code>
&lt;ul>
&lt;li>移動的大小是根據指標的型別&lt;/li>
&lt;li>這在要讀取每一byte的詳細資料時非常好用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>事實上，&lt;code>array[n] = *(ptr + n)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="endian-issue">Endian Issue&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 235; flex-basis: 566px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06.png" data-size="868x368">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06_hu7477f6d92b9b5dc7fc8ef441486939e3_22341_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06_hu7477f6d92b9b5dc7fc8ef441486939e3_22341_1024x0_resize_box_2.png 1024w"
width="868"
height="368"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h3 id="函式指標">函式指標&lt;/h3>
&lt;ul>
&lt;li>指標不過是一個記憶體位址。&lt;/li>
&lt;li>當我們宣告某種類型的指標時，這意味著電腦將將訪問記憶體並根據給定的類型解釋存儲在該位址的值。&lt;/li>
&lt;li>您是否知道函式也存儲在記憶體中？&lt;/li>
&lt;li>使用函式指標時，返回的型別和參數應該要和實際的定義相同。
&lt;ul>
&lt;li>Really??為什麼在編譯時不會產生errors?&lt;/li>
&lt;li>這是個檢查definition的好習慣。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>回呼函式 (Callback function)&lt;/li>
&lt;li>你可以用陣列來儲存函式指標
&lt;code>void (*f[3])(int32_t) = {f1, f2, f3};&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>使用了函式指標的例子
&lt;ul>
&lt;li>Menu Driven&lt;/li>
&lt;li>Driver
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">file_operations&lt;/span> &lt;span class="n">scull_fops&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">owner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">THIS_MODULE&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">llseek&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scull_llseek&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">read&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scull_read&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">write&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scull_write&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">ioctl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scull_ioctl&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scull_open&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="n">release&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scull_release&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Firewall&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">hook_func&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">nf_hook_ops&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ops&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">sk_buff&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">skb&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">net_device&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">in&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">net_device&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">okfn&lt;/span>&lt;span class="p">)(&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">sk_buff&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="記憶體管理">記憶體管理&lt;/h3>
&lt;ul>
&lt;li>記憶體管理
&lt;ul>
&lt;li>分配記憶體當你宣告一個變數&lt;/li>
&lt;li>垃圾回收 ( GC )&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>為什麼許多現代的程式語言不支援記憶體管理
&lt;ul>
&lt;li>軟體工程師是人類&lt;/li>
&lt;li>人是不可被信任的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>然而，如果軟體工程師知道他們在做什麼，那麼他們可以更有效率的管理記憶體&lt;/li>
&lt;li>如果不考慮記憶體，請使用陣列&lt;/li>
&lt;li>如果你想陣列的大小可以被動態的改變，那麼去讀 C++ 並學習如何使用 container&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="malloc">malloc&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">malloc&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>malloc()&lt;/code> 分配 size bytes 並回傳一個指向所分配的記憶體的指標&lt;/li>
&lt;li>記憶體沒有初始化&lt;/li>
&lt;li>若要初始化，請使用 &lt;code>memset&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">memset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="calloc">calloc&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>在現代的 C 中，你應該使用 &lt;code>calloc&lt;/code>&lt;/li>
&lt;li>第一個參數：多少個區塊你想去分配?&lt;/li>
&lt;li>第二個參數：每個區塊的大小。&lt;/li>
&lt;li>記憶體被初始化成 &lt;code>0&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="free">free&lt;/h4>
&lt;p>&lt;figure style="flex-grow: 191; flex-basis: 460px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07.png" data-size="600x313">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07_hu4225d066f38677261377ab43a001df66_249554_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07_hu4225d066f38677261377ab43a001df66_249554_1024x0_resize_box_2.png 1024w"
width="600"
height="313"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>&lt;code>free(ptr)&lt;/code>：釋放 &lt;code>ptr&lt;/code> 指向的記憶體空間，該記憶體空間必須是由之前使用 &lt;code>malloc()、calloc()、realloc()&lt;/code> 所回傳的。&lt;/li>
&lt;li>此外，若已經 &lt;code>free(ptr)&lt;/code>，再次使用會發生未定義行為。&lt;/li>
&lt;/ul>
&lt;h3 id="double-pointer">Double Pointer&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 109; flex-basis: 263px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08.png" data-size="751x683">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08_hu6578b51f70e0abcf77c88775e521c8ab_200051_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08_hu6578b51f70e0abcf77c88775e521c8ab_200051_1024x0_resize_box_2.png 1024w"
width="751"
height="683"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>使用場景：
&lt;ul>
&lt;li>在函式中分配記憶體&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">pp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">calloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">pp&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>分配一個二維陣列&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">size_row&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size_column&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Please enter two integers for row and column: &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;%lu %lu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">size_row&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">size_column&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">calloc&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="n">size_row&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">size_row&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">ptr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">int32_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">calloc&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">int32_t&lt;/span> &lt;span class="p">),&lt;/span> &lt;span class="n">size_column&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">size_column&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">ptr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">size_row&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">size_column&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;%4d &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">ptr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="小工具">小工具&lt;/h3>
&lt;h4 id="cdecl">cdecl&lt;/h4>
&lt;ul>
&lt;li>安裝：&lt;code>sudo apt install cdecl&lt;/code>&lt;/li>
&lt;li>使用：&lt;code>cdecl&lt;/code> -&amp;gt; &lt;code>explain int ***a;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="資源查看">資源查看&lt;/h4>
&lt;ul>
&lt;li>top / htop&lt;/li>
&lt;li>vmstat ( 較輕量化 )
&lt;ul>
&lt;li>&lt;code>vmstat -n 1&lt;/code> ( &lt;code>-n 1&lt;/code> 為一秒輸出一次 )&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>First Hugo Blog</title><link>https://blog.smallten.tk/p/first-hugo-blog/</link><pubDate>Fri, 18 Dec 2020 01:16:06 +0800</pubDate><guid>https://blog.smallten.tk/p/first-hugo-blog/</guid><description>&lt;h1 id="第一個-hugo-blog">第一個 Hugo Blog&lt;/h1>
&lt;p>  由於秉持著「人生總折騰」的道理，我來轉移 Blog 了(誤///)，好啦，其實是單純希望有個穩定且又能全天候供應的 Blog 而已，由於我的隊友兩人分別使用了 Hexo 及 Hugo ，因此一開始讓我有點難抉擇，但最終我還是選擇了 Hugo 。&lt;/p>
&lt;p>  至於第二個選擇的難關就是主題了，挑了好久都沒看到順眼的，差點就要聽吳文元說的沒有喜歡的就自己寫呀(怕///)，最終還是挑到了一個稍微滿意的主題 &lt;a class="link" href="https://themes.gohugo.io/hugo-theme-stack/" target="_blank" rel="noopener"
>Stack&lt;/a>。&lt;/p>
&lt;p>  至於架設的過程到目前為止還算是蠻順利的，希望之後也不會遇到什麼大坑。&lt;/p></description></item><item><title>演算法-01：蓄水池抽樣法</title><link>https://blog.smallten.tk/p/algorithm-01/</link><pubDate>Tue, 08 Dec 2020 16:02:25 +0800</pubDate><guid>https://blog.smallten.tk/p/algorithm-01/</guid><description>&lt;h1 id="蓄水池抽樣法-reservoir-sampling">蓄水池抽樣法 (Reservoir Sampling)&lt;/h1>
&lt;ul>
&lt;li>從 N 個樣本中，隨機抽取 K 個樣本，其中 N 非常大(不能將所有數據都放進記憶體或是一個未知數)，而每個被抽出來的機率要相等。&lt;/li>
&lt;/ul>
&lt;h3 id="定理">定理&lt;/h3>
&lt;p>該算法保證每個元素以 \( k \over n \) 的機率被選入蓄水池中。&lt;/p>
&lt;h3 id="證明">證明&lt;/h3>
&lt;ol>
&lt;li>第 i 個元素進入蓄水池的機率為 \( k \over i \)，蓄水池內每個元素被替換的機率為\( 1 \over k \)&lt;/li>
&lt;li>因此在第 i 輪第 j 個元素被替換的機率為 \( {k \over i}\times{1 \over k} = {1 \over i} \)，接下來用 M.I. (數學歸納法)來證明，當 n 次循環結束時每個元素進入蓄水池的機率為 \( k \over n \)&lt;/li>
&lt;li>假設在 (i-1) 次迭代後，任意一個元素進入 蓄水池的概率為 \( k \over i-1 \)。由上面的結論，在第 i 次迭代時，該元素被替換的概率為 \( 1 \over i \)， 那麼其不被替換的概率則為 \( 1 - {1 \over i} = {i - 1 \over i} \)&lt;/li>
&lt;li>故在第 i 次迭代後，該元素在蓄水池內的概率為 \( {k \over i-1} \times {i-1 \over i} = {k \over i} \)，歸納結束。&lt;/li>
&lt;li>因此當循環結束時，每個元素進入蓄水池的概率為 \( k \over n \)，命題得證。&lt;/li>
&lt;/ol>
&lt;h3 id="例題">例題&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://leetcode.com/problems/linked-list-random-node/" target="_blank" rel="noopener"
>Leetcode 382.Linked List Random Node&lt;/a>&lt;/li>
&lt;li>解法： Cpp&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="n">ListNode&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ListNode&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">getRandom&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">ListNode&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">ans&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>程式設計(一)-07：Array</title><link>https://blog.smallten.tk/p/computer_programming_1-07/</link><pubDate>Mon, 07 Dec 2020 19:38:14 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-07/</guid><description>&lt;h1 id="array">Array&lt;/h1>
&lt;ul>
&lt;li>陣列是一種可以儲存大量相同型別資料的方法。&lt;/li>
&lt;li>連續的記憶體位置。&lt;/li>
&lt;li>永遠從0開始
&lt;ul>
&lt;li>&lt;code>int32_t a[10]&lt;/code> -&amp;gt; &lt;code>a[0] ~ a[9]&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>計數變數 i 的型別可以宣告為 &lt;code>size_t&lt;/code>，它是一個無號的整數型別。&lt;/li>
&lt;li>初始化
&lt;ul>
&lt;li>&lt;code>int32_t a[5] = {0, 0, 0, 0, 0};&lt;/code>&lt;/li>
&lt;li>&lt;code>int32_t a[5] = {0};&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>存取陣列元素使用 &lt;code>variable[index]&lt;/code>&lt;/li>
&lt;li>專業說明：電腦將找到第一個元素的地址，然後根據索引移動記憶體位置以訪問數據。&lt;/li>
&lt;li>事實上一維陣列可以處理所有情況，至於多維陣列只是給人類方便閱讀的。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="define">define&lt;/h1>
&lt;ul>
&lt;li>是遇處理指令，不是C的詞(statement)&lt;/li>
&lt;li>我們可以使用 &lt;code>#define&lt;/code> 去做巨集(MACRO)
&lt;ul>
&lt;li>當開發時MACRO有些像function，然而對電腦而言他們是不同的。&lt;/li>
&lt;li>當遇到MACRO，編譯器將簡單的依定義替換掉程式碼。&lt;/li>
&lt;li>函式擁有自己的標記。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="基本排序">基本排序&lt;/h1>
&lt;h4 id="氣泡排序法">氣泡排序法&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">^&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">^&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">^&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="qsort">qsort&lt;/h4>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.c&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">cmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="n">qsort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">cmp&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="傳陣列至函式">傳陣列至函式&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="p">[][&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">2&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">4&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[][&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">6&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>除了第一個[]外，剩下的都必須要給大小。(電腦才能計算偏移量)&lt;/li>
&lt;li>為甚麼要給size? 因為傳過去的只是陣列的記憶體起始位置而已。&lt;/li>
&lt;li>在函式中依然會改到本身的值。&lt;/li>
&lt;/ul>
&lt;h1 id="const">const&lt;/h1>
&lt;ul>
&lt;li>constant&lt;/li>
&lt;li>read-only&lt;/li>
&lt;/ul>
&lt;h1 id="可變長度陣列">可變長度陣列&lt;/h1>
&lt;ul>
&lt;li>Variable Length Array&lt;/li>
&lt;li>雖然有些編譯器支援了以下寫法(C99之後)，但有些依然不支援&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>但你應該使用 &lt;code>malloc&lt;/code>
&lt;ul>
&lt;li>準確來說，你應該使用 &lt;code>calloc&lt;/code>，而不是 `malloc。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>我的建議：當考試的時候不要使用這功能( &lt;code>a[n]&lt;/code> )，因為你不知道編譯器的版本。&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-06：Makefile</title><link>https://blog.smallten.tk/p/computer_programming_1-06/</link><pubDate>Wed, 02 Dec 2020 21:45:51 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-06/</guid><description>&lt;h1 id="makefile-for-程設一">Makefile for 程設一&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-makefile" data-lang="makefile">&lt;span class="ln"> 1&lt;/span>&lt;span class="nv">CC&lt;/span> &lt;span class="o">=&lt;/span> gcc
&lt;span class="ln"> 2&lt;/span>&lt;span class="nv">CFLAGS&lt;/span> &lt;span class="o">=&lt;/span> -Wall -Wextra -O2 -std&lt;span class="o">=&lt;/span>c11
&lt;span class="ln"> 3&lt;/span>&lt;span class="nv">LDFLAGS&lt;/span> &lt;span class="o">=&lt;/span> -lm
&lt;span class="ln"> 4&lt;/span>&lt;span class="nv">TARGETS&lt;/span> &lt;span class="o">=&lt;/span> main01 main02
&lt;span class="ln"> 5&lt;/span>&lt;span class="nv">main01_OBJ&lt;/span> &lt;span class="o">=&lt;/span> main01.o func01.o
&lt;span class="ln"> 6&lt;/span>&lt;span class="nv">main02_OBJ&lt;/span> &lt;span class="o">=&lt;/span> main02.o func02.o
&lt;span class="ln"> 7&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="nv">.PHONY&lt;/span> &lt;span class="o">=&lt;/span> all clean
&lt;span class="ln"> 9&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="nf">all&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">TARGETS&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="ln">11&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="nf">.SECONDEXPANSION&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="nf">$(TARGETS)&lt;/span>&lt;span class="o">:&lt;/span> $&lt;span class="k">$($$&lt;/span>@&lt;span class="nv">_OBJ&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">$(&lt;/span>CC&lt;span class="k">)&lt;/span> $^ -o &lt;span class="nv">$@&lt;/span> &lt;span class="k">$(&lt;/span>LDFLAGS&lt;span class="k">)&lt;/span>
&lt;span class="ln">15&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="nf">%.o&lt;/span>&lt;span class="o">:&lt;/span> $@.&lt;span class="n">c&lt;/span>
&lt;span class="ln">17&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="nf">clean&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">19&lt;/span> -&lt;span class="k">$(&lt;/span>RM&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>TARGETS&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>foreach targ,&lt;span class="k">$(&lt;/span>TARGETS&lt;span class="k">)&lt;/span>,&lt;span class="k">$(&lt;/span>foreach obj, &lt;span class="k">$($(&lt;/span>targ&lt;span class="k">)&lt;/span>_OBJ&lt;span class="k">)&lt;/span>, &lt;span class="k">$(&lt;/span>obj&lt;span class="k">)))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>程式設計(一)-05：Function</title><link>https://blog.smallten.tk/p/computer_programming_1-05/</link><pubDate>Sat, 21 Nov 2020 21:48:47 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-05/</guid><description>&lt;h1 id="function">Function&lt;/h1>
&lt;h2 id="函式">函式&lt;/h2>
&lt;h4 id="double">double&lt;/h4>
&lt;ul>
&lt;li>&lt;code>double&lt;/code> 是一種浮點數型別，就像是 &lt;code>float&lt;/code>&lt;/li>
&lt;li>就如同它的名字，它使用的記憶體大小為 &lt;code>float&lt;/code> 的兩倍&lt;/li>
&lt;li>建議: 當你需要浮點數的話，一律使用 &lt;code>double&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>到目前為止我們最常使用到的函式為 &lt;code>printf&lt;/code>&lt;/li>
&lt;li>我們稱這些函式為 C standard functions (C標準函式)&lt;/li>
&lt;li>所有的函式都被儲存在libraries中
&lt;ul>
&lt;li>如果你想要讀書，你需要知道書在哪，然後去圖書館借書&lt;/li>
&lt;li>如果你想要使用函式，你需要知道函式在哪，然後include library去使用函式&lt;/li>
&lt;li>例如: &lt;code>stdio.h &amp;lt;-&amp;gt; printf&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用 &lt;code>math.h&lt;/code> 時，需下編譯參數 &lt;code>-lm&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>永不重新發明輪子&lt;/li>
&lt;li>在開發前請先搜尋&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="c1">//原型宣告
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">Return&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Type&lt;/span> &lt;span class="n">Function&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">parameter&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Type&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">3&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="n">Return&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Type&lt;/span> &lt;span class="n">Function&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">parameter&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">Statements&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>使用原型宣告並將自訂函式置於main function之後的好處?
&lt;ul>
&lt;li>不用管function之間的先後順序。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="void">void&lt;/h4>
&lt;ul>
&lt;li>沒有型別&lt;/li>
&lt;li>在這裡，代表不需要回傳值&lt;/li>
&lt;/ul>
&lt;h2 id="標頭檔-header-files">標頭檔 (Header Files)&lt;/h2>
&lt;ul>
&lt;li>甚麼是header file?
&lt;ul>
&lt;li>是一個包含函式的原型宣告(prototypes)和其他定義(definitions)的檔案&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>為甚麼我們需要header file?
&lt;ul>
&lt;li>抽象層&lt;/li>
&lt;li>有時我們想保護我們的實作(implementation)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#ifndef
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#define
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="p">...&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="cp">#endif
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如同我所說，軟體工程師是懶惰的&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#pragma once
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="如何編譯多個檔案">如何編譯多個檔案&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#static
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">gcc&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="n">library&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="n">library&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">o&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="n">gcc&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="n">library&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="n">main&lt;/span>
&lt;span class="ln">4&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="cp">#dynamic
&lt;/span>&lt;span class="ln">6&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">gcc&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">shared&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="n">libtest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">so&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="n">gcc&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">ltest&lt;/span>
&lt;span class="ln">8&lt;/span>&lt;span class="cp">#執行
&lt;/span>&lt;span class="ln">9&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">main&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="link">Link&lt;/h4>
&lt;ul>
&lt;li>Static link: Static linking is the process of copying &lt;strong>all library modules&lt;/strong> used in the program into the &lt;strong>final executable&lt;/strong> image.&lt;/li>
&lt;li>Dynamic link: In dynamic linking the names of the external libraries (shared libraries) are placed in the final executable file while &lt;strong>the actual linking takes place at run time&lt;/strong> when both executable file and libraries are placed in the memory.&lt;/li>
&lt;li>&lt;code>.a&lt;/code> 是一堆 &lt;code>.o&lt;/code> 包在一起&lt;/li>
&lt;/ul>
&lt;h2 id="random">Random&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;time.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="n">srand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rand&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="c1">//n: 0 ~ 5
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>有安全要求時，請勿使用 &lt;code>random()&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="global-static-extern-variable">Global, Static, Extern Variable&lt;/h2>
&lt;h4 id="global">global&lt;/h4>
&lt;ul>
&lt;li>變數的生命週期為整個程式。&lt;/li>
&lt;li>也可被extern所存取到。&lt;/li>
&lt;/ul>
&lt;h4 id="static">static&lt;/h4>
&lt;ul>
&lt;li>變數只會在程式開始之前分配和初始化一次。&lt;/li>
&lt;li>在程式終止之前，儲存空間都不會被釋放。&lt;/li>
&lt;li>加上 &lt;code>static&lt;/code> 後， &lt;code>extern&lt;/code>便無法存取了。&lt;/li>
&lt;/ul>
&lt;h4 id="extern">extern&lt;/h4>
&lt;ul>
&lt;li>使用外部的變數。&lt;/li>
&lt;/ul>
&lt;h2 id="遞迴-recursive">遞迴 Recursive&lt;/h2>
&lt;ul>
&lt;li>遞迴定義如下
&lt;ul>
&lt;li>遞迴:
參見「遞迴」。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>什麼?這個定義什麼也沒有說啊!好吧，改一下:
&lt;ul>
&lt;li>遞迴:
如果你還是沒明白遞迴是什麼意思的話，參見「遞迴」。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="n">Return&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Type&lt;/span> &lt;span class="n">Function&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Name&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="n">parameter&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">list&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="n">Base&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="n">Return&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">defined&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">itself&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">parameter&lt;/span> &lt;span class="n">modification&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">8&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>所有能使用遞迴表達的敘述，皆能以迴圈的方式編寫。&lt;/li>
&lt;li>To iterate is human, to recurse, divine. — L. Peter Deutsch&lt;/li>
&lt;li>遞迴只應天上有，人間該當用迴圈&lt;/li>
&lt;li>我的觀點:
&lt;ul>
&lt;li>如果你找到關係式，遞迴是簡單的。&lt;/li>
&lt;li>時常用在虛擬碼(pseudo-code)中。&lt;/li>
&lt;li>性能效率可能比迭代差。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-04：Loop</title><link>https://blog.smallten.tk/p/computer_programming_1-04/</link><pubDate>Sun, 18 Oct 2020 20:33:18 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-04/</guid><description>&lt;h1 id="loop">Loop&lt;/h1>
&lt;pre>&lt;code>- `while`
- `for`
- `do while`
&lt;/code>&lt;/pre>
&lt;h2 id="while-loop">While Loop&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">條件&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="err">執行區塊&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>%.200f&lt;/code> 會發生什麼事? -&amp;gt; 精度不夠沒有意義&lt;/li>
&lt;li>&lt;code>while(1)&lt;/code> -&amp;gt; 無窮迴圈&lt;/li>
&lt;/ul>
&lt;h2 id="for-loop">For Loop&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">初始化&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="err">條件&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="err">執行後操作&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="err">執行區塊&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>i++&lt;/code> -&amp;gt; Use the current value of i. -&amp;gt; &lt;code>i = i + 1&lt;/code>&lt;/li>
&lt;li>&lt;code>++i&lt;/code> -&amp;gt; &lt;code>i = i + 1&lt;/code> -&amp;gt; Use the new value of i.&lt;/li>
&lt;li>&lt;code>{}&lt;/code> -&amp;gt; 變數生命週期範圍&lt;/li>
&lt;li>&lt;code>%4d&lt;/code> ( &lt;code>%#&lt;/code> ) -&amp;gt; 給最小的位數去顯示&lt;/li>
&lt;li>在 ANSI C, 變數只能被宣告在函式的開頭，而 Modern C 沒有任何限制&lt;/li>
&lt;/ul>
&lt;h2 id="do-while-loop">Do While Loop&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">do&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="err">執行區塊&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">條件&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>三種不同類型的迴圈毫無疑問的都可以互相轉換
&lt;ul>
&lt;li>除了 &lt;code>do while&lt;/code> 至少會執行一次&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>大多數來說，如果你知道要執行幾次迴圈的話，會使用 &lt;code>for&lt;/code>&lt;/li>
&lt;li>&lt;code>break&lt;/code>：離開當前的區段&lt;/li>
&lt;li>&lt;code>continue&lt;/code>：跳過剩餘的敘述，直接執行下一次迭代&lt;/li>
&lt;li>無窮迴圈不是個好東西? -&amp;gt; 不，或許你會需要他，例如：Web server&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>程式設計(一)-03：Condition Control</title><link>https://blog.smallten.tk/p/computer_programming_1-03/</link><pubDate>Thu, 15 Oct 2020 20:53:14 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-03/</guid><description>&lt;h1 id="condition-control">Condition Control&lt;/h1>
&lt;h2 id="簡介">簡介&lt;/h2>
&lt;ul>
&lt;li>我們想要讓電腦去做基礎的判斷
&lt;ul>
&lt;li>&lt;code>if&lt;/code>&lt;/li>
&lt;li>&lt;code>switch&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="if">If&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">condition1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="n">statements&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">condition2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果條件&lt;strong>不是錯誤&lt;/strong>，那麼將會執行大括號裡的敘述
&lt;ul>
&lt;li>簡而言之，&lt;code>false&lt;/code> 被定義為 &lt;code>0&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>&amp;gt;&lt;/code> -&amp;gt; 大於&lt;/li>
&lt;li>&lt;code>&amp;lt;&lt;/code> -&amp;gt; 小於&lt;/li>
&lt;li>&lt;code>&amp;gt;=&lt;/code> -&amp;gt; 大於等於&lt;/li>
&lt;li>&lt;code>&amp;lt;=&lt;/code> -&amp;gt; 小於等於&lt;/li>
&lt;li>&lt;code>==&lt;/code> -&amp;gt; 等於&lt;/li>
&lt;li>&lt;code>!=&lt;/code> -&amp;gt; 不等於&lt;/li>
&lt;li>&lt;code>&amp;amp;&amp;amp;&lt;/code> -&amp;gt; and&lt;/li>
&lt;li>&lt;code>||&lt;/code> -&amp;gt; or&lt;/li>
&lt;/ul>
&lt;h2 id="boolean">Boolean&lt;/h2>
&lt;ul>
&lt;li>在 &lt;code>Cpp&lt;/code> 裡，有個型別稱為 &lt;code>bool&lt;/code>
&lt;ul>
&lt;li>它只有兩個值：&lt;code>true, false&lt;/code>&lt;/li>
&lt;li>那麼 &lt;code>bool&lt;/code> 使用的記憶體大小為何能?( &lt;code>1 bit or 1 byte&lt;/code> ??)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在 &lt;code>ANSI C&lt;/code> 裡，沒有一個型別為boolean的&lt;/li>
&lt;li>從 &lt;code>C99&lt;/code> 開始，有一個標頭檔可以使用，&lt;code>stdbool.h&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="switch">Switch&lt;/h2>
&lt;ul>
&lt;li>你可以使用 &lt;code>if-else&lt;/code> 來做每個條件判斷，但是有時候可能會寫一個巨大的巢狀程式，因此將介紹另一個方法 &lt;code>switch&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="k">switch&lt;/span> &lt;span class="p">(){&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln">8&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>break&lt;/code>：從此處結束
&lt;ul>
&lt;li>那麼如果不使用 &lt;code>break&lt;/code> 呢??&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>default&lt;/code>：如果沒有 &lt;code>case&lt;/code> 符合，執行這段&lt;/li>
&lt;/ul>
&lt;h2 id="浮點數比較">浮點數比較&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="kt">float&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mf">0.3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;if01&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;else01&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mf">0.3f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;if02&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;else02&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>結果： &lt;code>else01 if02&lt;/code>&lt;/li>
&lt;li>請使用 &lt;code>sizeof()&lt;/code> 查看發生了什麼!(&lt;code>IEEE 754&lt;/code>)&lt;/li>
&lt;li>結論：&lt;strong>浮點數的比較是相當危險的!!&lt;/strong>&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-02：Arithmetic</title><link>https://blog.smallten.tk/p/computer_programming_1-02/</link><pubDate>Thu, 15 Oct 2020 11:19:09 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-02/</guid><description>&lt;h1 id="arithmetic">Arithmetic&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>變數
&lt;ul>
&lt;li>每個變數都必須有它的型別&lt;/li>
&lt;li>在使用變數前必須先宣告它&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在C裡面， &lt;code>=&lt;/code> 意思為”指定”，而不是”相等”，指派右邊的數值給左邊的變數&lt;/li>
&lt;li>一個好習慣，總是初始化變數&lt;/li>
&lt;li>C Spec:
&lt;ul>
&lt;li>C89:If an object that has static storage duration is not initialized explicitly, it is initialized implicitly.&lt;/li>
&lt;li>C99: If it has arithmetic type, it is initialized to (positive or unsigned) zero.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>In C99: &lt;code>a == (a / b) * b + a % b&lt;/code>&lt;/li>
&lt;li>&lt;code>printf&lt;/code> 是一個函式去印出格式化字串
&lt;ul>
&lt;li>&lt;code>%d&lt;/code> -&amp;gt; 有號十進位整數&lt;/li>
&lt;li>&lt;code>%f&lt;/code> -&amp;gt; 十進位浮點數&lt;/li>
&lt;li>&lt;code>%u&lt;/code> -&amp;gt; 無號十進位整數&lt;/li>
&lt;li>當然不只這些&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>小技巧&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">b&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">/=&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">%=&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>查看記憶體使用大小： &lt;code>sizeof()&lt;/code>，回傳單位為 &lt;code>byte&lt;/code> ( &lt;code>printf(&amp;quot;%lu&amp;quot;, sizeof());&lt;/code> )&lt;/li>
&lt;li>&lt;code>#include &amp;lt;stdint.h&amp;gt;&lt;/code>
&lt;ul>
&lt;li>int8_t: 8-bit signed interger&lt;/li>
&lt;li>int16_t: 16-bit signed interger&lt;/li>
&lt;li>int32_t: 32-bit signed interger&lt;/li>
&lt;li>int64_t: 64-bit signed interger&lt;/li>
&lt;li>uint8_t: 8-bit unsigned interger&lt;/li>
&lt;li>uint16_t: 16-bit unsigned interger&lt;/li>
&lt;li>uint32_t: 32-bit unsigned interger&lt;/li>
&lt;li>uint64_t: 64-bit unsigned interger&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>輸入：&lt;code>scanf(&amp;quot;%d&amp;quot;, &amp;amp;a);&lt;/code>
&lt;ul>
&lt;li>至於為甚麼需要 &lt;code>&amp;amp;&lt;/code>，之後會在指標的章節介紹到&lt;/li>
&lt;li>&lt;code>scanf&lt;/code> 是否有回傳值? ( &lt;code>man 3 scanf&lt;/code> )&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>最後也最重要的技能：RTFM and STFG&lt;/li>
&lt;/ul></description></item><item><title>Python-04：多線程-ts下載並合併成mp4</title><link>https://blog.smallten.tk/p/python-04/</link><pubDate>Sun, 04 Oct 2020 16:36:35 +0800</pubDate><guid>https://blog.smallten.tk/p/python-04/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;p>  這篇將帶你下載m3u8檔並分析出ts的檔案，再透過多線程來加速下載，之後再由FFmpeg合併成mp4。&lt;/p>
&lt;h1 id="python">Python&lt;/h1>
&lt;h2 id="下載m3u8">下載m3u8&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="n">m3u8Url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https://.../index.m3u8&amp;#39;&lt;/span>
&lt;span class="ln">2&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">downloadM3u8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./index.m3u8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="分析m3u8">分析m3u8&lt;/h2>
&lt;ul>
&lt;li>這部份請依照你所取得的m3u8檔進行分析，並將完整的ts檔的url放進tsList即可。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="n">tsList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="n">tsCnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">analyzeM3u8&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="n">tsList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clear&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">tempUrl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m3u8Url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./index.m3u8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">textList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="n">textList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;#EXT-X-ENDLIST&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">textList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">textList&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;#&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">tsList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tempUrl&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">global&lt;/span> &lt;span class="n">tsCnt&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">tsCnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsList&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下載ts檔">下載ts檔&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln"> 2&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">downloadts&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="k">global&lt;/span> &lt;span class="n">tsList&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">qsize&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.ts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">10&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">thList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">downloadts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="n">thList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">thList&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;下載ts完成&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="合併ts成mp4">合併ts成mp4&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;a+&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;file &amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.ts&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">command&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ffmpeg -y -f concat -i &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1"> -bsf:a aac_adtstoasc -c copy &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;合併成功&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="移除無用檔案">移除無用檔案&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">remove&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="n">shutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rmtree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./index.m3u8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="完整程式碼">完整程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">os&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">threading&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">queue&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">shutil&lt;/span>
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="n">m3u8Url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https://.../index.m3u8&amp;#39;&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="n">tsList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="n">tsCnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln"> 8&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">downloadM3u8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./index.m3u8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">13&lt;/span>
&lt;span class="ln">14&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">analyzeM3u8&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">tsList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clear&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">tempUrl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m3u8Url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./index.m3u8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">textList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="n">textList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;#EXT-X-ENDLIST&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">textList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">textList&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;#&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="n">tsList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tempUrl&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="k">global&lt;/span> &lt;span class="n">tsCnt&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">tsCnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsList&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">27&lt;/span>
&lt;span class="ln">28&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">downloadts&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="k">global&lt;/span> &lt;span class="n">tsList&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">qsize&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsList&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.ts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">35&lt;/span>
&lt;span class="ln">36&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;a+&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">39&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;file &amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.ts&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">40&lt;/span> &lt;span class="n">command&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ffmpeg -y -f concat -i &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1"> -bsf:a aac_adtstoasc -c copy &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">41&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;合併成功&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">43&lt;/span>
&lt;span class="ln">44&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">remove&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln">45&lt;/span> &lt;span class="n">shutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rmtree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">46&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./index.m3u8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">47&lt;/span>
&lt;span class="ln">48&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">49&lt;/span> &lt;span class="n">downloadM3u8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m3u8Url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">50&lt;/span> &lt;span class="n">analyzeM3u8&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">51&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;m3u8下載且分析完畢&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">52&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">53&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./ts/&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">54&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">55&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">56&lt;/span> &lt;span class="n">thList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="ln">57&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">58&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">downloadts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">59&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">60&lt;/span> &lt;span class="n">thList&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">61&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">thList&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">62&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">63&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;下載ts完成&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">64&lt;/span> &lt;span class="n">merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tsCnt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;./test.mp4&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">65&lt;/span> &lt;span class="n">remove&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Python-03：m3u8影片下載</title><link>https://blog.smallten.tk/p/python-03/</link><pubDate>Sun, 04 Oct 2020 11:07:24 +0800</pubDate><guid>https://blog.smallten.tk/p/python-03/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>現今你時常能在影音媒體網站看到 &lt;code>.m3u8&lt;/code> 的檔案，以及許多 &lt;code>.ts&lt;/code> 的分段媒體，本篇將教你如何簡單的下載成 &lt;code>.mp4&lt;/code> 檔。&lt;/li>
&lt;li>這篇並不詳加敘述 HLS 之類的觀念，若有興趣深入了解請自行查找資料。&lt;/li>
&lt;/ul>
&lt;h1 id="ffmpeg">FFmpeg&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="https://ffmpeg.org/" target="_blank" rel="noopener"
>FFmpeg官網&lt;/a>&lt;/li>
&lt;li>下載安裝完後，若為 windows 用戶請將 &lt;code>%ffmpeg%\bin&lt;/code> 的路徑加入環境變數中，並於terminal中執行 &lt;code>ffmpeg -version&lt;/code> 來查看是否成功加入。&lt;/li>
&lt;li>下載檔案，直接在 terminal 輸入 &lt;code>ffmpeg -i m3u8URL -c copy filname.mp4&lt;/code>，即可完成下載。(下面將提供Python的寫法)&lt;/li>
&lt;/ul>
&lt;h1 id="python">Python&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">ffmpeg_streaming&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kn">from&lt;/span> &lt;span class="nn">ffmpeg_streaming&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Formats&lt;/span>
&lt;span class="ln"> 4&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https://.../index.m3u8&amp;#39;&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="n">filename&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;test.mp4&amp;#39;&lt;/span>
&lt;span class="ln"> 7&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">ffmpeg_download&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">output_path&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">video&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ffmpeg_streaming&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">video&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stream2file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Formats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">h264&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">12&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">ffmpeg_download&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;./&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>下一篇將教你如何直接從 m3u8 裡讀取目錄，並使用多線程下載 ts 並合併成 mp4&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-01：Your first program</title><link>https://blog.smallten.tk/p/computer_programming_1-01/</link><pubDate>Sun, 04 Oct 2020 11:00:48 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-01/</guid><description>&lt;h1 id="hello-world">Hello World&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="ln">1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="c1">//Your first code.
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello World&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>main是每個C程式的進入點，我們稱它為main function(主函式)&lt;/li>
&lt;li>&lt;code>int&lt;/code> 及 &lt;code>return&lt;/code> 是C裡面的Keywords
&lt;ul>
&lt;li>int代表這個函式將會回傳一個整數&lt;/li>
&lt;li>每個函式都應該有一個回傳值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>每個敘述的結尾都應該要有 &lt;code>;&lt;/code>&lt;/li>
&lt;li>&lt;code>printf&lt;/code> 是一個會顯示格式化字串的函式&lt;/li>
&lt;li>&lt;code>\n&lt;/code> -&amp;gt; 換行&lt;/li>
&lt;li>&lt;code>\t&lt;/code> -&amp;gt; tab&lt;/li>
&lt;li>&lt;code>\\&lt;/code> -&amp;gt; \&lt;/li>
&lt;li>&lt;code>\&amp;quot;&lt;/code> -&amp;gt; “&lt;/li>
&lt;li>&lt;code>#&lt;/code> 的那一行是C的預處理器並且不需要;結尾&lt;/li>
&lt;li>&lt;code>stdio.h&lt;/code> -&amp;gt; standard input / output header(標準輸出/輸入標頭檔)&lt;/li>
&lt;li>註解 -&amp;gt; 是給開發者看的
&lt;ul>
&lt;li>&lt;code>//Your code&lt;/code> -&amp;gt; 單行&lt;/li>
&lt;li>&lt;code>/*Your code*/&lt;/code> -&amp;gt; 多行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>使用編譯器將程式碼編譯成組合語言，再由組譯器組議成機械碼或可執行的二進制檔&lt;/li>
&lt;li>IDE -&amp;gt; Integrated Development Environment，不是編譯器&lt;/li>
&lt;li>gcc是最受歡迎的C編譯器之一(不完全對!!因為它不只做了編譯的動作…)&lt;/li>
&lt;li>一些基本的Linux的操作指令
&lt;ul>
&lt;li>&lt;code>man&lt;/code> -&amp;gt; 不會就問那個男人吧，男人不會就Google&lt;/li>
&lt;li>&lt;code>ls&lt;/code>&lt;/li>
&lt;li>&lt;code>cd&lt;/code>&lt;/li>
&lt;li>&lt;code>rm&lt;/code>&lt;/li>
&lt;li>&lt;code>pwd&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>gcc main.c&lt;/code> 一些參數
&lt;ul>
&lt;li>&lt;code>-o&lt;/code>&lt;/li>
&lt;li>&lt;code>-v&lt;/code>&lt;/li>
&lt;li>&lt;code>-g&lt;/code>&lt;/li>
&lt;li>&lt;code>-Wall -Wextra&lt;/code>&lt;/li>
&lt;li>&lt;code>-O2&lt;/code> or &lt;code>-Og&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="makefile">Makefile&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-makefile" data-lang="makefile">&lt;span class="ln">1&lt;/span>&lt;span class="nf">all&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">2&lt;/span> gcc main.c -o main
&lt;span class="ln">3&lt;/span>&lt;span class="nf">clean&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="ln">4&lt;/span> rm -rf main
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>make&lt;/code> 將執行all下的指令&lt;/li>
&lt;li>中間縮排應為Tab而不是Space&lt;/li>
&lt;li>&lt;code>make clean&lt;/code>&lt;/li>
&lt;li>預設可執行的檔名為 &lt;code>makefile，Makefile，GNUmakefile&lt;/code>，若為其他可下 &lt;code>-f&lt;/code> 的參數&lt;/li>
&lt;/ul></description></item><item><title>Python-02：多線程-加速圖片下載</title><link>https://blog.smallten.tk/p/python-02/</link><pubDate>Mon, 03 Aug 2020 00:56:43 +0800</pubDate><guid>https://blog.smallten.tk/p/python-02/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>接續上一篇Python-01：爬蟲-圖片下載的內容，這篇文章將帶領大家使用多線程來加速圖片的下載&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ul>
&lt;li>首先我們先看個簡單的多線程範例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">threading&lt;/span>
&lt;span class="ln"> 2&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="c1"># 子執行緒的工作函數&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">job&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Child thread:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="c1"># 建立一個子執行緒&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">job&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="c1"># 執行該子執行緒&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="c1"># 主執行緒繼續執行自己的工作&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Main thread:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="c1"># 等待 t 這個子執行緒結束&lt;/span>
&lt;span class="ln">17&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Done.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">threading&lt;/span>
&lt;span class="ln"> 2&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="c1"># 子執行緒的工作函數&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">job&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Thread&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="c1"># 建立 5 個子執行緒&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="n">threads&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="n">threads&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">job&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,)))&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">threads&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="c1"># 主執行緒繼續執行自己的工作&lt;/span>
&lt;span class="ln">13&lt;/span>
&lt;span class="ln">14&lt;/span>&lt;span class="c1"># 等待所有子執行緒結束&lt;/span>
&lt;span class="ln">15&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">threads&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">17&lt;/span>&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Done.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>接下來我們修改&lt;a class="link" href="../python-01" >Python-01：爬蟲-圖片下載&lt;/a>中下載圖片那部分的程式碼&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="n">th_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_count&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="n">img&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zfill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">download_img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="n">th_list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">th_list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="完整程式碼">完整程式碼&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">webdriver&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kn">from&lt;/span> &lt;span class="nn">bs4&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">BeautifulSoup&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">threading&lt;/span>
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">download_img&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">save_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.jpg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">10&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">save_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;./test/&amp;#39;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https://www.ohmanhua.com/13621/1/1.html&amp;#39;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">chop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">webdriver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">chop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_extension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Adblock-Plus_v3.8.4.crx&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">browser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">webdriver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">chop&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">implicitly_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">soup&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BeautifulSoup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">page_source&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;lxml&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="n">img_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">soup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;select&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;class&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;mh_select&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;option&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;value&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">soup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;class&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;mh_comicpic&amp;#39;&lt;/span>&lt;span class="p">})[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;img&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;src&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">img_url&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https:&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">img_url&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">img_url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">th_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_count&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="n">img&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zfill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">download_img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="n">th_list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">th&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">th_list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="n">th&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Python-01：爬蟲-圖片下載</title><link>https://blog.smallten.tk/p/python-01/</link><pubDate>Mon, 03 Aug 2020 00:39:24 +0800</pubDate><guid>https://blog.smallten.tk/p/python-01/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這一篇將帶領大家透過Python的爬蟲自動化的下載圖片&lt;/li>
&lt;/ul>
&lt;h1 id="安裝">安裝&lt;/h1>
&lt;ul>
&lt;li>打開終端機，安裝下列套件
&lt;ul>
&lt;li>&lt;code>pip install requests&lt;/code>&lt;/li>
&lt;li>&lt;code>pip install BeautifulSoup4&lt;/code>&lt;/li>
&lt;li>&lt;code>pip install lxml&lt;/code>&lt;/li>
&lt;li>&lt;code>pip install selenium&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>至 Chrome Driver 下載當前電腦中Chrome所對應版本的Driver&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ul>
&lt;li>首先因為這次的主題為圖片下載，因此我們找了一個擁有大量圖片的漫畫網頁來進行教學。&lt;/li>
&lt;li>由於這個網頁的圖片是由JavaScript加載的，因此一開始我們使用Selenium來開啟網頁
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">webdriver&lt;/span>
&lt;span class="ln">2&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https://www.ohmanhua.com/13621/1/1.html&amp;#39;&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="c1">#使用crx插件&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="n">chop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">webdriver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="n">chop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_extension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Adblock-Plus_v3.8.4.crx&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="n">browser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">webdriver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">chop&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">8&lt;/span>&lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">implicitly_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>當然若不想顯示瀏覽器的視窗可以使用headless模式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="n">chop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--headless&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">#規避google bug&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="n">chop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_argument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;--disable-gpu&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>接下來使用BeautifulSoup4來分析頁面，並取得圖片網址，和共幾張圖片&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="n">img_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">soup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;select&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;class&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;mh_select&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;option&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;value&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">soup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;class&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;mh_comicpic&amp;#39;&lt;/span>&lt;span class="p">})[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;img&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;src&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="n">img_url&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https:&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">img_url&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">img_url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>最後便是下載圖片和關閉瀏覽器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">download_img&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">save_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.jpg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">5&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_count&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="n">img&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zfill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="n">download_img&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="完整程式碼">完整程式碼&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="kn">from&lt;/span> &lt;span class="nn">selenium&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">webdriver&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kn">from&lt;/span> &lt;span class="nn">bs4&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">BeautifulSoup&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">download_img&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">save_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.jpg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">10&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="n">save_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;./download/&amp;#39;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">chop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">webdriver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ChromeOptions&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="n">chop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_extension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Adblock-Plus_v3.8.4.crx&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">browser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">webdriver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Chrome&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">chop&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">implicitly_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="n">soup&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BeautifulSoup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">page_source&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;lxml&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="n">img_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">soup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;select&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;class&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;mh_select&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;option&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;value&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">soup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;class&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;mh_comicpic&amp;#39;&lt;/span>&lt;span class="p">})[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;img&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;src&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">img_url&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;https:&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">img_url&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">img_url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rsplit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_count&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="n">img&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">img_url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zfill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="n">download_img&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">browser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>簡易氣象站-02</title><link>https://blog.smallten.tk/p/weather-02/</link><pubDate>Sun, 12 Jul 2020 09:31:38 +0800</pubDate><guid>https://blog.smallten.tk/p/weather-02/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這系列主題將帶領大家建立一個簡易的氣象觀測站，而這一小節將製作在Raspberry pi用Python讀取Arduino Serial的數值，並且製作一個簡易的UI實時顯示出數值。&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>上一小節的成品&lt;/li>
&lt;li>Raspberry pi * 1&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ol>
&lt;li>打開Raspberry pi的Terminal，並輸入 &lt;code>ls /dev/tty*&lt;/code>&lt;/li>
&lt;li>將Arduino的Usb接上Raspberry pi&lt;/li>
&lt;li>再次於Terminal中輸入 &lt;code>ls /dev/tty*&lt;/code>，比較兩次的差異，即可知Arduino使用的序列埠為何(例如此時為/ &lt;code>dev/ttyACM0&lt;/code>，請依照情況自行修改)&lt;/li>
&lt;li>於Terminal中輸入 &lt;code>python3 -m pip install pyserial&lt;/code>&lt;/li>
&lt;li>將以下程式碼建立成一個python檔，再以python3執行即可&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">serial&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="nn">tkinter&lt;/span> &lt;span class="kn">as&lt;/span> &lt;span class="nn">tk&lt;/span>
&lt;span class="ln"> 4&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="k">def&lt;/span> &lt;span class="nf">getData&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="n">ser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">serial&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Serial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/dev/ttyACM0&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9600&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">timeout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">ser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">flush&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">ser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">in_waiting&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="n">arduinoData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readline&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">errors&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ignore&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rstrip&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arduinoData&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">arduinoData&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">arduinoData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">break&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">temperature_value&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arduinoData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39; 度C&amp;#39;&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="n">humidity_value&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arduinoData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39; %&amp;#39;&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="n">pmat25_value&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arduinoData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39; ug/m^3&amp;#39;&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="n">wind_value&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arduinoData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39; 級&amp;#39;&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="k">break&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">after&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">getData&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">27&lt;/span>
&lt;span class="ln">28&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">window&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Tk&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Weather&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">geometry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;500x250&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resizable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">33&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="n">header_label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;環境監測&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">borderwidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">relief&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;solid&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="n">header_label&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TOP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">36&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="n">temperature_frame&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="n">temperature_frame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TOP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">39&lt;/span> &lt;span class="n">temperature_label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temperature_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;溫度: &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">40&lt;/span> &lt;span class="n">temperature_label&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">41&lt;/span> &lt;span class="n">temperature_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temperature_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="n">temperature_value&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">43&lt;/span>
&lt;span class="ln">44&lt;/span> &lt;span class="n">humidity_frame&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">45&lt;/span> &lt;span class="n">humidity_frame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TOP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">46&lt;/span> &lt;span class="n">humidity_label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">humidity_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;濕度: &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">47&lt;/span> &lt;span class="n">humidity_label&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">48&lt;/span> &lt;span class="n">humidity_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">humidity_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">49&lt;/span> &lt;span class="n">humidity_value&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">50&lt;/span>
&lt;span class="ln">51&lt;/span> &lt;span class="n">pmat25_frame&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">52&lt;/span> &lt;span class="n">pmat25_frame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TOP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">53&lt;/span> &lt;span class="n">pmat25_label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pmat25_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;PM2.5: &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">54&lt;/span> &lt;span class="n">pmat25_label&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">55&lt;/span> &lt;span class="n">pmat25_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pmat25_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">56&lt;/span> &lt;span class="n">pmat25_value&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">57&lt;/span>
&lt;span class="ln">58&lt;/span> &lt;span class="n">wind_frame&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">59&lt;/span> &lt;span class="n">wind_frame&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TOP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">60&lt;/span> &lt;span class="n">wind_label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wind_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;風速: &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">61&lt;/span> &lt;span class="n">wind_label&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">62&lt;/span> &lt;span class="n">wind_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wind_frame&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Arial&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">63&lt;/span> &lt;span class="n">wind_value&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">side&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">LEFT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">64&lt;/span>
&lt;span class="ln">65&lt;/span> &lt;span class="n">getData&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">66&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mainloop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>最終成果圖
&lt;figure style="flex-grow: 180; flex-basis: 433px">
&lt;a href="https://blog.smallten.tk/p/weather-02/weather-02-01.png" data-size="1204x667">&lt;img src="https://blog.smallten.tk/p/weather-02/weather-02-01.png"
srcset="https://blog.smallten.tk/p/weather-02/weather-02-01_hu20a2b6b3b028921376cf98bcdf6883e5_62784_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/weather-02/weather-02-01_hu20a2b6b3b028921376cf98bcdf6883e5_62784_1024x0_resize_box_2.png 1024w"
width="1204"
height="667"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul></description></item><item><title>簡易氣象站-01</title><link>https://blog.smallten.tk/p/weather-01/</link><pubDate>Sun, 12 Jul 2020 09:02:34 +0800</pubDate><guid>https://blog.smallten.tk/p/weather-01/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這系列主題將帶領大家建立一個簡易的氣象觀測站，而這一小節將製作由Arduino抓取感測器數值的部分。&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino Uno R3 * 1&lt;/li>
&lt;li>攀藤 G5 PMS5003 * 1&lt;/li>
&lt;li>DFrobot 三杯式風速感測器 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;h2 id="連結電路">連結電路&lt;/h2>
&lt;p>&lt;figure style="flex-grow: 132; flex-basis: 318px">
&lt;a href="https://blog.smallten.tk/p/weather-01/weather-01-01.jpg" data-size="370x279">&lt;img src="https://blog.smallten.tk/p/weather-01/weather-01-01.jpg"
srcset="https://blog.smallten.tk/p/weather-01/weather-01-01_hu48c71b804eacb5bf162295a0daa3992c_15962_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/weather-01/weather-01-01_hu48c71b804eacb5bf162295a0daa3992c_15962_1024x0_resize_q75_box.jpg 1024w"
width="370"
height="279"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="uno程式碼">Uno程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;SoftwareSerial.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#define windPin A0
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="n">SoftwareSerial&lt;/span> &lt;span class="nf">pmsSerial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 4&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="n">pmValue&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="n">pmcf25&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="n">pmat25&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">temperature&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">humandity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">retrievepm25&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">high&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">pmsSerial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">available&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pmsSerial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="mh">0x42&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="mh">0x4d&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">27&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">12&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">14&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">24&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="n">pmcf25&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">high&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="n">pmValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pmcf25&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="n">pmat25&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">high&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">pmValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pmat25&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">30&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">25&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="n">temperature&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">256&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">high&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">27&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">34&lt;/span> &lt;span class="n">humandity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">256&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">high&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">35&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">36&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pmsSerial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">available&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="n">pmsSerial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">39&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">40&lt;/span>
&lt;span class="ln">41&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">setup&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9600&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">43&lt;/span> &lt;span class="n">pmsSerial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9600&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">44&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">45&lt;/span>
&lt;span class="ln">46&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">loop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">47&lt;/span> &lt;span class="n">retrievepm25&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">48&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temperature&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">49&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">50&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">humandity&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">51&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">52&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pmat25&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">53&lt;/span>
&lt;span class="ln">54&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">windValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">analogRead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">windPin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">55&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">Level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">windValue&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mf">5.0&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1023.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">56&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">57&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Level&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">58&lt;/span>
&lt;span class="ln">59&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">60&lt;/span> &lt;span class="n">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">61&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Arduino-05：HC-05 AT命令</title><link>https://blog.smallten.tk/p/arduino-05/</link><pubDate>Sun, 10 May 2020 21:56:45 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-05/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將教大家透過Arduino的序列埠設定HC-05的AT命令&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino Uno * 1&lt;/li>
&lt;li>HC-05藍芽模組 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="教學">教學&lt;/h1>
&lt;h2 id="腳位連接">腳位連接&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Arduino&lt;/th>
&lt;th>HC-05&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>5V&lt;/td>
&lt;td>VCC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GND&lt;/td>
&lt;td>GND&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8&lt;/td>
&lt;td>TX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9&lt;/td>
&lt;td>RX&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="程式碼">程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;SoftwareSerial.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="n">SoftwareSerial&lt;/span> &lt;span class="nf">BT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">setup&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9600&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="n">BT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">38400&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">10&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">loop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">available&lt;/span>&lt;span class="p">()){&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">BT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">available&lt;/span>&lt;span class="p">()){&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>連接腳位，並上傳程式碼，最後給HC-05供電前，先按住上面的按鈕，再提供電源，燈號將變成約兩秒一閃，及表示進入了AT命令模式&lt;/li>
&lt;li>接下來打開序列埠監控視窗，將設定調成&amp;quot;9600 baud&amp;quot;和&amp;quot;NL與CR&amp;quot;，最後依需求輸入以下命令即可&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>AT -&amp;gt; 顯示OK表示連接成功&lt;/li>
&lt;li>查看韌體版本 -&amp;gt; AT+VERSION&lt;/li>
&lt;li>查看名稱 -&amp;gt; AT+NAME?&lt;/li>
&lt;li>修改名稱 -&amp;gt; AT+NAME=你要的名字&lt;/li>
&lt;li>查看密碼 -&amp;gt; AT+PSWD?&lt;/li>
&lt;li>修改密碼 -&amp;gt; AT+PSWD=你要的密碼&lt;/li>
&lt;/ul></description></item><item><title>Arduino-04：藍芽遙控車</title><link>https://blog.smallten.tk/p/arduino-04/</link><pubDate>Sun, 03 May 2020 16:29:01 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-04/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將帶領大家製作藍芽的遙控車，並且用Blynk的Joystick操控它&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino nano * 1&lt;/li>
&lt;li>L298N 馬達控制板 * 1&lt;/li>
&lt;li>HC-05 藍芽模組 * 1&lt;/li>
&lt;li>二輪直流馬達遙控車 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="下載">下載&lt;/h1>
&lt;ul>
&lt;li>至手機應用商店下載Blynk的App－&lt;a class="link" href="https://blynk.io/" target="_blank" rel="noopener"
>Blynk官網&lt;/a>&lt;/li>
&lt;li>下載Blynk函式庫&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ol>
&lt;li>先上傳程式碼至Nano板中&lt;/li>
&lt;li>依照下方圖示連接腳位，並且設定Blynk App內的物件&lt;/li>
&lt;/ol>
&lt;h2 id="連接腳位">連接腳位&lt;/h2>
&lt;p>&lt;figure style="flex-grow: 167; flex-basis: 401px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-04.jpg" data-size="1668x996">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-04.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-04_huc09fd31ce9bb786d1041f70ffa59556f_82083_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-04_huc09fd31ce9bb786d1041f70ffa59556f_82083_1024x0_resize_q75_box.jpg 1024w"
width="1668"
height="996"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="設定blynk">設定Blynk&lt;/h2>
&lt;ul>
&lt;li>創建3個元件，分別為Button、Bluetooth、Joystick，並且依下圖進行設置
&lt;figure style="flex-grow: 53; flex-basis: 128px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-01.jpg" data-size="1080x2022">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-01.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-01_hue57180307d431242e42d97cfedf97de1_143362_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-01_hue57180307d431242e42d97cfedf97de1_143362_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2022"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 462; flex-basis: 1110px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-02.jpg" data-size="907x196">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-02.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-02_hu2e7025b0c6a151426e93fe60ae1d9c1a_10112_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-02_hu2e7025b0c6a151426e93fe60ae1d9c1a_10112_1024x0_resize_q75_box.jpg 1024w"
width="907"
height="196"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 53; flex-basis: 128px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-03.jpg" data-size="1080x2014">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-03.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-03_hucaa0b2ce0717571834e5be3d421346d7_167669_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-03_hucaa0b2ce0717571834e5be3d421346d7_167669_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2014"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h2 id="nano程式碼">nano程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;BlynkSimpleSerialBLE.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#define BLYNK_USE_DIRECT_CONNECT
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Blynk Auth&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">car&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">};&lt;/span> &lt;span class="c1">//in 1,2,4,3
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">en&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln"> 8&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">Controller&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">11&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="n">BLYNK_WRITE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">asInt&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="nf">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">64&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="mi">192&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">19&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">setup&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9600&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Serial&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">24&lt;/span> &lt;span class="n">pinMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">OUTPUT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">pinMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">OUTPUT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">29&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">30&lt;/span>
&lt;span class="ln">31&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">loop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="n">Controller&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">34&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">35&lt;/span>
&lt;span class="ln">36&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">Controller&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">37&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">38&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]));&lt;/span>
&lt;span class="ln">39&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="ln">40&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])),&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])));&lt;/span>
&lt;span class="ln">41&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">42&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">43&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="ln">44&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">45&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]));&lt;/span>
&lt;span class="ln">46&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">47&lt;/span> &lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">48&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]));&lt;/span>
&lt;span class="ln">49&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">50&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])),&lt;/span> &lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="n">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])));&lt;/span>
&lt;span class="ln">51&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">52&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">53&lt;/span>
&lt;span class="ln">54&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">a3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">a4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">e1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">e2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">55&lt;/span> &lt;span class="n">digitalWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">a1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">56&lt;/span> &lt;span class="n">digitalWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">a2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">57&lt;/span> &lt;span class="n">digitalWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">a3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">58&lt;/span> &lt;span class="n">digitalWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">car&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">a4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">59&lt;/span> &lt;span class="n">analogWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">e1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">60&lt;/span> &lt;span class="n">analogWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">e2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">61&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="補充">補充&lt;/h1>
&lt;ul>
&lt;li>由於這邊我們將HC-05和Nano板的RX、TX對接，因此自行修改程式碼後要重新上傳時，記得先移除連接Nano板的那兩條線，當然也可使用SoftwareSerial Library來進行，就不用拔除線路了&lt;/li>
&lt;li>若要自行修改HC-05的設定，可參考下一篇文章 &lt;a class="link" href="../arduino-05" >ARDUINO-05：HC-05 AT命令&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Arduino-03：跑馬燈</title><link>https://blog.smallten.tk/p/arduino-03/</link><pubDate>Thu, 09 Apr 2020 14:50:56 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-03/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將帶領大家製作點陣跑馬燈，並且用Blynk來操控它&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>WeMos D1R2 * 1&lt;/li>
&lt;li>MAX7219 8*8LED點陣模組 * 2&lt;/li>
&lt;/ul>
&lt;h1 id="下載">下載&lt;/h1>
&lt;ul>
&lt;li>至手機應用商店下載Blynk的App－&lt;a class="link" href="https://blynk.io/https://blynk.io/" target="_blank" rel="noopener"
>Blynk官網&lt;/a>&lt;/li>
&lt;li>下載Blynk函式庫&lt;/li>
&lt;li>&lt;a class="link" href="https://code.google.com/archive/p/arudino-maxmatrix-library/" target="_blank" rel="noopener"
>maxmatrix&lt;/a>－下載並加入函式庫&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;h2 id="連接腳位">連接腳位&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MAX7219&lt;/th>
&lt;th>D1R2&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>VCC&lt;/td>
&lt;td>5V&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GND&lt;/td>
&lt;td>GND&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DIN&lt;/td>
&lt;td>MOSI/D7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CS&lt;/td>
&lt;td>SS/D8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLK&lt;/td>
&lt;td>SCK/D5&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>若要串聯多塊MAX7219的話，請將下一塊的DIN接至上一塊的DOUT連接腳位&lt;/li>
&lt;/ul>
&lt;h2 id="設定blynk">設定Blynk&lt;/h2>
&lt;ul>
&lt;li>請照下圖拉出三個物件，並設定其相關參數
&lt;figure style="flex-grow: 52; flex-basis: 126px">
&lt;a href="https://blog.smallten.tk/p/arduino-03/Arduino-03-01.jpg" data-size="1080x2042">&lt;img src="https://blog.smallten.tk/p/arduino-03/Arduino-03-01.jpg"
srcset="https://blog.smallten.tk/p/arduino-03/Arduino-03-01_hu27f7dc34c9db8fd2b063f3fba6be9864_75209_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-03/Arduino-03-01_hu27f7dc34c9db8fd2b063f3fba6be9864_75209_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2042"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 53; flex-basis: 129px">
&lt;a href="https://blog.smallten.tk/p/arduino-03/Arduino-03-02.jpg" data-size="1080x2001">&lt;img src="https://blog.smallten.tk/p/arduino-03/Arduino-03-02.jpg"
srcset="https://blog.smallten.tk/p/arduino-03/Arduino-03-02_hu27f7dc34c9db8fd2b063f3fba6be9864_82061_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-03/Arduino-03-02_hu27f7dc34c9db8fd2b063f3fba6be9864_82061_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2001"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 53; flex-basis: 127px">
&lt;a href="https://blog.smallten.tk/p/arduino-03/Arduino-03-03.jpg" data-size="1080x2027">&lt;img src="https://blog.smallten.tk/p/arduino-03/Arduino-03-03.jpg"
srcset="https://blog.smallten.tk/p/arduino-03/Arduino-03-03_hu27f7dc34c9db8fd2b063f3fba6be9864_83693_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-03/Arduino-03-03_hu27f7dc34c9db8fd2b063f3fba6be9864_83693_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2027"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h2 id="d1r2程式碼">D1R2程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="ln"> 1&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;MaxMatrix.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;avr/pgmspace.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;ESP8266WiFi.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;BlynkSimpleEsp8266.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="ln"> 5&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Blynk auth&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">ssid&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Wifi ssid&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">pass&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Wifi password&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span>
&lt;span class="ln"> 10&lt;/span>&lt;span class="n">PROGMEM&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">CH&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 11&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// space
&lt;/span>&lt;span class="ln"> 12&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1011111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// !
&lt;/span>&lt;span class="ln"> 13&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// &amp;#34;
&lt;/span>&lt;span class="ln"> 14&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// #
&lt;/span>&lt;span class="ln"> 15&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1101010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// $
&lt;/span>&lt;span class="ln"> 16&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// %
&lt;/span>&lt;span class="ln"> 17&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// &amp;amp;
&lt;/span>&lt;span class="ln"> 18&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// &amp;#39;
&lt;/span>&lt;span class="ln"> 19&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// (
&lt;/span>&lt;span class="ln"> 20&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// )
&lt;/span>&lt;span class="ln"> 21&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// *
&lt;/span>&lt;span class="ln"> 22&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// +
&lt;/span>&lt;span class="ln"> 23&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10110000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1110000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ,
&lt;/span>&lt;span class="ln"> 24&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// -
&lt;/span>&lt;span class="ln"> 25&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// .
&lt;/span>&lt;span class="ln"> 26&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// /
&lt;/span>&lt;span class="ln"> 27&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 0
&lt;/span>&lt;span class="ln"> 28&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 1
&lt;/span>&lt;span class="ln"> 29&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 2
&lt;/span>&lt;span class="ln"> 30&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 3
&lt;/span>&lt;span class="ln"> 31&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 4
&lt;/span>&lt;span class="ln"> 32&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 5
&lt;/span>&lt;span class="ln"> 33&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 6
&lt;/span>&lt;span class="ln"> 34&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 7
&lt;/span>&lt;span class="ln"> 35&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 8
&lt;/span>&lt;span class="ln"> 36&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 9
&lt;/span>&lt;span class="ln"> 37&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B01010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// :
&lt;/span>&lt;span class="ln"> 38&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B01010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ;
&lt;/span>&lt;span class="ln"> 39&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// &amp;lt;
&lt;/span>&lt;span class="ln"> 40&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// =
&lt;/span>&lt;span class="ln"> 41&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// &amp;gt;
&lt;/span>&lt;span class="ln"> 42&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1011001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ?
&lt;/span>&lt;span class="ln"> 43&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1011101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// @
&lt;/span>&lt;span class="ln"> 44&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// A
&lt;/span>&lt;span class="ln"> 45&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// B
&lt;/span>&lt;span class="ln"> 46&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// C
&lt;/span>&lt;span class="ln"> 47&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// D
&lt;/span>&lt;span class="ln"> 48&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// E
&lt;/span>&lt;span class="ln"> 49&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// F
&lt;/span>&lt;span class="ln"> 50&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// G
&lt;/span>&lt;span class="ln"> 51&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// H
&lt;/span>&lt;span class="ln"> 52&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// I
&lt;/span>&lt;span class="ln"> 53&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// J
&lt;/span>&lt;span class="ln"> 54&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// K
&lt;/span>&lt;span class="ln"> 55&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// L
&lt;/span>&lt;span class="ln"> 56&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// M
&lt;/span>&lt;span class="ln"> 57&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// N
&lt;/span>&lt;span class="ln"> 58&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// O
&lt;/span>&lt;span class="ln"> 59&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// P
&lt;/span>&lt;span class="ln"> 60&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// Q
&lt;/span>&lt;span class="ln"> 61&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// R
&lt;/span>&lt;span class="ln"> 62&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// S
&lt;/span>&lt;span class="ln"> 63&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// T
&lt;/span>&lt;span class="ln"> 64&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// U
&lt;/span>&lt;span class="ln"> 65&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// V
&lt;/span>&lt;span class="ln"> 66&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// W
&lt;/span>&lt;span class="ln"> 67&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100011&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// X
&lt;/span>&lt;span class="ln"> 68&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1110000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// Y
&lt;/span>&lt;span class="ln"> 69&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// Z
&lt;/span>&lt;span class="ln"> 70&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// [
&lt;/span>&lt;span class="ln"> 71&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// backslash
&lt;/span>&lt;span class="ln"> 72&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ]
&lt;/span>&lt;span class="ln"> 73&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// hat
&lt;/span>&lt;span class="ln"> 74&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// _
&lt;/span>&lt;span class="ln"> 75&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// `
&lt;/span>&lt;span class="ln"> 76&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// a
&lt;/span>&lt;span class="ln"> 77&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// b
&lt;/span>&lt;span class="ln"> 78&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// c
&lt;/span>&lt;span class="ln"> 79&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// d
&lt;/span>&lt;span class="ln"> 80&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// e
&lt;/span>&lt;span class="ln"> 81&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// f
&lt;/span>&lt;span class="ln"> 82&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B01111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// g
&lt;/span>&lt;span class="ln"> 83&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// h
&lt;/span>&lt;span class="ln"> 84&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// i
&lt;/span>&lt;span class="ln"> 85&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// j
&lt;/span>&lt;span class="ln"> 86&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// k
&lt;/span>&lt;span class="ln"> 87&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// l
&lt;/span>&lt;span class="ln"> 88&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// m
&lt;/span>&lt;span class="ln"> 89&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// n
&lt;/span>&lt;span class="ln"> 90&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// o
&lt;/span>&lt;span class="ln"> 91&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B11111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// p
&lt;/span>&lt;span class="ln"> 92&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B11111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// q
&lt;/span>&lt;span class="ln"> 93&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// r
&lt;/span>&lt;span class="ln"> 94&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// s
&lt;/span>&lt;span class="ln"> 95&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// t
&lt;/span>&lt;span class="ln"> 96&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// u
&lt;/span>&lt;span class="ln"> 97&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0011100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// v
&lt;/span>&lt;span class="ln"> 98&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// w
&lt;/span>&lt;span class="ln"> 99&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0010000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0101000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// x
&lt;/span>&lt;span class="ln">100&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10011100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B10100000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// y
&lt;/span>&lt;span class="ln">101&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1100100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1010100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1001100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// z
&lt;/span>&lt;span class="ln">102&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// {
&lt;/span>&lt;span class="ln">103&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1111111&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// |
&lt;/span>&lt;span class="ln">104&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B1000001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0110110&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// }
&lt;/span>&lt;span class="ln">105&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0001000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B0000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ~
&lt;/span>&lt;span class="ln">106&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="ln">107&lt;/span>
&lt;span class="ln">108&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">byte&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">D7&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">109&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">byte&lt;/span> &lt;span class="n">cs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">D8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">110&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">byte&lt;/span> &lt;span class="n">clk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">D5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">111&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">byte&lt;/span> &lt;span class="n">maxInUse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//使用的點陣模塊數量
&lt;/span>&lt;span class="ln">112&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">MaxMatrix&lt;/span> &lt;span class="nf">m&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">maxInUse&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">113&lt;/span>&lt;span class="n">byte&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">114&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">115&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">speed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//移動的速度，單位ms
&lt;/span>&lt;span class="ln">116&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">light&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">117&lt;/span>&lt;span class="kt">bool&lt;/span> &lt;span class="n">islight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">118&lt;/span>
&lt;span class="ln">119&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">printChar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">120&lt;/span>
&lt;span class="ln">121&lt;/span>&lt;span class="n">BLYNK_WRITE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">122&lt;/span> &lt;span class="n">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">asStr&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">123&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">maxInUse&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">124&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">125&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">126&lt;/span>
&lt;span class="ln">127&lt;/span>&lt;span class="n">BLYNK_WRITE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">128&lt;/span> &lt;span class="n">light&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">asInt&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">129&lt;/span> &lt;span class="n">islight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">130&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">131&lt;/span>
&lt;span class="ln">132&lt;/span>&lt;span class="n">BLYNK_WRITE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">133&lt;/span> &lt;span class="n">speed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">asInt&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">134&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">135&lt;/span>
&lt;span class="ln">136&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">setup&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">137&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">115200&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">138&lt;/span> &lt;span class="c1">//Blynk
&lt;/span>&lt;span class="ln">139&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">auth&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ssid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">140&lt;/span> &lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">virtualWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">light&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">141&lt;/span> &lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">virtualWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">speed&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">142&lt;/span> &lt;span class="c1">//8*8 led
&lt;/span>&lt;span class="ln">143&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">init&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">144&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setIntensity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">light&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//點陣模組的亮度
&lt;/span>&lt;span class="ln">145&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">146&lt;/span>
&lt;span class="ln">147&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">loop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">148&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">connected&lt;/span>&lt;span class="p">()){&lt;/span>
&lt;span class="ln">149&lt;/span> &lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">150&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">islight&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">151&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setIntensity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">light&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">152&lt;/span> &lt;span class="n">islight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">153&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">154&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="ln">155&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">156&lt;/span> &lt;span class="n">printChar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="ln">157&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">158&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">159&lt;/span> &lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">160&lt;/span> &lt;span class="n">Blynk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">auth&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ssid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">161&lt;/span> &lt;span class="n">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Reconnected!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">162&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">163&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">164&lt;/span>
&lt;span class="ln">165&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">printChar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">166&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">167&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">168&lt;/span> &lt;span class="n">memcpy_P&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CH&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">169&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">writeSprite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">170&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setColumn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">171&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">172&lt;/span> &lt;span class="n">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">173&lt;/span> &lt;span class="cm">/*往左位移，第一個參數false，代表不旋轉；
&lt;/span>&lt;span class="ln">174&lt;/span>&lt;span class="cm"> 第二個參數false，代表不清空顯示；若設成true，顯示器將不呈現資料。*/&lt;/span>
&lt;span class="ln">175&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">shiftLeft&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">176&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">177&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="補充">補充&lt;/h1>
&lt;ul>
&lt;li>若是覺得Blynk的能量太少，可自行架設 &lt;a class="link" href="https://github.com/blynkkk/blynk-server" target="_blank" rel="noopener"
>Server&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Arduino-02：UNOJOY</title><link>https://blog.smallten.tk/p/arduino-02/</link><pubDate>Thu, 09 Apr 2020 08:16:57 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-02/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將帶領大家把Arduino手把變成電腦手把&lt;/li>
&lt;/ul>
&lt;h1 id="所需硬體">所需硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino Uno R3 * 1&lt;/li>
&lt;li>JoyStick 雙軸按鍵搖桿模組 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="下載檔案">下載檔案&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/FLIP" target="_blank" rel="noopener"
>FLIP&lt;/a> － 請下載包含JRE的檔案(Java Runtime Environment included)&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/AlanChatham/UnoJoy" target="_blank" rel="noopener"
>UnoJoy&lt;/a> － 將Uno變成電腦手把&lt;/li>
&lt;li>&lt;a class="link" href="https://www.x360ce.com/" target="_blank" rel="noopener"
>x360ce&lt;/a> － 將手把模擬成xbox 360的手把&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ol>
&lt;li>將下載好的FLIP安裝至電腦&lt;/li>
&lt;li>確定電腦已安裝Arduino IDE，並已連接Uno板至電腦，可在裝置管理員查看狀態（如下圖）
&lt;figure style="flex-grow: 136; flex-basis: 327px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-01.png" data-size="976x715">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-01.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-01_hu90d6f7b7fa99914680e5f4bf53d16a63_121892_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-01_hu90d6f7b7fa99914680e5f4bf53d16a63_121892_1024x0_resize_box_2.png 1024w"
width="976"
height="715"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>打開剛剛下載的UnoJoy資料夾下的檔案，並將它上傳進Uno板中 &lt;code>UnoJoy-master\UnoJoy\UnoJoyArduinoSample\UnoJoyArduinoSample.ino&lt;/code>&lt;/li>
&lt;li>關閉Arduino IDE，進入DFU Mode，進入方式：用導線同時接觸下圖框起處的兩根針腳
&lt;figure style="flex-grow: 133; flex-basis: 321px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-02.jpg" data-size="1358x1014">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-02.jpg"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-02_hu8b11114da834c901b391eecfc0650259_230764_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-02_hu8b11114da834c901b391eecfc0650259_230764_1024x0_resize_q75_box.jpg 1024w"
width="1358"
height="1014"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>確認已進入 DFU Mode，如下圖
&lt;figure style="flex-grow: 136; flex-basis: 327px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-03.png" data-size="976x715">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-03.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-03_hudcfafbb358511a7db2186a1c644da5ec_110930_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-03_hudcfafbb358511a7db2186a1c644da5ec_110930_1024x0_resize_box_2.png 1024w"
width="976"
height="715"
loading="lazy"
>
&lt;/a>
&lt;/figure>
&lt;ul>
&lt;li>若找不到驅動可手動新增驅動，選擇資料夾為 &lt;code>C:\Program Files (x86)\Atmel\Flip 3.4.7\usb&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>打開UnoJoy資料夾，啟動TurnIntoAJoystick的批次檔，檔案路徑 &lt;code>UnoJoy-master\UnoJoy\TurnIntoAJoystick.bat&lt;/code>，執行成功結果如下圖
&lt;figure style="flex-grow: 191; flex-basis: 459px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-04.png" data-size="1222x638">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-04.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-04_hu995e3f612868d33bddd627def52639d4_26769_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-04_hu995e3f612868d33bddd627def52639d4_26769_1024x0_resize_box_2.png 1024w"
width="1222"
height="638"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>至此已完成將Uno變成電腦搖桿，之後插上Uno板皆為UnoJoy Joystick，可在以下路徑查看 &lt;code>控制台\硬體和音效\裝置和印表機&lt;/code>&lt;/li>
&lt;li>將搖桿的vrx和vry分別連接至Uno板的A0和A1，在 &lt;code>控制台\硬體和音效\裝置和印表機&lt;/code> 裡的UnoJoy Joystick圖示上右鍵-&amp;gt;遊戲控制器-&amp;gt;內容，可查看搖桿狀態，如下圖
&lt;figure style="flex-grow: 91; flex-basis: 219px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-05.png" data-size="595x651">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-05.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-05_hu70af4f0a87379970da1ec6ad06c206c4_21607_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-05_hu70af4f0a87379970da1ec6ad06c206c4_21607_1024x0_resize_box_2.png 1024w"
width="595"
height="651"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>最後進入起動x360ce，新建立一個搖桿的設定檔，並選取模擬的位置，點選[Record]，依圖示移動搖桿方向即設定完成&lt;/li>
&lt;/ol>
&lt;h1 id="補充">補充&lt;/h1>
&lt;ul>
&lt;li>如何將UnoJoy Joystick變回一般的Arduino Uno板
&lt;ol>
&lt;li>連接UnoJoy Joystick，並進入DFU Mode&lt;/li>
&lt;li>打開UnoJoy資料夾，啟動TurnIntoAnArduino的批次檔，檔案路徑 &lt;code>UnoJoy-master\UnoJoy\TurnIntoAnArduino.bat&lt;/code>&lt;/li>
&lt;li>將Uno的usb重新接上電腦，即可看到已變回&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>如果UnoJoy檔案下載太慢，可至 &lt;a class="link" href="https://code.google.com/archive/p/unojoy/" target="_blank" rel="noopener"
>這裡&lt;/a> 下載，但此載點內容僅包含uno板的檔案（Github的檔案裡包含其他板子變成手把的檔案，故檔案相對較大）&lt;/li>
&lt;li>如何在電腦遊戲中使用此手把
&lt;ul>
&lt;li>將剛剛x360ce創建的兩個檔案（x360ce.ini/xinput.dll）放進遊戲資料夾的根目錄即可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>此範例檔案預設搖桿資訊
&lt;ul>
&lt;li>A0~A1 － 為左搖桿的x，y&lt;/li>
&lt;li>A2~A3 － 為右搖桿的x，y&lt;/li>
&lt;li>D2~D5 － 為PS搖桿的右側功能鍵&lt;/li>
&lt;li>D6~D9 － 為PS搖桿的左側方向鍵&lt;/li>
&lt;li>D10~D11 － 為PS搖桿的L1R1&lt;/li>
&lt;li>D12 － select&lt;/li>
&lt;li>A4 － start&lt;/li>
&lt;li>A5 － home&lt;/li>
&lt;li>但由於是模擬成xbox的手把，故可自由接線，再由x360ce中直接[Record]即可&lt;/li>
&lt;li>若是腳位不夠可自行替換成mega板&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Arduino-01：安裝IDE</title><link>https://blog.smallten.tk/p/arduino-01/</link><pubDate>Thu, 09 Apr 2020 08:08:43 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-01/</guid><description>&lt;h1 id="官方ide">官方IDE&lt;/h1>
&lt;ul>
&lt;li>此IDE由官方提供，可在此查看&lt;a class="link" href="https://www.arduino.cc/" target="_blank" rel="noopener"
>官網&lt;/a>&lt;/li>
&lt;li>下載－&lt;a class="link" href="https://www.arduino.cc/en/software" target="_blank" rel="noopener"
>官方載點&lt;/a>
&lt;figure style="flex-grow: 214; flex-basis: 514px">
&lt;a href="https://blog.smallten.tk/p/arduino-01/arduino-01-01.png" data-size="1376x642">&lt;img src="https://blog.smallten.tk/p/arduino-01/arduino-01-01.png"
srcset="https://blog.smallten.tk/p/arduino-01/arduino-01-01_hu090779c2365445c0c56d62c8be35f1d9_133173_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-01/arduino-01-01_hu090779c2365445c0c56d62c8be35f1d9_133173_1024x0_resize_box_2.png 1024w"
width="1376"
height="642"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h1 id="vscode--platformio">VSCode + PlatformIO&lt;/h1>
&lt;ul>
&lt;li>先下載 &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>VSCode&lt;/a>&lt;/li>
&lt;li>再安裝 PlatformIO 的插件
&lt;figure style="flex-grow: 188; flex-basis: 451px">
&lt;a href="https://blog.smallten.tk/p/arduino-01/arduino-01-02.png" data-size="1920x1020">&lt;img src="https://blog.smallten.tk/p/arduino-01/arduino-01-02.png"
srcset="https://blog.smallten.tk/p/arduino-01/arduino-01-02_hu7035091ccabc2dfaeaba4e637c83e092_290858_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-01/arduino-01-02_hu7035091ccabc2dfaeaba4e637c83e092_290858_1024x0_resize_box_2.png 1024w"
width="1920"
height="1020"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul></description></item></channel></rss>