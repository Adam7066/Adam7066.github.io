<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>小十的部落格</title><link>https://blog.smallten.tk/</link><description>Recent content on 小十的部落格</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Dec 2020 19:38:14 +0800</lastBuildDate><atom:link href="https://blog.smallten.tk/index.xml" rel="self" type="application/rss+xml"/><item><title>程式設計(一)-08：Pointer</title><link>https://blog.smallten.tk/p/computer_programming_1-08/</link><pubDate>Wed, 23 Dec 2020 19:38:14 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-08/</guid><description>&lt;h1 id="pointer">Pointer&lt;/h1>
&lt;ul>
&lt;li>許多人不喜歡C是因為有「指標」&lt;/li>
&lt;li>這可能是C中最困難的一個部分&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>指標是一個變數，其值為記憶體位置
&lt;figure style="flex-grow: 129; flex-basis: 310px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01.png" data-size="624x482">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01_hu398bb37b63fd8209945f2f56af9b6d3e_23889_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-01_hu398bb37b63fd8209945f2f56af9b6d3e_23889_1024x0_resize_box_2.png 1024w"
width="624"
height="482"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>宣告：&lt;code>int32_t *p&lt;/code>
&lt;ul>
&lt;li>p 是一個指標&lt;/li>
&lt;li>指向的記憶體區塊被視為整數&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>初始化：&lt;code>int32_t *p = NULL&lt;/code>&lt;/li>
&lt;li>address operator &lt;code>&amp;amp;&lt;/code>：返回其變數的記憶體位置
&lt;ul>
&lt;li>如果想要印出記憶體位置，你可以使用&lt;code>%p&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>indirection operator &lt;code>*&lt;/code>：也被稱為dereferencing operator，返回指向對象的值
&lt;figure style="flex-grow: 116; flex-basis: 278px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02.png" data-size="560x482">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02_hu0a8930e11c7536ee883fb5d0dfdd78ad_20157_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-02_hu0a8930e11c7536ee883fb5d0dfdd78ad_20157_1024x0_resize_box_2.png 1024w"
width="560"
height="482"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>void *：是一個通用的指標型別(generic pointer type)，可以不透過explicit cast轉換成任意指標的型別&lt;/li>
&lt;/ul>
&lt;h3 id="傳參數至函式">傳參數至函式&lt;/h3>
&lt;ul>
&lt;li>在C語言中，argument passing 稱為 call-by-value
&lt;ul>
&lt;li>電腦將會分配另一個記憶體區塊&lt;/li>
&lt;li>複製輸入的參數到記憶體區塊&lt;/li>
&lt;li>函式將會在新的記憶體區塊執行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>這就是為什麼修改函式中的變數，並不會修改到原本外部的變數了。&lt;/li>
&lt;li>在C++有另一種傳送方式稱為 call-by-reference，這邊我們不多加介紹。&lt;/li>
&lt;li>普遍來說，傳址會比傳值更快。&lt;/li>
&lt;/ul>
&lt;h3 id="陣列與指標">陣列與指標&lt;/h3>
&lt;ul>
&lt;li>在大部分的情況下，我們可以把array視為第一個元素的指標
&lt;ul>
&lt;li>現在你應該明白為什麼陣列的值會在函式中被修改&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>為了避免模棱兩可(搞混)，我較喜歡&lt;code>&amp;amp;(array[0])&lt;/code>而不是&lt;code>array&lt;/code>、&lt;code>&amp;amp;array&lt;/code>&lt;/li>
&lt;li>然而你不能寫出 &lt;code>array = &amp;amp;a&lt;/code>&lt;/li>
&lt;li>int32_t
&lt;figure style="flex-grow: 262; flex-basis: 629px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03.png" data-size="1376x525">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03_hua4ffcfffdb0d5cbd6f85ca56310f1d36_36032_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-03_hua4ffcfffdb0d5cbd6f85ca56310f1d36_36032_1024x0_resize_box_2.png 1024w"
width="1376"
height="525"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>int16_t
&lt;figure style="flex-grow: 262; flex-basis: 629px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04.png" data-size="1376x525">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04_hu92da0828b2a348267cfe3ac686741655_34474_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-04_hu92da0828b2a348267cfe3ac686741655_34474_1024x0_resize_box_2.png 1024w"
width="1376"
height="525"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>int8_t
&lt;figure style="flex-grow: 262; flex-basis: 629px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05.png" data-size="1376x525">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05_hub90ffe0d9cbc8b522addb56c1c004a1c_34140_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-05_hub90ffe0d9cbc8b522addb56c1c004a1c_34140_1024x0_resize_box_2.png 1024w"
width="1376"
height="525"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>&lt;code>ptr++&lt;/code>
&lt;ul>
&lt;li>移動的大小是根據指標的型別&lt;/li>
&lt;li>這在要讀取每一byte的詳細資料時非常好用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>事實上，&lt;code>array[n] = *(ptr + n)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="endian-issue">Endian Issue&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 235; flex-basis: 566px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06.png" data-size="868x368">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06_hu7477f6d92b9b5dc7fc8ef441486939e3_22341_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-06_hu7477f6d92b9b5dc7fc8ef441486939e3_22341_1024x0_resize_box_2.png 1024w"
width="868"
height="368"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h3 id="函式指標">函式指標&lt;/h3>
&lt;ul>
&lt;li>指標不過是一個記憶體位址。&lt;/li>
&lt;li>當我們宣告某種類型的指標時，這意味著電腦將將訪問記憶體並根據給定的類型解釋存儲在該位址的值。&lt;/li>
&lt;li>您是否知道函式也存儲在記憶體中？&lt;/li>
&lt;li>使用函式指標時，返回的型別和參數應該要和實際的定義相同。
&lt;ul>
&lt;li>Really??為什麼在編譯時不會產生errors?&lt;/li>
&lt;li>這是個檢查definition的好習慣。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>回呼函式 (Callback function)&lt;/li>
&lt;li>你可以用陣列來儲存函式指標
&lt;code>void (*f[3])(int32_t) = {f1, f2, f3};&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>使用了函式指標的例子
&lt;ul>
&lt;li>Menu Driven&lt;/li>
&lt;li>Driver
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">struct&lt;/span> file_operations scull_fops &lt;span style="color:#ff79c6">=&lt;/span> {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> .owner &lt;span style="color:#ff79c6">=&lt;/span> THIS_MODULE ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> .llseek &lt;span style="color:#ff79c6">=&lt;/span> scull_llseek ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> .read &lt;span style="color:#ff79c6">=&lt;/span> scull_read ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> .write &lt;span style="color:#ff79c6">=&lt;/span> scull_write ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> .ioctl &lt;span style="color:#ff79c6">=&lt;/span> scull_ioctl ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span> .open &lt;span style="color:#ff79c6">=&lt;/span> scull_open ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span> .release &lt;span style="color:#ff79c6">=&lt;/span> scull_release ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9&lt;/span>};
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Firewall&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">static&lt;/span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> hook_func(
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#ff79c6">struct&lt;/span> nf_hook_ops &lt;span style="color:#ff79c6">*&lt;/span>ops ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> &lt;span style="color:#ff79c6">struct&lt;/span> sk_buff &lt;span style="color:#ff79c6">*&lt;/span>skb ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#ff79c6">struct&lt;/span> net_device &lt;span style="color:#ff79c6">*&lt;/span>in ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#ff79c6">struct&lt;/span> net_device &lt;span style="color:#ff79c6">*&lt;/span>out ,
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> (&lt;span style="color:#ff79c6">*&lt;/span>okfn)( &lt;span style="color:#ff79c6">struct&lt;/span> sk_buff &lt;span style="color:#ff79c6">*&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="記憶體管理">記憶體管理&lt;/h3>
&lt;ul>
&lt;li>記憶體管理
&lt;ul>
&lt;li>分配記憶體當你宣告一個變數&lt;/li>
&lt;li>垃圾回收 ( GC )&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>為什麼許多現代的程式語言不支援記憶體管理
&lt;ul>
&lt;li>軟體工程師是人類&lt;/li>
&lt;li>人是不可被信任的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>然而，如果軟體工程師知道他們在做什麼，那麼他們可以更有效率的管理記憶體&lt;/li>
&lt;li>如果不考慮記憶體，請使用陣列&lt;/li>
&lt;li>如果你想陣列的大小可以被動態的改變，那麼去讀 C++ 並學習如何使用 container&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="malloc">malloc&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>ptr &lt;span style="color:#ff79c6">=&lt;/span> malloc( &lt;span style="color:#ff79c6">sizeof&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span>) &lt;span style="color:#ff79c6">*&lt;/span> size);
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>malloc()&lt;/code> 分配 size bytes 並回傳一個指向所分配的記憶體的指標&lt;/li>
&lt;li>記憶體沒有初始化&lt;/li>
&lt;li>若要初始化，請使用 &lt;code>memset&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>memset(ptr, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#ff79c6">sizeof&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span>) &lt;span style="color:#ff79c6">*&lt;/span> size);
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="calloc">calloc&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>ptr &lt;span style="color:#ff79c6">=&lt;/span> calloc(size, &lt;span style="color:#ff79c6">sizeof&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span>));
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>在現代的 C 中，你應該使用 &lt;code>calloc&lt;/code>&lt;/li>
&lt;li>第一個參數：多少個區塊你想去分配?&lt;/li>
&lt;li>第二個參數：每個區塊的大小。&lt;/li>
&lt;li>記憶體被初始化成 &lt;code>0&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="free">free&lt;/h4>
&lt;p>&lt;figure style="flex-grow: 191; flex-basis: 460px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07.png" data-size="600x313">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07_hu4225d066f38677261377ab43a001df66_249554_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-07_hu4225d066f38677261377ab43a001df66_249554_1024x0_resize_box_2.png 1024w"
width="600"
height="313"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>&lt;code>free(ptr)&lt;/code>：釋放 &lt;code>ptr&lt;/code> 指向的記憶體空間，該記憶體空間必須是由之前使用 &lt;code>malloc()、calloc()、realloc()&lt;/code> 所回傳的。&lt;/li>
&lt;li>此外，若已經 &lt;code>free(ptr)&lt;/code>，再次使用會發生未定義行為。&lt;/li>
&lt;/ul>
&lt;h3 id="double-pointer">Double Pointer&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 109; flex-basis: 263px">
&lt;a href="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08.png" data-size="751x683">&lt;img src="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08.png"
srcset="https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08_hu6578b51f70e0abcf77c88775e521c8ab_200051_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/computer_programming_1-08/computer_programming_1-08-08_hu6578b51f70e0abcf77c88775e521c8ab_200051_1024x0_resize_box_2.png 1024w"
width="751"
height="683"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>使用場景：
&lt;ul>
&lt;li>在函式中分配記憶體&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">table&lt;/span>(int32_t &lt;span style="color:#ff79c6">**&lt;/span>pp, int32_t n){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>pp &lt;span style="color:#ff79c6">=&lt;/span> (int32_t &lt;span style="color:#ff79c6">*&lt;/span>)calloc(n &lt;span style="color:#ff79c6">*&lt;/span> n, &lt;span style="color:#ff79c6">sizeof&lt;/span>(int32_t));
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(int32_t i&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>; i&lt;span style="color:#ff79c6">&amp;lt;=&lt;/span>n; &lt;span style="color:#ff79c6">++&lt;/span>i){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(int32_t j&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>; j&lt;span style="color:#ff79c6">&amp;lt;=&lt;/span>n; &lt;span style="color:#ff79c6">++&lt;/span>j){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>(&lt;span style="color:#ff79c6">*&lt;/span>pp &lt;span style="color:#ff79c6">+&lt;/span> (i&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">*&lt;/span> n &lt;span style="color:#ff79c6">+&lt;/span> (j&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>)) &lt;span style="color:#ff79c6">=&lt;/span> i &lt;span style="color:#ff79c6">*&lt;/span> j;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>(){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> int32_t number &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> scanf(&lt;span style="color:#f1fa8c">&amp;#34;%d&amp;#34;&lt;/span>, number);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> int32_t &lt;span style="color:#ff79c6">*&lt;/span>ptr &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">NULL&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> table(&lt;span style="color:#ff79c6">&amp;amp;&lt;/span>ptr, number);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>分配一個二維陣列&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span> size_t size_row &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>, size_column &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> printf(&lt;span style="color:#f1fa8c">&amp;#34;Please enter two integers for row and column: &amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> scanf( &lt;span style="color:#f1fa8c">&amp;#34;%lu %lu&amp;#34;&lt;/span>, &lt;span style="color:#ff79c6">&amp;amp;&lt;/span>size_row, &lt;span style="color:#ff79c6">&amp;amp;&lt;/span>size_column );
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> int32_t &lt;span style="color:#ff79c6">**&lt;/span>ptr &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">NULL&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> ptr &lt;span style="color:#ff79c6">=&lt;/span> (int32_t &lt;span style="color:#ff79c6">**&lt;/span>)calloc( &lt;span style="color:#ff79c6">sizeof&lt;/span>( int32_t &lt;span style="color:#ff79c6">*&lt;/span> ), size_row );
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>( size_t i &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span> ; i &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> size_row ; i&lt;span style="color:#ff79c6">++&lt;/span> ) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>( ptr &lt;span style="color:#ff79c6">+&lt;/span> i ) &lt;span style="color:#ff79c6">=&lt;/span> (int32_t &lt;span style="color:#ff79c6">*&lt;/span>)calloc( &lt;span style="color:#ff79c6">sizeof&lt;/span>( int32_t ), size_column );
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>( size_t j &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span> ; j &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> size_column ; j&lt;span style="color:#ff79c6">++&lt;/span> ) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>( &lt;span style="color:#ff79c6">*&lt;/span>( ptr &lt;span style="color:#ff79c6">+&lt;/span> i ) &lt;span style="color:#ff79c6">+&lt;/span> j ) &lt;span style="color:#ff79c6">=&lt;/span> ( i &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span> ) &lt;span style="color:#ff79c6">*&lt;/span> ( j &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span> );
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>( size_t i &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span> ; i &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> size_row ; i&lt;span style="color:#ff79c6">++&lt;/span> ) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>( size_t j &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span> ; j &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> size_column; j&lt;span style="color:#ff79c6">++&lt;/span> ) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> printf( &lt;span style="color:#f1fa8c">&amp;#34;%4d &amp;#34;&lt;/span>, &lt;span style="color:#ff79c6">*&lt;/span>( &lt;span style="color:#ff79c6">*&lt;/span>( ptr &lt;span style="color:#ff79c6">+&lt;/span> i ) &lt;span style="color:#ff79c6">+&lt;/span> j ) );
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span> printf( &lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span> );
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="小工具">小工具&lt;/h3>
&lt;h4 id="cdecl">cdecl&lt;/h4>
&lt;ul>
&lt;li>安裝：&lt;code>sudo apt install cdecl&lt;/code>&lt;/li>
&lt;li>使用：&lt;code>cdecl&lt;/code> -&amp;gt; &lt;code>explain int ***a;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="資源查看">資源查看&lt;/h4>
&lt;ul>
&lt;li>top / htop&lt;/li>
&lt;li>vmstat ( 較輕量化 )
&lt;ul>
&lt;li>&lt;code>vmstat -n 1&lt;/code> ( &lt;code>-n 1&lt;/code> 為一秒輸出一次 )&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>First Hugo Blog</title><link>https://blog.smallten.tk/p/first-hugo-blog/</link><pubDate>Fri, 18 Dec 2020 01:16:06 +0800</pubDate><guid>https://blog.smallten.tk/p/first-hugo-blog/</guid><description>&lt;h1 id="第一個-hugo-blog">第一個 Hugo Blog&lt;/h1>
&lt;p>  由於秉持著「人生總折騰」的道理，我來轉移 Blog 了(誤///)，好啦，其實是單純希望有個穩定且又能全天候供應的 Blog 而已，由於我的隊友兩人分別使用了 Hexo 及 Hugo ，因此一開始讓我有點難抉擇，但最終我還是選擇了 Hugo 。&lt;/p>
&lt;p>  至於第二個選擇的難關就是主題了，挑了好久都沒看到順眼的，差點就要聽吳文元說的沒有喜歡的就自己寫呀(怕///)，最終還是挑到了一個稍微滿意的主題 &lt;a class="link" href="https://themes.gohugo.io/hugo-theme-stack/" target="_blank" rel="noopener"
>Stack&lt;/a>。&lt;/p>
&lt;p>  至於架設的過程到目前為止還算是蠻順利的，希望之後也不會遇到什麼大坑。&lt;/p></description></item><item><title>演算法-01：蓄水池抽樣法</title><link>https://blog.smallten.tk/p/algorithm-01/</link><pubDate>Tue, 08 Dec 2020 16:02:25 +0800</pubDate><guid>https://blog.smallten.tk/p/algorithm-01/</guid><description>&lt;h1 id="蓄水池抽樣法-reservoir-sampling">蓄水池抽樣法 (Reservoir Sampling)&lt;/h1>
&lt;ul>
&lt;li>從 N 個樣本中，隨機抽取 K 個樣本，其中 N 非常大(不能將所有數據都放進記憶體或是一個未知數)，而每個被抽出來的機率要相等。&lt;/li>
&lt;/ul>
&lt;h3 id="定理">定理&lt;/h3>
&lt;p>該算法保證每個元素以 \( k \over n \) 的機率被選入蓄水池中。&lt;/p>
&lt;h3 id="證明">證明&lt;/h3>
&lt;ol>
&lt;li>第 i 個元素進入蓄水池的機率為 \( k \over i \)，蓄水池內每個元素被替換的機率為\( 1 \over k \)&lt;/li>
&lt;li>因此在第 i 輪第 j 個元素被替換的機率為 \( {k \over i}\times{1 \over k} = {1 \over i} \)，接下來用 M.I. (數學歸納法)來證明，當 n 次循環結束時每個元素進入蓄水池的機率為 \( k \over n \)&lt;/li>
&lt;li>假設在 (i-1) 次迭代後，任意一個元素進入 蓄水池的概率為 \( k \over i-1 \)。由上面的結論，在第 i 次迭代時，該元素被替換的概率為 \( 1 \over i \)， 那麼其不被替換的概率則為 \( 1 - {1 \over i} = {i - 1 \over i} \)&lt;/li>
&lt;li>故在第 i 次迭代後，該元素在蓄水池內的概率為 \( {k \over i-1} \times {i-1 \over i} = {k \over i} \)，歸納結束。&lt;/li>
&lt;li>因此當循環結束時，每個元素進入蓄水池的概率為 \( k \over n \)，命題得證。&lt;/li>
&lt;/ol>
&lt;h3 id="例題">例題&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://leetcode.com/problems/linked-list-random-node/" target="_blank" rel="noopener"
>Leetcode 382.Linked List Random Node&lt;/a>&lt;/li>
&lt;li>解法： Cpp&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">class&lt;/span> &lt;span style="color:#50fa7b">Solution&lt;/span> {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span> ListNode &lt;span style="color:#ff79c6">*&lt;/span>p;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">public&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span> Solution(ListNode&lt;span style="color:#ff79c6">*&lt;/span> head) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span> p &lt;span style="color:#ff79c6">=&lt;/span> head;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">getRandom&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> ans &lt;span style="color:#ff79c6">=&lt;/span> p&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>val;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> ListNode &lt;span style="color:#ff79c6">*&lt;/span>t &lt;span style="color:#ff79c6">=&lt;/span> p&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>next;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> i&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">2&lt;/span>; t; &lt;span style="color:#ff79c6">++&lt;/span>i){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(rand()&lt;span style="color:#ff79c6">%&lt;/span>i &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>) ans &lt;span style="color:#ff79c6">=&lt;/span> t&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>val;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> t &lt;span style="color:#ff79c6">=&lt;/span> t&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>next;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> ans;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>};
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>程式設計(一)-07：Array</title><link>https://blog.smallten.tk/p/computer_programming_1-07/</link><pubDate>Mon, 07 Dec 2020 19:38:14 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-07/</guid><description>&lt;h1 id="array">Array&lt;/h1>
&lt;ul>
&lt;li>陣列是一種可以儲存大量相同型別資料的方法。&lt;/li>
&lt;li>連續的記憶體位置。&lt;/li>
&lt;li>永遠從0開始
&lt;ul>
&lt;li>&lt;code>int32_t a[10]&lt;/code> -&amp;gt; &lt;code>a[0] ~ a[9]&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>計數變數 i 的型別可以宣告為 &lt;code>size_t&lt;/code>，它是一個無號的整數型別。&lt;/li>
&lt;li>初始化
&lt;ul>
&lt;li>&lt;code>int32_t a[5] = {0, 0, 0, 0, 0};&lt;/code>&lt;/li>
&lt;li>&lt;code>int32_t a[5] = {0};&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>存取陣列元素使用 &lt;code>variable[index]&lt;/code>&lt;/li>
&lt;li>專業說明：電腦將找到第一個元素的地址，然後根據索引移動記憶體位置以訪問數據。&lt;/li>
&lt;li>事實上一維陣列可以處理所有情況，至於多維陣列只是給人類方便閱讀的。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="define">define&lt;/h1>
&lt;ul>
&lt;li>是遇處理指令，不是C的詞(statement)&lt;/li>
&lt;li>我們可以使用 &lt;code>#define&lt;/code> 去做巨集(MACRO)
&lt;ul>
&lt;li>當開發時MACRO有些像function，然而對電腦而言他們是不同的。&lt;/li>
&lt;li>當遇到MACRO，編譯器將簡單的依定義替換掉程式碼。&lt;/li>
&lt;li>函式擁有自己的標記。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="基本排序">基本排序&lt;/h1>
&lt;h4 id="氣泡排序法">氣泡排序法&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> i &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>; i &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> n; &lt;span style="color:#ff79c6">++&lt;/span>i) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> j &lt;span style="color:#ff79c6">=&lt;/span> i; j &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> n; &lt;span style="color:#ff79c6">++&lt;/span>j) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(a[j] &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> a[i]) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> a[i] &lt;span style="color:#ff79c6">=&lt;/span> a[i] &lt;span style="color:#ff79c6">^&lt;/span> a[j];
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> a[j] &lt;span style="color:#ff79c6">=&lt;/span> a[i] &lt;span style="color:#ff79c6">^&lt;/span> a[j];
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> a[i] &lt;span style="color:#ff79c6">=&lt;/span> a[i] &lt;span style="color:#ff79c6">^&lt;/span> a[j];
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="qsort">qsort&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdlib.c&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">cmp&lt;/span>(&lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>a, &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>b) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> (&lt;span style="color:#ff79c6">*&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span>)a &lt;span style="color:#ff79c6">-&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span>)b);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>qsort(a, n, &lt;span style="color:#ff79c6">sizeof&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span>), cmp);
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="傳陣列至函式">傳陣列至函式&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">f&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> [][n], &lt;span style="color:#8be9fd">int&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>f(a, &lt;span style="color:#bd93f9">10&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">f&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> a[][n], &lt;span style="color:#8be9fd">int&lt;/span> size){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>除了第一個[]外，剩下的都必須要給大小。(電腦才能計算偏移量)&lt;/li>
&lt;li>為甚麼要給size? 因為傳過去的只是陣列的記憶體起始位置而已。&lt;/li>
&lt;li>在函式中依然會改到本身的值。&lt;/li>
&lt;/ul>
&lt;h1 id="const">const&lt;/h1>
&lt;ul>
&lt;li>constant&lt;/li>
&lt;li>read-only&lt;/li>
&lt;/ul>
&lt;h1 id="可變長度陣列">可變長度陣列&lt;/h1>
&lt;ul>
&lt;li>Variable Length Array&lt;/li>
&lt;li>雖然有些編譯器支援了以下寫法(C99之後)，但有些依然不支援&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> n &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> a[n] &lt;span style="color:#ff79c6">=&lt;/span> {&lt;span style="color:#bd93f9">0&lt;/span>};
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>但你應該使用 &lt;code>malloc&lt;/code>
&lt;ul>
&lt;li>準確來說，你應該使用 &lt;code>calloc&lt;/code>，而不是 `malloc。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>我的建議：當考試的時候不要使用這功能( &lt;code>a[n]&lt;/code> )，因為你不知道編譯器的版本。&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-06：Makefile</title><link>https://blog.smallten.tk/p/computer_programming_1-06/</link><pubDate>Wed, 02 Dec 2020 21:45:51 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-06/</guid><description>&lt;h1 id="makefile-for-程設一">Makefile for 程設一&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-makefile" data-lang="makefile">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">CC&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> gcc
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">CFLAGS&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> -Wall -Wextra -O2 -std&lt;span style="color:#ff79c6">=&lt;/span>c11
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">LDFLAGS&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> -lm
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">TARGETS&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> main01 main02
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">main01_OBJ&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> main01.o func01.o
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">main02_OBJ&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> main02.o func02.o
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">.PHONY&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> all clean
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span style="color:#50fa7b">all&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span> &lt;span style="color:#ff79c6">$(&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">TARGETS&lt;/span>&lt;span style="color:#ff79c6">)&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span style="color:#50fa7b">.SECONDEXPANSION&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span style="color:#50fa7b">$(TARGETS)&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span> $&lt;span style="color:#ff79c6">$($$&lt;/span>@&lt;span style="color:#8be9fd;font-style:italic">_OBJ&lt;/span>&lt;span style="color:#ff79c6">)&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> &lt;span style="color:#ff79c6">$(&lt;/span>CC&lt;span style="color:#ff79c6">)&lt;/span> $^ -o &lt;span style="color:#8be9fd;font-style:italic">$@&lt;/span> &lt;span style="color:#ff79c6">$(&lt;/span>LDFLAGS&lt;span style="color:#ff79c6">)&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>&lt;span style="color:#50fa7b">%.o&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span> $@.c
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>&lt;span style="color:#50fa7b">clean&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> -&lt;span style="color:#ff79c6">$(&lt;/span>RM&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#ff79c6">$(&lt;/span>TARGETS&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#ff79c6">$(&lt;/span>foreach targ,&lt;span style="color:#ff79c6">$(&lt;/span>TARGETS&lt;span style="color:#ff79c6">)&lt;/span>,&lt;span style="color:#ff79c6">$(&lt;/span>foreach obj, &lt;span style="color:#ff79c6">$($(&lt;/span>targ&lt;span style="color:#ff79c6">)&lt;/span>_OBJ&lt;span style="color:#ff79c6">)&lt;/span>, &lt;span style="color:#ff79c6">$(&lt;/span>obj&lt;span style="color:#ff79c6">)))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>程式設計(一)-05：Function</title><link>https://blog.smallten.tk/p/computer_programming_1-05/</link><pubDate>Sat, 21 Nov 2020 21:48:47 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-05/</guid><description>&lt;h1 id="function">Function&lt;/h1>
&lt;h2 id="函式">函式&lt;/h2>
&lt;h4 id="double">double&lt;/h4>
&lt;ul>
&lt;li>&lt;code>double&lt;/code> 是一種浮點數型別，就像是 &lt;code>float&lt;/code>&lt;/li>
&lt;li>就如同它的名字，它使用的記憶體大小為 &lt;code>float&lt;/code> 的兩倍&lt;/li>
&lt;li>建議: 當你需要浮點數的話，一律使用 &lt;code>double&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>到目前為止我們最常使用到的函式為 &lt;code>printf&lt;/code>&lt;/li>
&lt;li>我們稱這些函式為 C standard functions (C標準函式)&lt;/li>
&lt;li>所有的函式都被儲存在libraries中
&lt;ul>
&lt;li>如果你想要讀書，你需要知道書在哪，然後去圖書館借書&lt;/li>
&lt;li>如果你想要使用函式，你需要知道函式在哪，然後include library去使用函式&lt;/li>
&lt;li>例如: &lt;code>stdio.h &amp;lt;-&amp;gt; printf&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用 &lt;code>math.h&lt;/code> 時，需下編譯參數 &lt;code>-lm&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>永不重新發明輪子&lt;/li>
&lt;li>在開發前請先搜尋&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#6272a4">//原型宣告
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#6272a4">&lt;/span>Return&lt;span style="color:#ff79c6">-&lt;/span>Value&lt;span style="color:#ff79c6">-&lt;/span>Type Function&lt;span style="color:#ff79c6">-&lt;/span>Name (parameter&lt;span style="color:#ff79c6">-&lt;/span>Type&lt;span style="color:#ff79c6">-&lt;/span>list);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>Return&lt;span style="color:#ff79c6">-&lt;/span>Value&lt;span style="color:#ff79c6">-&lt;/span>Type Function&lt;span style="color:#ff79c6">-&lt;/span>Name (parameter&lt;span style="color:#ff79c6">-&lt;/span>list){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> Statements
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>使用原型宣告並將自訂函式置於main function之後的好處?
&lt;ul>
&lt;li>不用管function之間的先後順序。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="void">void&lt;/h4>
&lt;ul>
&lt;li>沒有型別&lt;/li>
&lt;li>在這裡，代表不需要回傳值&lt;/li>
&lt;/ul>
&lt;h2 id="標頭檔-header-files">標頭檔 (Header Files)&lt;/h2>
&lt;ul>
&lt;li>甚麼是header file?
&lt;ul>
&lt;li>是一個包含函式的原型宣告(prototypes)和其他定義(definitions)的檔案&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>為甚麼我們需要header file?
&lt;ul>
&lt;li>抽象層&lt;/li>
&lt;li>有時我們想保護我們的實作(implementation)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#ifndef
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">#define
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>...
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span style="color:#ff79c6">#endif
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如同我所說，軟體工程師是懶惰的&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#pragma once
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="如何編譯多個檔案">如何編譯多個檔案&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#static
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>gcc &lt;span style="color:#ff79c6">-&lt;/span>c library.c &lt;span style="color:#ff79c6">-&lt;/span>o library.o
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>gcc main.c library.o &lt;span style="color:#ff79c6">-&lt;/span>o main
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>&lt;span style="color:#ff79c6">#dynamic
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>gcc &lt;span style="color:#ff79c6">-&lt;/span>shared test.o &lt;span style="color:#ff79c6">-&lt;/span>o libtest.so
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>gcc main.c &lt;span style="color:#ff79c6">-&lt;/span>o main &lt;span style="color:#ff79c6">-&lt;/span>L. &lt;span style="color:#ff79c6">-&lt;/span>ltest
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span>&lt;span style="color:#ff79c6">#執行
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>LD_LIBRARY_PATH&lt;span style="color:#ff79c6">=&lt;/span>. .&lt;span style="color:#ff79c6">/&lt;/span>main
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="link">Link&lt;/h4>
&lt;ul>
&lt;li>Static link: Static linking is the process of copying &lt;strong>all library modules&lt;/strong> used in the program into the &lt;strong>final executable&lt;/strong> image.&lt;/li>
&lt;li>Dynamic link: In dynamic linking the names of the external libraries (shared libraries) are placed in the final executable file while &lt;strong>the actual linking takes place at run time&lt;/strong> when both executable file and libraries are placed in the memory.&lt;/li>
&lt;li>&lt;code>.a&lt;/code> 是一堆 &lt;code>.o&lt;/code> 包在一起&lt;/li>
&lt;/ul>
&lt;h2 id="random">Random&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;time.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>srand(time(&lt;span style="color:#bd93f9">0&lt;/span>));
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>n &lt;span style="color:#ff79c6">=&lt;/span> rand &lt;span style="color:#ff79c6">%&lt;/span> &lt;span style="color:#bd93f9">6&lt;/span> &lt;span style="color:#6272a4">//n: 0 ~ 5
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>有安全要求時，請勿使用 &lt;code>random()&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="global-static-extern-variable">Global, Static, Extern Variable&lt;/h2>
&lt;h4 id="global">global&lt;/h4>
&lt;ul>
&lt;li>變數的生命週期為整個程式。&lt;/li>
&lt;li>也可被extern所存取到。&lt;/li>
&lt;/ul>
&lt;h4 id="static">static&lt;/h4>
&lt;ul>
&lt;li>變數只會在程式開始之前分配和初始化一次。&lt;/li>
&lt;li>在程式終止之前，儲存空間都不會被釋放。&lt;/li>
&lt;li>加上 &lt;code>static&lt;/code> 後， &lt;code>extern&lt;/code>便無法存取了。&lt;/li>
&lt;/ul>
&lt;h4 id="extern">extern&lt;/h4>
&lt;ul>
&lt;li>使用外部的變數。&lt;/li>
&lt;/ul>
&lt;h2 id="遞迴-recursive">遞迴 Recursive&lt;/h2>
&lt;ul>
&lt;li>遞迴定義如下
&lt;ul>
&lt;li>遞迴:
參見「遞迴」。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>什麼?這個定義什麼也沒有說啊!好吧，改一下:
&lt;ul>
&lt;li>遞迴:
如果你還是沒明白遞迴是什麼意思的話，參見「遞迴」。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>Return&lt;span style="color:#ff79c6">-&lt;/span>Value&lt;span style="color:#ff79c6">-&lt;/span>Type Function&lt;span style="color:#ff79c6">-&lt;/span>Name ( parameter&lt;span style="color:#ff79c6">-&lt;/span>list ) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> ( Base &lt;span style="color:#ff79c6">case&lt;/span> ) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> Return pre&lt;span style="color:#ff79c6">-&lt;/span>defined value.
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> Call itself with parameter modification.
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>所有能使用遞迴表達的敘述，皆能以迴圈的方式編寫。&lt;/li>
&lt;li>To iterate is human, to recurse, divine. — L. Peter Deutsch&lt;/li>
&lt;li>遞迴只應天上有，人間該當用迴圈&lt;/li>
&lt;li>我的觀點:
&lt;ul>
&lt;li>如果你找到關係式，遞迴是簡單的。&lt;/li>
&lt;li>時常用在虛擬碼(pseudo-code)中。&lt;/li>
&lt;li>性能效率可能比迭代差。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-04：Loop</title><link>https://blog.smallten.tk/p/computer_programming_1-04/</link><pubDate>Sun, 18 Oct 2020 20:33:18 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-04/</guid><description>&lt;h1 id="loop">Loop&lt;/h1>
&lt;pre>&lt;code>- `while`
- `for`
- `do while`
&lt;/code>&lt;/pre>
&lt;h2 id="while-loop">While Loop&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">while&lt;/span>(條件){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> 執行區塊
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>%.200f&lt;/code> 會發生什麼事? -&amp;gt; 精度不夠沒有意義&lt;/li>
&lt;li>&lt;code>while(1)&lt;/code> -&amp;gt; 無窮迴圈&lt;/li>
&lt;/ul>
&lt;h2 id="for-loop">For Loop&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span>(初始化; 條件; 執行後操作){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> 執行區塊
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>i++&lt;/code> -&amp;gt; Use the current value of i. -&amp;gt; &lt;code>i = i + 1&lt;/code>&lt;/li>
&lt;li>&lt;code>++i&lt;/code> -&amp;gt; &lt;code>i = i + 1&lt;/code> -&amp;gt; Use the new value of i.&lt;/li>
&lt;li>&lt;code>{}&lt;/code> -&amp;gt; 變數生命週期範圍&lt;/li>
&lt;li>&lt;code>%4d&lt;/code> ( &lt;code>%#&lt;/code> ) -&amp;gt; 給最小的位數去顯示&lt;/li>
&lt;li>在 ANSI C, 變數只能被宣告在函式的開頭，而 Modern C 沒有任何限制&lt;/li>
&lt;/ul>
&lt;h2 id="do-while-loop">Do While Loop&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">do&lt;/span>{
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> 執行區塊
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>}&lt;span style="color:#ff79c6">while&lt;/span>(條件)
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>三種不同類型的迴圈毫無疑問的都可以互相轉換
&lt;ul>
&lt;li>除了 &lt;code>do while&lt;/code> 至少會執行一次&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>大多數來說，如果你知道要執行幾次迴圈的話，會使用 &lt;code>for&lt;/code>&lt;/li>
&lt;li>&lt;code>break&lt;/code>：離開當前的區段&lt;/li>
&lt;li>&lt;code>continue&lt;/code>：跳過剩餘的敘述，直接執行下一次迭代&lt;/li>
&lt;li>無窮迴圈不是個好東西? -&amp;gt; 不，或許你會需要他，例如：Web server&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>sleep(sec);
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>程式設計(一)-03：Condition Control</title><link>https://blog.smallten.tk/p/computer_programming_1-03/</link><pubDate>Thu, 15 Oct 2020 20:53:14 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-03/</guid><description>&lt;h1 id="condition-control">Condition Control&lt;/h1>
&lt;h2 id="簡介">簡介&lt;/h2>
&lt;ul>
&lt;li>我們想要讓電腦去做基礎的判斷
&lt;ul>
&lt;li>&lt;code>if&lt;/code>&lt;/li>
&lt;li>&lt;code>switch&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="if">If&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> (condition1) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> statements;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (condition2){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> ...
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>&lt;span style="color:#ff79c6">else&lt;/span> {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span> ...
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果條件&lt;strong>不是錯誤&lt;/strong>，那麼將會執行大括號裡的敘述
&lt;ul>
&lt;li>簡而言之，&lt;code>false&lt;/code> 被定義為 &lt;code>0&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>&amp;gt;&lt;/code> -&amp;gt; 大於&lt;/li>
&lt;li>&lt;code>&amp;lt;&lt;/code> -&amp;gt; 小於&lt;/li>
&lt;li>&lt;code>&amp;gt;=&lt;/code> -&amp;gt; 大於等於&lt;/li>
&lt;li>&lt;code>&amp;lt;=&lt;/code> -&amp;gt; 小於等於&lt;/li>
&lt;li>&lt;code>==&lt;/code> -&amp;gt; 等於&lt;/li>
&lt;li>&lt;code>!=&lt;/code> -&amp;gt; 不等於&lt;/li>
&lt;li>&lt;code>&amp;amp;&amp;amp;&lt;/code> -&amp;gt; and&lt;/li>
&lt;li>&lt;code>||&lt;/code> -&amp;gt; or&lt;/li>
&lt;/ul>
&lt;h2 id="boolean">Boolean&lt;/h2>
&lt;ul>
&lt;li>在 &lt;code>Cpp&lt;/code> 裡，有個型別稱為 &lt;code>bool&lt;/code>
&lt;ul>
&lt;li>它只有兩個值：&lt;code>true, false&lt;/code>&lt;/li>
&lt;li>那麼 &lt;code>bool&lt;/code> 使用的記憶體大小為何能?( &lt;code>1 bit or 1 byte&lt;/code> ??)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在 &lt;code>ANSI C&lt;/code> 裡，沒有一個型別為boolean的&lt;/li>
&lt;li>從 &lt;code>C99&lt;/code> 開始，有一個標頭檔可以使用，&lt;code>stdbool.h&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="switch">Switch&lt;/h2>
&lt;ul>
&lt;li>你可以使用 &lt;code>if-else&lt;/code> 來做每個條件判斷，但是有時候可能會寫一個巨大的巢狀程式，因此將介紹另一個方法 &lt;code>switch&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">switch&lt;/span> (){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> &lt;span style="color:#ff79c6">case&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> ...
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> &lt;span style="color:#ff79c6">break&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> ...
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> &lt;span style="color:#ff79c6">default&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span> ...
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>break&lt;/code>：從此處結束
&lt;ul>
&lt;li>那麼如果不使用 &lt;code>break&lt;/code> 呢??&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>default&lt;/code>：如果沒有 &lt;code>case&lt;/code> 符合，執行這段&lt;/li>
&lt;/ul>
&lt;h2 id="浮點數比較">浮點數比較&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> &lt;span style="color:#8be9fd">float&lt;/span> a &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0.3&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (a &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">0.3&lt;/span>) printf(&lt;span style="color:#f1fa8c">&amp;#34;if01&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> printf(&lt;span style="color:#f1fa8c">&amp;#34;else01&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (a &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">0.3f&lt;/span>) printf(&lt;span style="color:#f1fa8c">&amp;#34;if02&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> printf(&lt;span style="color:#f1fa8c">&amp;#34;else02&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>結果： &lt;code>else01 if02&lt;/code>&lt;/li>
&lt;li>請使用 &lt;code>sizeof()&lt;/code> 查看發生了什麼!(&lt;code>IEEE 754&lt;/code>)&lt;/li>
&lt;li>結論：&lt;strong>浮點數的比較是相當危險的!!&lt;/strong>&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-02：Arithmetic</title><link>https://blog.smallten.tk/p/computer_programming_1-02/</link><pubDate>Thu, 15 Oct 2020 11:19:09 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-02/</guid><description>&lt;h1 id="arithmetic">Arithmetic&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>(){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> a &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>, b &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, sum &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> sum &lt;span style="color:#ff79c6">=&lt;/span> a &lt;span style="color:#ff79c6">+&lt;/span> b;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> printf(&lt;span style="color:#f1fa8c">&amp;#34;%d&amp;#34;&lt;/span>, sum);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>變數
&lt;ul>
&lt;li>每個變數都必須有它的型別&lt;/li>
&lt;li>在使用變數前必須先宣告它&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在C裡面， &lt;code>=&lt;/code> 意思為”指定”，而不是”相等”，指派右邊的數值給左邊的變數&lt;/li>
&lt;li>一個好習慣，總是初始化變數&lt;/li>
&lt;li>C Spec:
&lt;ul>
&lt;li>C89:If an object that has static storage duration is not initialized explicitly, it is initialized implicitly.&lt;/li>
&lt;li>C99: If it has arithmetic type, it is initialized to (positive or unsigned) zero.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>In C99: &lt;code>a == (a / b) * b + a % b&lt;/code>&lt;/li>
&lt;li>&lt;code>printf&lt;/code> 是一個函式去印出格式化字串
&lt;ul>
&lt;li>&lt;code>%d&lt;/code> -&amp;gt; 有號十進位整數&lt;/li>
&lt;li>&lt;code>%f&lt;/code> -&amp;gt; 十進位浮點數&lt;/li>
&lt;li>&lt;code>%u&lt;/code> -&amp;gt; 無號十進位整數&lt;/li>
&lt;li>當然不只這些&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>小技巧&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>a &lt;span style="color:#ff79c6">+=&lt;/span> b &lt;span style="color:#ff79c6">-&amp;gt;&lt;/span> a &lt;span style="color:#ff79c6">=&lt;/span> a &lt;span style="color:#ff79c6">+&lt;/span> b
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>a &lt;span style="color:#ff79c6">-=&lt;/span> b &lt;span style="color:#ff79c6">-&amp;gt;&lt;/span> a &lt;span style="color:#ff79c6">=&lt;/span> a &lt;span style="color:#ff79c6">-&lt;/span> b
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>a &lt;span style="color:#ff79c6">*=&lt;/span> b &lt;span style="color:#ff79c6">-&amp;gt;&lt;/span> a &lt;span style="color:#ff79c6">=&lt;/span> a &lt;span style="color:#ff79c6">*&lt;/span> b
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>a &lt;span style="color:#ff79c6">/=&lt;/span> b &lt;span style="color:#ff79c6">-&amp;gt;&lt;/span> a &lt;span style="color:#ff79c6">=&lt;/span> a &lt;span style="color:#ff79c6">/&lt;/span> b
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>a &lt;span style="color:#ff79c6">%=&lt;/span> b &lt;span style="color:#ff79c6">-&amp;gt;&lt;/span> a &lt;span style="color:#ff79c6">=&lt;/span> a &lt;span style="color:#ff79c6">%&lt;/span> b
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>查看記憶體使用大小： &lt;code>sizeof()&lt;/code>，回傳單位為 &lt;code>byte&lt;/code> ( &lt;code>printf(&amp;quot;%lu&amp;quot;, sizeof());&lt;/code> )&lt;/li>
&lt;li>&lt;code>#include &amp;lt;stdint.h&amp;gt;&lt;/code>
&lt;ul>
&lt;li>int8_t: 8-bit signed interger&lt;/li>
&lt;li>int16_t: 16-bit signed interger&lt;/li>
&lt;li>int32_t: 32-bit signed interger&lt;/li>
&lt;li>int64_t: 64-bit signed interger&lt;/li>
&lt;li>uint8_t: 8-bit unsigned interger&lt;/li>
&lt;li>uint16_t: 16-bit unsigned interger&lt;/li>
&lt;li>uint32_t: 32-bit unsigned interger&lt;/li>
&lt;li>uint64_t: 64-bit unsigned interger&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>輸入：&lt;code>scanf(&amp;quot;%d&amp;quot;, &amp;amp;a);&lt;/code>
&lt;ul>
&lt;li>至於為甚麼需要 &lt;code>&amp;amp;&lt;/code>，之後會在指標的章節介紹到&lt;/li>
&lt;li>&lt;code>scanf&lt;/code> 是否有回傳值? ( &lt;code>man 3 scanf&lt;/code> )&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>最後也最重要的技能：RTFM and STFG&lt;/li>
&lt;/ul></description></item><item><title>Python-04：多線程-ts下載並合併成mp4</title><link>https://blog.smallten.tk/p/python-04/</link><pubDate>Sun, 04 Oct 2020 16:36:35 +0800</pubDate><guid>https://blog.smallten.tk/p/python-04/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;p>  這篇將帶你下載m3u8檔並分析出ts的檔案，再透過多線程來加速下載，之後再由FFmpeg合併成mp4。&lt;/p>
&lt;h1 id="python">Python&lt;/h1>
&lt;h2 id="下載m3u8">下載m3u8&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>m3u8Url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https://.../index.m3u8&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">downloadM3u8&lt;/span>(url):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> r &lt;span style="color:#ff79c6">=&lt;/span> requests&lt;span style="color:#ff79c6">.&lt;/span>get(url)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./index.m3u8&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(r&lt;span style="color:#ff79c6">.&lt;/span>content)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="分析m3u8">分析m3u8&lt;/h2>
&lt;ul>
&lt;li>這部份請依照你所取得的m3u8檔進行分析，並將完整的ts檔的url放進tsList即可。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>tsList &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>tsCnt &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">analyzeM3u8&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span> tsList&lt;span style="color:#ff79c6">.&lt;/span>clear()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> tempUrl &lt;span style="color:#ff79c6">=&lt;/span> m3u8Url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./index.m3u8&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> text &lt;span style="color:#ff79c6">=&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>read()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> textList &lt;span style="color:#ff79c6">=&lt;/span> text&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> &lt;span style="color:#ff79c6">while&lt;/span> textList[&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>] &lt;span style="color:#ff79c6">!=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;#EXT-X-ENDLIST&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span> textList&lt;span style="color:#ff79c6">.&lt;/span>pop(&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> textList:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> i[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">!=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;#&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> tsList&lt;span style="color:#ff79c6">.&lt;/span>append(tempUrl &lt;span style="color:#ff79c6">+&lt;/span> i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> &lt;span style="color:#ff79c6">global&lt;/span> tsCnt
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> tsCnt &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(tsList)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下載ts檔">下載ts檔&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>q &lt;span style="color:#ff79c6">=&lt;/span> queue&lt;span style="color:#ff79c6">.&lt;/span>Queue()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">downloadts&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span> &lt;span style="color:#ff79c6">global&lt;/span> tsList
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span> &lt;span style="color:#ff79c6">while&lt;/span> q&lt;span style="color:#ff79c6">.&lt;/span>qsize() &lt;span style="color:#ff79c6">&amp;gt;&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> num &lt;span style="color:#ff79c6">=&lt;/span> q&lt;span style="color:#ff79c6">.&lt;/span>get()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> r &lt;span style="color:#ff79c6">=&lt;/span> requests&lt;span style="color:#ff79c6">.&lt;/span>get(tsList[num])
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(num&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.ts&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(r&lt;span style="color:#ff79c6">.&lt;/span>content)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> __name__ &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> &lt;span style="color:#ff79c6">not&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>path&lt;span style="color:#ff79c6">.&lt;/span>isdir(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span>):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>mkdir(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(tsCnt):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> q&lt;span style="color:#ff79c6">.&lt;/span>put(i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> thList &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(tsCnt):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> th &lt;span style="color:#ff79c6">=&lt;/span> threading&lt;span style="color:#ff79c6">.&lt;/span>Thread(target&lt;span style="color:#ff79c6">=&lt;/span>downloadts)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>start()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span> thList&lt;span style="color:#ff79c6">.&lt;/span>append(th)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> th &lt;span style="color:#ff79c6">in&lt;/span> thList:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>join()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;下載ts完成&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="合併ts成mp4">合併ts成mp4&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">merge&lt;/span>(tsCnt, output):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(tsCnt):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;a+&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(&lt;span style="color:#f1fa8c">&amp;#39;file &amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(i&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.ts&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> command &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;ffmpeg -y -f concat -i &lt;/span>&lt;span style="color:#f1fa8c">%s&lt;/span>&lt;span style="color:#f1fa8c"> -bsf:a aac_adtstoasc -c copy &lt;/span>&lt;span style="color:#f1fa8c">%s&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">%&lt;/span> (&lt;span style="color:#f1fa8c">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>, output)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>system(command)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;合併成功&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="移除無用檔案">移除無用檔案&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">remove&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> shutil&lt;span style="color:#ff79c6">.&lt;/span>rmtree(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>remove(&lt;span style="color:#f1fa8c">&amp;#39;./index.m3u8&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="完整程式碼">完整程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#6272a4"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> requests&lt;span style="color:#ff79c6">,&lt;/span> os&lt;span style="color:#ff79c6">,&lt;/span> threading&lt;span style="color:#ff79c6">,&lt;/span> queue&lt;span style="color:#ff79c6">,&lt;/span> shutil
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>m3u8Url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https://.../index.m3u8&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>tsList &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>tsCnt &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>q &lt;span style="color:#ff79c6">=&lt;/span> queue&lt;span style="color:#ff79c6">.&lt;/span>Queue()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">downloadM3u8&lt;/span>(url):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> r &lt;span style="color:#ff79c6">=&lt;/span> requests&lt;span style="color:#ff79c6">.&lt;/span>get(url)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./index.m3u8&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(r&lt;span style="color:#ff79c6">.&lt;/span>content)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">analyzeM3u8&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> tsList&lt;span style="color:#ff79c6">.&lt;/span>clear()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> tempUrl &lt;span style="color:#ff79c6">=&lt;/span> m3u8Url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./index.m3u8&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> text &lt;span style="color:#ff79c6">=&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>read()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> textList &lt;span style="color:#ff79c6">=&lt;/span> text&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span> &lt;span style="color:#ff79c6">while&lt;/span> textList[&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>] &lt;span style="color:#ff79c6">!=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;#EXT-X-ENDLIST&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> textList&lt;span style="color:#ff79c6">.&lt;/span>pop(&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> textList:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> i[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">!=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;#&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span> tsList&lt;span style="color:#ff79c6">.&lt;/span>append(tempUrl &lt;span style="color:#ff79c6">+&lt;/span> i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span> &lt;span style="color:#ff79c6">global&lt;/span> tsCnt
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span> tsCnt &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(tsList)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">downloadts&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span> &lt;span style="color:#ff79c6">global&lt;/span> tsList
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30&lt;/span> &lt;span style="color:#ff79c6">while&lt;/span> q&lt;span style="color:#ff79c6">.&lt;/span>qsize() &lt;span style="color:#ff79c6">&amp;gt;&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31&lt;/span> num &lt;span style="color:#ff79c6">=&lt;/span> q&lt;span style="color:#ff79c6">.&lt;/span>get()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32&lt;/span> r &lt;span style="color:#ff79c6">=&lt;/span> requests&lt;span style="color:#ff79c6">.&lt;/span>get(tsList[num])
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(num&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.ts&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(r&lt;span style="color:#ff79c6">.&lt;/span>content)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">merge&lt;/span>(tsCnt, output):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(tsCnt):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;a+&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(&lt;span style="color:#f1fa8c">&amp;#39;file &amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(i&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.ts&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40&lt;/span> command &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;ffmpeg -y -f concat -i &lt;/span>&lt;span style="color:#f1fa8c">%s&lt;/span>&lt;span style="color:#f1fa8c"> -bsf:a aac_adtstoasc -c copy &lt;/span>&lt;span style="color:#f1fa8c">%s&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">%&lt;/span> (&lt;span style="color:#f1fa8c">&amp;#39;./ts/ts.txt&amp;#39;&lt;/span>, output)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>system(command)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;合併成功&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">remove&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45&lt;/span> shutil&lt;span style="color:#ff79c6">.&lt;/span>rmtree(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>remove(&lt;span style="color:#f1fa8c">&amp;#39;./index.m3u8&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> __name__ &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49&lt;/span> downloadM3u8(m3u8Url)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50&lt;/span> analyzeM3u8()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;m3u8下載且分析完畢&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> &lt;span style="color:#ff79c6">not&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>path&lt;span style="color:#ff79c6">.&lt;/span>isdir(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span>):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53&lt;/span> os&lt;span style="color:#ff79c6">.&lt;/span>mkdir(&lt;span style="color:#f1fa8c">&amp;#39;./ts/&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(tsCnt):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55&lt;/span> q&lt;span style="color:#ff79c6">.&lt;/span>put(i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56&lt;/span> thList &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(tsCnt):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58&lt;/span> th &lt;span style="color:#ff79c6">=&lt;/span> threading&lt;span style="color:#ff79c6">.&lt;/span>Thread(target&lt;span style="color:#ff79c6">=&lt;/span>downloadts)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>start()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60&lt;/span> thList&lt;span style="color:#ff79c6">.&lt;/span>append(th)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> th &lt;span style="color:#ff79c6">in&lt;/span> thList:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>join()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;下載ts完成&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64&lt;/span> merge(tsCnt, &lt;span style="color:#f1fa8c">&amp;#39;./test.mp4&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65&lt;/span> remove()
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Python-03：m3u8影片下載</title><link>https://blog.smallten.tk/p/python-03/</link><pubDate>Sun, 04 Oct 2020 11:07:24 +0800</pubDate><guid>https://blog.smallten.tk/p/python-03/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>現今你時常能在影音媒體網站看到 &lt;code>.m3u8&lt;/code> 的檔案，以及許多 &lt;code>.ts&lt;/code> 的分段媒體，本篇將教你如何簡單的下載成 &lt;code>.mp4&lt;/code> 檔。&lt;/li>
&lt;li>這篇並不詳加敘述 HLS 之類的觀念，若有興趣深入了解請自行查找資料。&lt;/li>
&lt;/ul>
&lt;h1 id="ffmpeg">FFmpeg&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="https://ffmpeg.org/" target="_blank" rel="noopener"
>FFmpeg官網&lt;/a>&lt;/li>
&lt;li>下載安裝完後，若為 windows 用戶請將 &lt;code>%ffmpeg%\bin&lt;/code> 的路徑加入環境變數中，並於terminal中執行 &lt;code>ffmpeg -version&lt;/code> 來查看是否成功加入。&lt;/li>
&lt;li>下載檔案，直接在 terminal 輸入 &lt;code>ffmpeg -i m3u8URL -c copy filname.mp4&lt;/code>，即可完成下載。(下面將提供Python的寫法)&lt;/li>
&lt;/ul>
&lt;h1 id="python">Python&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#6272a4"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> ffmpeg_streaming
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">from&lt;/span> ffmpeg_streaming &lt;span style="color:#ff79c6">import&lt;/span> Formats
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https://.../index.m3u8&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>filename &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;test.mp4&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">ffmpeg_download&lt;/span>(input_path, output_path):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> video &lt;span style="color:#ff79c6">=&lt;/span> ffmpeg_streaming&lt;span style="color:#ff79c6">.&lt;/span>input(input_path)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> stream &lt;span style="color:#ff79c6">=&lt;/span> video&lt;span style="color:#ff79c6">.&lt;/span>stream2file(Formats&lt;span style="color:#ff79c6">.&lt;/span>h264())
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span> stream&lt;span style="color:#ff79c6">.&lt;/span>output(output_path)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> __name__ &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> ffmpeg_download(url, &lt;span style="color:#f1fa8c">&amp;#39;./&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> filename)
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>下一篇將教你如何直接從 m3u8 裡讀取目錄，並使用多線程下載 ts 並合併成 mp4&lt;/li>
&lt;/ul></description></item><item><title>程式設計(一)-01：Your first program</title><link>https://blog.smallten.tk/p/computer_programming_1-01/</link><pubDate>Sun, 04 Oct 2020 11:00:48 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_1-01/</guid><description>&lt;h1 id="hello-world">Hello World&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>&lt;span style="color:#6272a4">//Your first code.
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>(){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> printf(&lt;span style="color:#f1fa8c">&amp;#34;Hello World&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>main是每個C程式的進入點，我們稱它為main function(主函式)&lt;/li>
&lt;li>&lt;code>int&lt;/code> 及 &lt;code>return&lt;/code> 是C裡面的Keywords
&lt;ul>
&lt;li>int代表這個函式將會回傳一個整數&lt;/li>
&lt;li>每個函式都應該有一個回傳值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>每個敘述的結尾都應該要有 &lt;code>;&lt;/code>&lt;/li>
&lt;li>&lt;code>printf&lt;/code> 是一個會顯示格式化字串的函式&lt;/li>
&lt;li>&lt;code>\n&lt;/code> -&amp;gt; 換行&lt;/li>
&lt;li>&lt;code>\t&lt;/code> -&amp;gt; tab&lt;/li>
&lt;li>&lt;code>\\&lt;/code> -&amp;gt; \&lt;/li>
&lt;li>&lt;code>\&amp;quot;&lt;/code> -&amp;gt; “&lt;/li>
&lt;li>&lt;code>#&lt;/code> 的那一行是C的預處理器並且不需要;結尾&lt;/li>
&lt;li>&lt;code>stdio.h&lt;/code> -&amp;gt; standard input / output header(標準輸出/輸入標頭檔)&lt;/li>
&lt;li>註解 -&amp;gt; 是給開發者看的
&lt;ul>
&lt;li>&lt;code>//Your code&lt;/code> -&amp;gt; 單行&lt;/li>
&lt;li>&lt;code>/*Your code*/&lt;/code> -&amp;gt; 多行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>使用編譯器將程式碼編譯成組合語言，再由組譯器組議成機械碼或可執行的二進制檔&lt;/li>
&lt;li>IDE -&amp;gt; Integrated Development Environment，不是編譯器&lt;/li>
&lt;li>gcc是最受歡迎的C編譯器之一(不完全對!!因為它不只做了編譯的動作…)&lt;/li>
&lt;li>一些基本的Linux的操作指令
&lt;ul>
&lt;li>&lt;code>man&lt;/code> -&amp;gt; 不會就問那個男人吧，男人不會就Google&lt;/li>
&lt;li>&lt;code>ls&lt;/code>&lt;/li>
&lt;li>&lt;code>cd&lt;/code>&lt;/li>
&lt;li>&lt;code>rm&lt;/code>&lt;/li>
&lt;li>&lt;code>pwd&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>gcc main.c&lt;/code> 一些參數
&lt;ul>
&lt;li>&lt;code>-o&lt;/code>&lt;/li>
&lt;li>&lt;code>-v&lt;/code>&lt;/li>
&lt;li>&lt;code>-g&lt;/code>&lt;/li>
&lt;li>&lt;code>-Wall -Wextra&lt;/code>&lt;/li>
&lt;li>&lt;code>-O2&lt;/code> or &lt;code>-Og&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="makefile">Makefile&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-makefile" data-lang="makefile">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#50fa7b">all&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> gcc main.c -o main
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span style="color:#50fa7b">clean&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> rm -rf main
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>make&lt;/code> 將執行all下的指令&lt;/li>
&lt;li>中間縮排應為Tab而不是Space&lt;/li>
&lt;li>&lt;code>make clean&lt;/code>&lt;/li>
&lt;li>預設可執行的檔名為 &lt;code>makefile，Makefile，GNUmakefile&lt;/code>，若為其他可下 &lt;code>-f&lt;/code> 的參數&lt;/li>
&lt;/ul></description></item><item><title>Python-02：多線程-加速圖片下載</title><link>https://blog.smallten.tk/p/python-02/</link><pubDate>Mon, 03 Aug 2020 00:56:43 +0800</pubDate><guid>https://blog.smallten.tk/p/python-02/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>接續上一篇Python-01：爬蟲-圖片下載的內容，這篇文章將帶領大家使用多線程來加速圖片的下載&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ul>
&lt;li>首先我們先看個簡單的多線程範例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> time&lt;span style="color:#ff79c6">,&lt;/span> threading
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#6272a4"># 子執行緒的工作函數&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">job&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(&lt;span style="color:#bd93f9">5&lt;/span>):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Child thread:&amp;#34;&lt;/span>, i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> time&lt;span style="color:#ff79c6">.&lt;/span>sleep(&lt;span style="color:#bd93f9">1&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span style="color:#6272a4"># 建立一個子執行緒&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>t &lt;span style="color:#ff79c6">=&lt;/span> threading&lt;span style="color:#ff79c6">.&lt;/span>Thread(target &lt;span style="color:#ff79c6">=&lt;/span> job)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span style="color:#6272a4"># 執行該子執行緒&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>t&lt;span style="color:#ff79c6">.&lt;/span>start()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span style="color:#6272a4"># 主執行緒繼續執行自己的工作&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(&lt;span style="color:#bd93f9">3&lt;/span>):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Main thread:&amp;#34;&lt;/span>, i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> time&lt;span style="color:#ff79c6">.&lt;/span>sleep(&lt;span style="color:#bd93f9">1&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>&lt;span style="color:#6272a4"># 等待 t 這個子執行緒結束&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>t&lt;span style="color:#ff79c6">.&lt;/span>join()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>&lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Done.&amp;#34;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> time&lt;span style="color:#ff79c6">,&lt;/span> threading
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#6272a4"># 子執行緒的工作函數&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">job&lt;/span>(num):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span> &lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Thread&amp;#34;&lt;/span>, num)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> time&lt;span style="color:#ff79c6">.&lt;/span>sleep(&lt;span style="color:#bd93f9">1&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span style="color:#6272a4"># 建立 5 個子執行緒&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>threads &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(&lt;span style="color:#bd93f9">5&lt;/span>):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> threads&lt;span style="color:#ff79c6">.&lt;/span>append(threading&lt;span style="color:#ff79c6">.&lt;/span>Thread(target &lt;span style="color:#ff79c6">=&lt;/span> job, args &lt;span style="color:#ff79c6">=&lt;/span> (i,)))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span> threads[i]&lt;span style="color:#ff79c6">.&lt;/span>start()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span style="color:#6272a4"># 主執行緒繼續執行自己的工作&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span style="color:#6272a4"># 等待所有子執行緒結束&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(&lt;span style="color:#bd93f9">5&lt;/span>):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> threads[i]&lt;span style="color:#ff79c6">.&lt;/span>join()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>&lt;span style="color:#ff79c6">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Done.&amp;#34;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>接下來我們修改&lt;a class="link" href="../python-01" >Python-01：爬蟲-圖片下載&lt;/a>中下載圖片那部分的程式碼&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>th_list &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(img_count):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> img &lt;span style="color:#ff79c6">=&lt;/span> img_url &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(i &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>zfill(m) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> th &lt;span style="color:#ff79c6">=&lt;/span> threading&lt;span style="color:#ff79c6">.&lt;/span>Thread(target&lt;span style="color:#ff79c6">=&lt;/span>download_img, args&lt;span style="color:#ff79c6">=&lt;/span>(img, i))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>start()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span> th_list&lt;span style="color:#ff79c6">.&lt;/span>append(th)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span> th &lt;span style="color:#ff79c6">in&lt;/span> th_list:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>join()
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="完整程式碼">完整程式碼&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#6272a4"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">from&lt;/span> selenium &lt;span style="color:#ff79c6">import&lt;/span> webdriver
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">from&lt;/span> bs4 &lt;span style="color:#ff79c6">import&lt;/span> BeautifulSoup
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> requests&lt;span style="color:#ff79c6">,&lt;/span> threading
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">download_img&lt;/span>(img, num):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> r &lt;span style="color:#ff79c6">=&lt;/span> requests&lt;span style="color:#ff79c6">.&lt;/span>get(img)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(save_url &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(num&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.jpg&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(r&lt;span style="color:#ff79c6">.&lt;/span>content)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> __name__ &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> save_url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;./test/&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https://www.ohmanhua.com/13621/1/1.html&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> chop &lt;span style="color:#ff79c6">=&lt;/span> webdriver&lt;span style="color:#ff79c6">.&lt;/span>ChromeOptions()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> chop&lt;span style="color:#ff79c6">.&lt;/span>add_extension(&lt;span style="color:#f1fa8c">&amp;#39;Adblock-Plus_v3.8.4.crx&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> browser &lt;span style="color:#ff79c6">=&lt;/span> webdriver&lt;span style="color:#ff79c6">.&lt;/span>Chrome(options &lt;span style="color:#ff79c6">=&lt;/span> chop)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> browser&lt;span style="color:#ff79c6">.&lt;/span>implicitly_wait(&lt;span style="color:#bd93f9">10&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> browser&lt;span style="color:#ff79c6">.&lt;/span>get(url)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> soup &lt;span style="color:#ff79c6">=&lt;/span> BeautifulSoup(browser&lt;span style="color:#ff79c6">.&lt;/span>page_source, &lt;span style="color:#f1fa8c">&amp;#39;lxml&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span> img_count &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(soup&lt;span style="color:#ff79c6">.&lt;/span>find(&lt;span style="color:#f1fa8c">&amp;#39;select&amp;#39;&lt;/span>, {&lt;span style="color:#f1fa8c">&amp;#39;class&amp;#39;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#39;mh_select&amp;#39;&lt;/span>})&lt;span style="color:#ff79c6">.&lt;/span>find_all(&lt;span style="color:#f1fa8c">&amp;#39;option&amp;#39;&lt;/span>)[&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>get(&lt;span style="color:#f1fa8c">&amp;#39;value&amp;#39;&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> img_url &lt;span style="color:#ff79c6">=&lt;/span> soup&lt;span style="color:#ff79c6">.&lt;/span>find_all(&lt;span style="color:#f1fa8c">&amp;#39;div&amp;#39;&lt;/span>, {&lt;span style="color:#f1fa8c">&amp;#39;class&amp;#39;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#39;mh_comicpic&amp;#39;&lt;/span>})[&lt;span style="color:#bd93f9">0&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>find(&lt;span style="color:#f1fa8c">&amp;#39;img&amp;#39;&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>get(&lt;span style="color:#f1fa8c">&amp;#39;src&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> img_url[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span> img_url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https:&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> img_url
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span> m &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(img_url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39;.&amp;#39;&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>])
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span> img_url &lt;span style="color:#ff79c6">=&lt;/span> img_url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span> th_list &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(img_count):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span> img &lt;span style="color:#ff79c6">=&lt;/span> img_url &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(i &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>zfill(m) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span> th &lt;span style="color:#ff79c6">=&lt;/span> threading&lt;span style="color:#ff79c6">.&lt;/span>Thread(target&lt;span style="color:#ff79c6">=&lt;/span>download_img, args&lt;span style="color:#ff79c6">=&lt;/span>(img, i))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>start()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31&lt;/span> th_list&lt;span style="color:#ff79c6">.&lt;/span>append(th)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> th &lt;span style="color:#ff79c6">in&lt;/span> th_list:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33&lt;/span> th&lt;span style="color:#ff79c6">.&lt;/span>join()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34&lt;/span> browser&lt;span style="color:#ff79c6">.&lt;/span>quit()
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Python-01：爬蟲-圖片下載</title><link>https://blog.smallten.tk/p/python-01/</link><pubDate>Mon, 03 Aug 2020 00:39:24 +0800</pubDate><guid>https://blog.smallten.tk/p/python-01/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這一篇將帶領大家透過Python的爬蟲自動化的下載圖片&lt;/li>
&lt;/ul>
&lt;h1 id="安裝">安裝&lt;/h1>
&lt;ul>
&lt;li>打開終端機，安裝下列套件
&lt;ul>
&lt;li>&lt;code>pip install requests&lt;/code>&lt;/li>
&lt;li>&lt;code>pip install BeautifulSoup4&lt;/code>&lt;/li>
&lt;li>&lt;code>pip install lxml&lt;/code>&lt;/li>
&lt;li>&lt;code>pip install selenium&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>至 Chrome Driver 下載當前電腦中Chrome所對應版本的Driver&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ul>
&lt;li>首先因為這次的主題為圖片下載，因此我們找了一個擁有大量圖片的漫畫網頁來進行教學。&lt;/li>
&lt;li>由於這個網頁的圖片是由JavaScript加載的，因此一開始我們使用Selenium來開啟網頁
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">from&lt;/span> selenium &lt;span style="color:#ff79c6">import&lt;/span> webdriver
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https://www.ohmanhua.com/13621/1/1.html&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span style="color:#6272a4">#使用crx插件&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>chop &lt;span style="color:#ff79c6">=&lt;/span> webdriver&lt;span style="color:#ff79c6">.&lt;/span>ChromeOptions()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>chop&lt;span style="color:#ff79c6">.&lt;/span>add_extension(&lt;span style="color:#f1fa8c">&amp;#39;Adblock-Plus_v3.8.4.crx&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>browser &lt;span style="color:#ff79c6">=&lt;/span> webdriver&lt;span style="color:#ff79c6">.&lt;/span>Chrome(options &lt;span style="color:#ff79c6">=&lt;/span> chop)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span>browser&lt;span style="color:#ff79c6">.&lt;/span>implicitly_wait(&lt;span style="color:#bd93f9">10&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9&lt;/span>browser&lt;span style="color:#ff79c6">.&lt;/span>get(url)
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>當然若不想顯示瀏覽器的視窗可以使用headless模式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>chop&lt;span style="color:#ff79c6">.&lt;/span>add_argument(&lt;span style="color:#f1fa8c">&amp;#39;--headless&amp;#39;&lt;/span>) &lt;span style="color:#6272a4">#規避google bug&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>chop&lt;span style="color:#ff79c6">.&lt;/span>add_argument(&lt;span style="color:#f1fa8c">&amp;#39;--disable-gpu&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>接下來使用BeautifulSoup4來分析頁面，並取得圖片網址，和共幾張圖片&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>img_count &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(soup&lt;span style="color:#ff79c6">.&lt;/span>find(&lt;span style="color:#f1fa8c">&amp;#39;select&amp;#39;&lt;/span>, {&lt;span style="color:#f1fa8c">&amp;#39;class&amp;#39;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#39;mh_select&amp;#39;&lt;/span>})&lt;span style="color:#ff79c6">.&lt;/span>find_all(&lt;span style="color:#f1fa8c">&amp;#39;option&amp;#39;&lt;/span>)[&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>get(&lt;span style="color:#f1fa8c">&amp;#39;value&amp;#39;&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>img_url &lt;span style="color:#ff79c6">=&lt;/span> soup&lt;span style="color:#ff79c6">.&lt;/span>find_all(&lt;span style="color:#f1fa8c">&amp;#39;div&amp;#39;&lt;/span>, {&lt;span style="color:#f1fa8c">&amp;#39;class&amp;#39;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#39;mh_comicpic&amp;#39;&lt;/span>})[&lt;span style="color:#bd93f9">0&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>find(&lt;span style="color:#f1fa8c">&amp;#39;img&amp;#39;&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>get(&lt;span style="color:#f1fa8c">&amp;#39;src&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> img_url[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> img_url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https:&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> img_url
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>m &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(img_url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39;.&amp;#39;&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>])
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>img_url &lt;span style="color:#ff79c6">=&lt;/span> img_url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>最後便是下載圖片和關閉瀏覽器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">download_img&lt;/span>(img, num):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span> r &lt;span style="color:#ff79c6">=&lt;/span> requests&lt;span style="color:#ff79c6">.&lt;/span>get(img)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(save_url &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(num&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.jpg&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(r&lt;span style="color:#ff79c6">.&lt;/span>content)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>&lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(img_count):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span> img &lt;span style="color:#ff79c6">=&lt;/span> img_url &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(i &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>zfill(m) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span> download_img(img, i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9&lt;/span>browser&lt;span style="color:#ff79c6">.&lt;/span>quit()
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="完整程式碼">完整程式碼&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#6272a4"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">from&lt;/span> selenium &lt;span style="color:#ff79c6">import&lt;/span> webdriver
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">from&lt;/span> bs4 &lt;span style="color:#ff79c6">import&lt;/span> BeautifulSoup
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> requests
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">download_img&lt;/span>(img, num):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> r &lt;span style="color:#ff79c6">=&lt;/span> requests&lt;span style="color:#ff79c6">.&lt;/span>get(img)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> &lt;span style="color:#ff79c6">with&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(save_url &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(num&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.jpg&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#ff79c6">as&lt;/span> f:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>write(r&lt;span style="color:#ff79c6">.&lt;/span>content)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> __name__ &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> save_url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;./download/&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> chop &lt;span style="color:#ff79c6">=&lt;/span> webdriver&lt;span style="color:#ff79c6">.&lt;/span>ChromeOptions()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> chop&lt;span style="color:#ff79c6">.&lt;/span>add_extension(&lt;span style="color:#f1fa8c">&amp;#39;Adblock-Plus_v3.8.4.crx&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> browser &lt;span style="color:#ff79c6">=&lt;/span> webdriver&lt;span style="color:#ff79c6">.&lt;/span>Chrome(options &lt;span style="color:#ff79c6">=&lt;/span> chop)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> browser&lt;span style="color:#ff79c6">.&lt;/span>implicitly_wait(&lt;span style="color:#bd93f9">10&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> browser&lt;span style="color:#ff79c6">.&lt;/span>get(url)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> soup &lt;span style="color:#ff79c6">=&lt;/span> BeautifulSoup(browser&lt;span style="color:#ff79c6">.&lt;/span>page_source, &lt;span style="color:#f1fa8c">&amp;#39;lxml&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span> img_count &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(soup&lt;span style="color:#ff79c6">.&lt;/span>find(&lt;span style="color:#f1fa8c">&amp;#39;select&amp;#39;&lt;/span>, {&lt;span style="color:#f1fa8c">&amp;#39;class&amp;#39;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#39;mh_select&amp;#39;&lt;/span>})&lt;span style="color:#ff79c6">.&lt;/span>find_all(&lt;span style="color:#f1fa8c">&amp;#39;option&amp;#39;&lt;/span>)[&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>get(&lt;span style="color:#f1fa8c">&amp;#39;value&amp;#39;&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> img_url &lt;span style="color:#ff79c6">=&lt;/span> soup&lt;span style="color:#ff79c6">.&lt;/span>find_all(&lt;span style="color:#f1fa8c">&amp;#39;div&amp;#39;&lt;/span>, {&lt;span style="color:#f1fa8c">&amp;#39;class&amp;#39;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#39;mh_comicpic&amp;#39;&lt;/span>})[&lt;span style="color:#bd93f9">0&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>find(&lt;span style="color:#f1fa8c">&amp;#39;img&amp;#39;&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>get(&lt;span style="color:#f1fa8c">&amp;#39;src&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> img_url[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span> img_url &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;https:&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> img_url
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span> m &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(img_url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39;.&amp;#39;&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>])
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span> img_url &lt;span style="color:#ff79c6">=&lt;/span> img_url&lt;span style="color:#ff79c6">.&lt;/span>rsplit(&lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>)[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;/&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(img_count):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span> img &lt;span style="color:#ff79c6">=&lt;/span> img_url &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(i &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>zfill(m) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;.jpg&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span> download_img(img, i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span> browser&lt;span style="color:#ff79c6">.&lt;/span>quit()
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>簡易氣象站-02</title><link>https://blog.smallten.tk/p/weather-02/</link><pubDate>Sun, 12 Jul 2020 09:31:38 +0800</pubDate><guid>https://blog.smallten.tk/p/weather-02/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這系列主題將帶領大家建立一個簡易的氣象觀測站，而這一小節將製作在Raspberry pi用Python讀取Arduino Serial的數值，並且製作一個簡易的UI實時顯示出數值。&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>上一小節的成品&lt;/li>
&lt;li>Raspberry pi * 1&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ol>
&lt;li>打開Raspberry pi的Terminal，並輸入 &lt;code>ls /dev/tty*&lt;/code>&lt;/li>
&lt;li>將Arduino的Usb接上Raspberry pi&lt;/li>
&lt;li>再次於Terminal中輸入 &lt;code>ls /dev/tty*&lt;/code>，比較兩次的差異，即可知Arduino使用的序列埠為何(例如此時為/ &lt;code>dev/ttyACM0&lt;/code>，請依照情況自行修改)&lt;/li>
&lt;li>於Terminal中輸入 &lt;code>python3 -m pip install pyserial&lt;/code>&lt;/li>
&lt;li>將以下程式碼建立成一個python檔，再以python3執行即可&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#6272a4"># -*- coding: UTF-8 -*-&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> serial
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">import&lt;/span> tkinter &lt;span style="color:#ff79c6">as&lt;/span> tk
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">getData&lt;/span>():
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span> ser &lt;span style="color:#ff79c6">=&lt;/span> serial&lt;span style="color:#ff79c6">.&lt;/span>Serial(&lt;span style="color:#f1fa8c">&amp;#39;/dev/ttyACM0&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">9600&lt;/span>, timeout&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> ser&lt;span style="color:#ff79c6">.&lt;/span>flush()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> &lt;span style="color:#ff79c6">while&lt;/span> True:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span> flag &lt;span style="color:#ff79c6">=&lt;/span> False
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> ser&lt;span style="color:#ff79c6">.&lt;/span>in_waiting&lt;span style="color:#ff79c6">&amp;gt;&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span> arduinoData &lt;span style="color:#ff79c6">=&lt;/span> ser&lt;span style="color:#ff79c6">.&lt;/span>readline()&lt;span style="color:#ff79c6">.&lt;/span>decode(encoding&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;utf-8&amp;#39;&lt;/span>, errors&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;ignore&amp;#39;&lt;/span>)&lt;span style="color:#ff79c6">.&lt;/span>rstrip()&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39;;&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(arduinoData)&lt;span style="color:#ff79c6">!=&lt;/span>&lt;span style="color:#bd93f9">4&lt;/span> &lt;span style="color:#ff79c6">or&lt;/span> arduinoData&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> &lt;span style="color:#ff79c6">continue&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(&lt;span style="color:#bd93f9">0&lt;/span>,&lt;span style="color:#bd93f9">3&lt;/span>):
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> arduinoData[i]&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;0&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> flag &lt;span style="color:#ff79c6">=&lt;/span> True
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> &lt;span style="color:#ff79c6">break&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> flag:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> &lt;span style="color:#ff79c6">continue&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> temperature_value[&lt;span style="color:#f1fa8c">&amp;#39;text&amp;#39;&lt;/span>] &lt;span style="color:#ff79c6">=&lt;/span> arduinoData[&lt;span style="color:#bd93f9">0&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39; 度C&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> humidity_value[&lt;span style="color:#f1fa8c">&amp;#39;text&amp;#39;&lt;/span>] &lt;span style="color:#ff79c6">=&lt;/span> arduinoData[&lt;span style="color:#bd93f9">1&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39; %&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span> pmat25_value[&lt;span style="color:#f1fa8c">&amp;#39;text&amp;#39;&lt;/span>] &lt;span style="color:#ff79c6">=&lt;/span> arduinoData[&lt;span style="color:#bd93f9">2&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39; ug/m^3&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span> wind_value[&lt;span style="color:#f1fa8c">&amp;#39;text&amp;#39;&lt;/span>] &lt;span style="color:#ff79c6">=&lt;/span> arduinoData[&lt;span style="color:#bd93f9">3&lt;/span>] &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39; 級&amp;#39;&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span> &lt;span style="color:#ff79c6">break&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span> window&lt;span style="color:#ff79c6">.&lt;/span>after(&lt;span style="color:#bd93f9">1000&lt;/span>, getData)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span>&lt;span style="color:#ff79c6">if&lt;/span> __name__&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span> window &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Tk()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30&lt;/span> window&lt;span style="color:#ff79c6">.&lt;/span>title(&lt;span style="color:#f1fa8c">&amp;#39;Weather&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31&lt;/span> window&lt;span style="color:#ff79c6">.&lt;/span>geometry(&lt;span style="color:#f1fa8c">&amp;#39;500x250&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32&lt;/span> window&lt;span style="color:#ff79c6">.&lt;/span>resizable(False, False)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34&lt;/span> header_label &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(window, text&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;環境監測&amp;#39;&lt;/span>, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">20&lt;/span>), width&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">30&lt;/span>, height&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">2&lt;/span>, borderwidth&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">2&lt;/span>, relief&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;solid&amp;#39;&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35&lt;/span> header_label&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>TOP)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37&lt;/span> temperature_frame &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Frame(window)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38&lt;/span> temperature_frame&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>TOP)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39&lt;/span> temperature_label &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(temperature_frame, text&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;溫度: &amp;#39;&lt;/span>, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40&lt;/span> temperature_label&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41&lt;/span> temperature_value &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(temperature_frame, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42&lt;/span> temperature_value&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44&lt;/span> humidity_frame &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Frame(window)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45&lt;/span> humidity_frame&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>TOP)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46&lt;/span> humidity_label &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(humidity_frame, text&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;濕度: &amp;#39;&lt;/span>, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47&lt;/span> humidity_label&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48&lt;/span> humidity_value &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(humidity_frame, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49&lt;/span> humidity_value&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51&lt;/span> pmat25_frame &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Frame(window)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52&lt;/span> pmat25_frame&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>TOP)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53&lt;/span> pmat25_label &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(pmat25_frame, text&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;PM2.5: &amp;#39;&lt;/span>, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54&lt;/span> pmat25_label&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55&lt;/span> pmat25_value &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(pmat25_frame, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56&lt;/span> pmat25_value&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58&lt;/span> wind_frame &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Frame(window)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59&lt;/span> wind_frame&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>TOP)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60&lt;/span> wind_label &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(wind_frame, text&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;風速: &amp;#39;&lt;/span>, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61&lt;/span> wind_label&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62&lt;/span> wind_value &lt;span style="color:#ff79c6">=&lt;/span> tk&lt;span style="color:#ff79c6">.&lt;/span>Label(wind_frame, font&lt;span style="color:#ff79c6">=&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;Arial&amp;#39;&lt;/span>, &lt;span style="color:#bd93f9">16&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63&lt;/span> wind_value&lt;span style="color:#ff79c6">.&lt;/span>pack(side&lt;span style="color:#ff79c6">=&lt;/span>tk&lt;span style="color:#ff79c6">.&lt;/span>LEFT)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65&lt;/span> getData()
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66&lt;/span> window&lt;span style="color:#ff79c6">.&lt;/span>mainloop()
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>最終成果圖
&lt;figure style="flex-grow: 180; flex-basis: 433px">
&lt;a href="https://blog.smallten.tk/p/weather-02/weather-02-01.png" data-size="1204x667">&lt;img src="https://blog.smallten.tk/p/weather-02/weather-02-01.png"
srcset="https://blog.smallten.tk/p/weather-02/weather-02-01_hu20a2b6b3b028921376cf98bcdf6883e5_62784_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/weather-02/weather-02-01_hu20a2b6b3b028921376cf98bcdf6883e5_62784_1024x0_resize_box_2.png 1024w"
width="1204"
height="667"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul></description></item><item><title>簡易氣象站-01</title><link>https://blog.smallten.tk/p/weather-01/</link><pubDate>Sun, 12 Jul 2020 09:02:34 +0800</pubDate><guid>https://blog.smallten.tk/p/weather-01/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這系列主題將帶領大家建立一個簡易的氣象觀測站，而這一小節將製作由Arduino抓取感測器數值的部分。&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino Uno R3 * 1&lt;/li>
&lt;li>攀藤 G5 PMS5003 * 1&lt;/li>
&lt;li>DFrobot 三杯式風速感測器 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;h2 id="連結電路">連結電路&lt;/h2>
&lt;p>&lt;figure style="flex-grow: 132; flex-basis: 318px">
&lt;a href="https://blog.smallten.tk/p/weather-01/weather-01-01.jpg" data-size="370x279">&lt;img src="https://blog.smallten.tk/p/weather-01/weather-01-01.jpg"
srcset="https://blog.smallten.tk/p/weather-01/weather-01-01_hu48c71b804eacb5bf162295a0daa3992c_15962_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/weather-01/weather-01-01_hu48c71b804eacb5bf162295a0daa3992c_15962_1024x0_resize_q75_box.jpg 1024w"
width="370"
height="279"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="uno程式碼">Uno程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;SoftwareSerial.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">#define windPin A0
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>SoftwareSerial &lt;span style="color:#50fa7b">pmsSerial&lt;/span>(&lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">3&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span style="color:#8be9fd">long&lt;/span> pmValue&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="color:#8be9fd">long&lt;/span> pmcf25&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span style="color:#8be9fd">long&lt;/span> pmat25&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> temperature &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> humandity &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">retrievepm25&lt;/span>(){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> count &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> c;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> high;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> &lt;span style="color:#ff79c6">while&lt;/span> (pmsSerial.available()) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> c &lt;span style="color:#ff79c6">=&lt;/span> pmsSerial.read();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>((count&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span> &lt;span style="color:#ff79c6">&amp;amp;&amp;amp;&lt;/span> c&lt;span style="color:#ff79c6">!=&lt;/span>&lt;span style="color:#bd93f9">0x42&lt;/span>) &lt;span style="color:#ff79c6">||&lt;/span> (count&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#bd93f9">1&lt;/span> &lt;span style="color:#ff79c6">&amp;amp;&amp;amp;&lt;/span> c&lt;span style="color:#ff79c6">!=&lt;/span>&lt;span style="color:#bd93f9">0x4d&lt;/span>))
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> &lt;span style="color:#ff79c6">break&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(count &lt;span style="color:#ff79c6">&amp;gt;&lt;/span> &lt;span style="color:#bd93f9">27&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span> &lt;span style="color:#ff79c6">break&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span> &lt;span style="color:#ff79c6">||&lt;/span> count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">6&lt;/span> &lt;span style="color:#ff79c6">||&lt;/span> count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">8&lt;/span> &lt;span style="color:#ff79c6">||&lt;/span> count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">10&lt;/span> &lt;span style="color:#ff79c6">||&lt;/span> count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">12&lt;/span> &lt;span style="color:#ff79c6">||&lt;/span> count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">14&lt;/span> &lt;span style="color:#ff79c6">||&lt;/span> count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">24&lt;/span> &lt;span style="color:#ff79c6">||&lt;/span> count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">26&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> high &lt;span style="color:#ff79c6">=&lt;/span> c;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">7&lt;/span>){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span> pmcf25 &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">256&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span>high &lt;span style="color:#ff79c6">+&lt;/span> c;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span> pmValue &lt;span style="color:#ff79c6">=&lt;/span> pmcf25;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">13&lt;/span>){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span> pmat25 &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">256&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span>high &lt;span style="color:#ff79c6">+&lt;/span> c;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span> pmValue &lt;span style="color:#ff79c6">=&lt;/span> pmat25;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">25&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32&lt;/span> temperature &lt;span style="color:#ff79c6">=&lt;/span> (&lt;span style="color:#bd93f9">256&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span>high &lt;span style="color:#ff79c6">+&lt;/span> c)&lt;span style="color:#ff79c6">/&lt;/span>&lt;span style="color:#bd93f9">10&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(count &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">27&lt;/span>)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34&lt;/span> humandity &lt;span style="color:#ff79c6">=&lt;/span> (&lt;span style="color:#bd93f9">256&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span>high &lt;span style="color:#ff79c6">+&lt;/span> c)&lt;span style="color:#ff79c6">/&lt;/span>&lt;span style="color:#bd93f9">10&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35&lt;/span> count&lt;span style="color:#ff79c6">++&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37&lt;/span> &lt;span style="color:#ff79c6">while&lt;/span>(pmsSerial.available())
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38&lt;/span> pmsSerial.read();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">setup&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42&lt;/span> Serial.begin(&lt;span style="color:#bd93f9">9600&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43&lt;/span> pmsSerial.begin(&lt;span style="color:#bd93f9">9600&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">loop&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47&lt;/span> retrievepm25();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48&lt;/span> Serial.print(temperature);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49&lt;/span> Serial.print(&lt;span style="color:#f1fa8c">&amp;#34;;&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50&lt;/span> Serial.print(humandity);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51&lt;/span> Serial.print(&lt;span style="color:#f1fa8c">&amp;#34;;&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52&lt;/span> Serial.print(pmat25);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> windValue &lt;span style="color:#ff79c6">=&lt;/span> analogRead(windPin);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> Level &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">6&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span> windValue &lt;span style="color:#ff79c6">*&lt;/span> (&lt;span style="color:#bd93f9">5.0&lt;/span> &lt;span style="color:#ff79c6">/&lt;/span> &lt;span style="color:#bd93f9">1023.0&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56&lt;/span> Serial.print(&lt;span style="color:#f1fa8c">&amp;#34;;&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57&lt;/span> Serial.print(Level);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59&lt;/span> Serial.println();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60&lt;/span> delay(&lt;span style="color:#bd93f9">1000&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Arduino-05：HC-05 AT命令</title><link>https://blog.smallten.tk/p/arduino-05/</link><pubDate>Sun, 10 May 2020 21:56:45 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-05/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將教大家透過Arduino的序列埠設定HC-05的AT命令&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino Uno * 1&lt;/li>
&lt;li>HC-05藍芽模組 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="教學">教學&lt;/h1>
&lt;h2 id="腳位連接">腳位連接&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Arduino&lt;/th>
&lt;th>HC-05&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>5V&lt;/td>
&lt;td>VCC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GND&lt;/td>
&lt;td>GND&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8&lt;/td>
&lt;td>TX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9&lt;/td>
&lt;td>RX&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="程式碼">程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;SoftwareSerial.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>SoftwareSerial &lt;span style="color:#50fa7b">BT&lt;/span>(&lt;span style="color:#bd93f9">8&lt;/span>, &lt;span style="color:#bd93f9">9&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#8be9fd">char&lt;/span> val;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">setup&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span> Serial.begin(&lt;span style="color:#bd93f9">9600&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span> BT.begin(&lt;span style="color:#bd93f9">38400&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">loop&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(Serial.available()){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> val &lt;span style="color:#ff79c6">=&lt;/span> Serial.read();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> BT.print(val);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(BT.available()){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> val &lt;span style="color:#ff79c6">=&lt;/span> BT.read();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span> Serial.print(val);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>連接腳位，並上傳程式碼，最後給HC-05供電前，先按住上面的按鈕，再提供電源，燈號將變成約兩秒一閃，及表示進入了AT命令模式&lt;/li>
&lt;li>接下來打開序列埠監控視窗，將設定調成&amp;quot;9600 baud&amp;quot;和&amp;quot;NL與CR&amp;quot;，最後依需求輸入以下命令即可&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>AT -&amp;gt; 顯示OK表示連接成功&lt;/li>
&lt;li>查看韌體版本 -&amp;gt; AT+VERSION&lt;/li>
&lt;li>查看名稱 -&amp;gt; AT+NAME?&lt;/li>
&lt;li>修改名稱 -&amp;gt; AT+NAME=你要的名字&lt;/li>
&lt;li>查看密碼 -&amp;gt; AT+PSWD?&lt;/li>
&lt;li>修改密碼 -&amp;gt; AT+PSWD=你要的密碼&lt;/li>
&lt;/ul></description></item><item><title>Arduino-04：藍芽遙控車</title><link>https://blog.smallten.tk/p/arduino-04/</link><pubDate>Sun, 03 May 2020 16:29:01 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-04/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將帶領大家製作藍芽的遙控車，並且用Blynk的Joystick操控它&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino nano * 1&lt;/li>
&lt;li>L298N 馬達控制板 * 1&lt;/li>
&lt;li>HC-05 藍芽模組 * 1&lt;/li>
&lt;li>二輪直流馬達遙控車 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="下載">下載&lt;/h1>
&lt;ul>
&lt;li>至手機應用商店下載Blynk的App－&lt;a class="link" href="https://blynk.io/" target="_blank" rel="noopener"
>Blynk官網&lt;/a>&lt;/li>
&lt;li>下載Blynk函式庫&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ol>
&lt;li>先上傳程式碼至Nano板中&lt;/li>
&lt;li>依照下方圖示連接腳位，並且設定Blynk App內的物件&lt;/li>
&lt;/ol>
&lt;h2 id="連接腳位">連接腳位&lt;/h2>
&lt;p>&lt;figure style="flex-grow: 167; flex-basis: 401px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-04.jpg" data-size="1668x996">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-04.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-04_huc09fd31ce9bb786d1041f70ffa59556f_82083_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-04_huc09fd31ce9bb786d1041f70ffa59556f_82083_1024x0_resize_q75_box.jpg 1024w"
width="1668"
height="996"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="設定blynk">設定Blynk&lt;/h2>
&lt;ul>
&lt;li>創建3個元件，分別為Button、Bluetooth、Joystick，並且依下圖進行設置
&lt;figure style="flex-grow: 53; flex-basis: 128px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-01.jpg" data-size="1080x2022">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-01.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-01_hue57180307d431242e42d97cfedf97de1_143362_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-01_hue57180307d431242e42d97cfedf97de1_143362_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2022"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 462; flex-basis: 1110px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-02.jpg" data-size="907x196">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-02.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-02_hu2e7025b0c6a151426e93fe60ae1d9c1a_10112_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-02_hu2e7025b0c6a151426e93fe60ae1d9c1a_10112_1024x0_resize_q75_box.jpg 1024w"
width="907"
height="196"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 53; flex-basis: 128px">
&lt;a href="https://blog.smallten.tk/p/arduino-04/Arduino-04-03.jpg" data-size="1080x2014">&lt;img src="https://blog.smallten.tk/p/arduino-04/Arduino-04-03.jpg"
srcset="https://blog.smallten.tk/p/arduino-04/Arduino-04-03_hucaa0b2ce0717571834e5be3d421346d7_167669_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-04/Arduino-04-03_hucaa0b2ce0717571834e5be3d421346d7_167669_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2014"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h2 id="nano程式碼">nano程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;BlynkSimpleSerialBLE.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">#define BLYNK_USE_DIRECT_CONNECT
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#8be9fd">char&lt;/span> auth[] &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;Blynk Auth&amp;#34;&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> d[&lt;span style="color:#bd93f9">2&lt;/span>] &lt;span style="color:#ff79c6">=&lt;/span> {&lt;span style="color:#bd93f9">0&lt;/span>};
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> car[&lt;span style="color:#bd93f9">2&lt;/span>][&lt;span style="color:#bd93f9">2&lt;/span>] &lt;span style="color:#ff79c6">=&lt;/span> { {&lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">6&lt;/span>}, {&lt;span style="color:#bd93f9">11&lt;/span>, &lt;span style="color:#bd93f9">10&lt;/span>} }; &lt;span style="color:#6272a4">//in 1,2,4,3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> en[&lt;span style="color:#bd93f9">2&lt;/span>] &lt;span style="color:#ff79c6">=&lt;/span> {&lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">9&lt;/span>};
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">Controller&lt;/span>();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">Move&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span>, &lt;span style="color:#8be9fd">int&lt;/span>, &lt;span style="color:#8be9fd">int&lt;/span>, &lt;span style="color:#8be9fd">int&lt;/span>, &lt;span style="color:#8be9fd">int&lt;/span>, &lt;span style="color:#8be9fd">int&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>BLYNK_WRITE(V0){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> i&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>; i&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>&lt;span style="color:#bd93f9">2&lt;/span>; &lt;span style="color:#ff79c6">++&lt;/span>i){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span> d[i] &lt;span style="color:#ff79c6">=&lt;/span> param[i].asInt();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[i]&lt;span style="color:#ff79c6">&amp;lt;=&lt;/span>&lt;span style="color:#bd93f9">64&lt;/span>) d[i] &lt;span style="color:#ff79c6">=&lt;/span> d[i]&lt;span style="color:#ff79c6">*&lt;/span>&lt;span style="color:#bd93f9">2&lt;/span>&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">255&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#50fa7b">if&lt;/span>(d[i]&lt;span style="color:#ff79c6">&amp;gt;&lt;/span>&lt;span style="color:#bd93f9">64&lt;/span> &lt;span style="color:#ff79c6">&amp;amp;&amp;amp;&lt;/span> d[i]&lt;span style="color:#ff79c6">&amp;lt;=&lt;/span>&lt;span style="color:#bd93f9">192&lt;/span>) d[i]&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">setup&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span> Serial.begin(&lt;span style="color:#bd93f9">9600&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span> Blynk.begin(Serial, auth);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> i&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>; i&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>&lt;span style="color:#bd93f9">2&lt;/span>; &lt;span style="color:#ff79c6">++&lt;/span>i){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span> pinMode(en[i], OUTPUT);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> j&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>; j&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>&lt;span style="color:#bd93f9">2&lt;/span>; &lt;span style="color:#ff79c6">++&lt;/span>j){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span> pinMode(car[i][j], OUTPUT);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">loop&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32&lt;/span> Blynk.run();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33&lt;/span> Controller();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">Controller&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">0&lt;/span>]&lt;span style="color:#ff79c6">&amp;gt;&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">&amp;gt;&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>) Move(&lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, min(d[&lt;span style="color:#bd93f9">0&lt;/span>], d[&lt;span style="color:#bd93f9">1&lt;/span>]), max(d[&lt;span style="color:#bd93f9">0&lt;/span>], d[&lt;span style="color:#bd93f9">1&lt;/span>]));
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>) Move(&lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, d[&lt;span style="color:#bd93f9">0&lt;/span>]);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> Move(&lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, min(d[&lt;span style="color:#bd93f9">0&lt;/span>], abs(d[&lt;span style="color:#bd93f9">1&lt;/span>])), max(d[&lt;span style="color:#bd93f9">0&lt;/span>], abs(d[&lt;span style="color:#bd93f9">1&lt;/span>])));
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">0&lt;/span>]&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">&amp;gt;&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>) Move(&lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, d[&lt;span style="color:#bd93f9">1&lt;/span>], d[&lt;span style="color:#bd93f9">1&lt;/span>]);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>) Move(&lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> Move(&lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, abs(d[&lt;span style="color:#bd93f9">1&lt;/span>]), abs(d[&lt;span style="color:#bd93f9">1&lt;/span>]));
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span>{
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">&amp;gt;&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>) Move(&lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, max(abs(d[&lt;span style="color:#bd93f9">0&lt;/span>]), d[&lt;span style="color:#bd93f9">1&lt;/span>]), min(abs(d[&lt;span style="color:#bd93f9">0&lt;/span>]), d[&lt;span style="color:#bd93f9">1&lt;/span>]));
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(d[&lt;span style="color:#bd93f9">1&lt;/span>]&lt;span style="color:#ff79c6">==&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>) Move(&lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, abs(d[&lt;span style="color:#bd93f9">0&lt;/span>]), &lt;span style="color:#bd93f9">0&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span> Move(&lt;span style="color:#bd93f9">0&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, max(abs(d[&lt;span style="color:#bd93f9">0&lt;/span>]), abs(d[&lt;span style="color:#bd93f9">1&lt;/span>])), min(abs(d[&lt;span style="color:#bd93f9">0&lt;/span>]), abs(d[&lt;span style="color:#bd93f9">1&lt;/span>])));
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">Move&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> a1,&lt;span style="color:#8be9fd">int&lt;/span> a2, &lt;span style="color:#8be9fd">int&lt;/span> a3, &lt;span style="color:#8be9fd">int&lt;/span> a4, &lt;span style="color:#8be9fd">int&lt;/span> e1, &lt;span style="color:#8be9fd">int&lt;/span> e2) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55&lt;/span> digitalWrite(car[&lt;span style="color:#bd93f9">0&lt;/span>][&lt;span style="color:#bd93f9">0&lt;/span>], a1);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56&lt;/span> digitalWrite(car[&lt;span style="color:#bd93f9">0&lt;/span>][&lt;span style="color:#bd93f9">1&lt;/span>], a2);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57&lt;/span> digitalWrite(car[&lt;span style="color:#bd93f9">1&lt;/span>][&lt;span style="color:#bd93f9">0&lt;/span>], a3);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58&lt;/span> digitalWrite(car[&lt;span style="color:#bd93f9">1&lt;/span>][&lt;span style="color:#bd93f9">1&lt;/span>], a4);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59&lt;/span> analogWrite(en[&lt;span style="color:#bd93f9">0&lt;/span>], e1);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60&lt;/span> analogWrite(en[&lt;span style="color:#bd93f9">1&lt;/span>], e2);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="補充">補充&lt;/h1>
&lt;ul>
&lt;li>由於這邊我們將HC-05和Nano板的RX、TX對接，因此自行修改程式碼後要重新上傳時，記得先移除連接Nano板的那兩條線，當然也可使用SoftwareSerial Library來進行，就不用拔除線路了&lt;/li>
&lt;li>若要自行修改HC-05的設定，可參考下一篇文章 &lt;a class="link" href="../arduino-05" >ARDUINO-05：HC-05 AT命令&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Arduino-03：跑馬燈</title><link>https://blog.smallten.tk/p/arduino-03/</link><pubDate>Thu, 09 Apr 2020 14:50:56 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-03/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將帶領大家製作點陣跑馬燈，並且用Blynk來操控它&lt;/li>
&lt;/ul>
&lt;h1 id="硬體">硬體&lt;/h1>
&lt;ul>
&lt;li>WeMos D1R2 * 1&lt;/li>
&lt;li>MAX7219 8*8LED點陣模組 * 2&lt;/li>
&lt;/ul>
&lt;h1 id="下載">下載&lt;/h1>
&lt;ul>
&lt;li>至手機應用商店下載Blynk的App－&lt;a class="link" href="https://blynk.io/https://blynk.io/" target="_blank" rel="noopener"
>Blynk官網&lt;/a>&lt;/li>
&lt;li>下載Blynk函式庫&lt;/li>
&lt;li>&lt;a class="link" href="https://code.google.com/archive/p/arudino-maxmatrix-library/" target="_blank" rel="noopener"
>maxmatrix&lt;/a>－下載並加入函式庫&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;h2 id="連接腳位">連接腳位&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MAX7219&lt;/th>
&lt;th>D1R2&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>VCC&lt;/td>
&lt;td>5V&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GND&lt;/td>
&lt;td>GND&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DIN&lt;/td>
&lt;td>MOSI/D7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CS&lt;/td>
&lt;td>SS/D8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLK&lt;/td>
&lt;td>SCK/D5&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>若要串聯多塊MAX7219的話，請將下一塊的DIN接至上一塊的DOUT連接腳位&lt;/li>
&lt;/ul>
&lt;h2 id="設定blynk">設定Blynk&lt;/h2>
&lt;ul>
&lt;li>請照下圖拉出三個物件，並設定其相關參數
&lt;figure style="flex-grow: 52; flex-basis: 126px">
&lt;a href="https://blog.smallten.tk/p/arduino-03/Arduino-03-01.jpg" data-size="1080x2042">&lt;img src="https://blog.smallten.tk/p/arduino-03/Arduino-03-01.jpg"
srcset="https://blog.smallten.tk/p/arduino-03/Arduino-03-01_hu27f7dc34c9db8fd2b063f3fba6be9864_75209_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-03/Arduino-03-01_hu27f7dc34c9db8fd2b063f3fba6be9864_75209_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2042"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 53; flex-basis: 129px">
&lt;a href="https://blog.smallten.tk/p/arduino-03/Arduino-03-02.jpg" data-size="1080x2001">&lt;img src="https://blog.smallten.tk/p/arduino-03/Arduino-03-02.jpg"
srcset="https://blog.smallten.tk/p/arduino-03/Arduino-03-02_hu27f7dc34c9db8fd2b063f3fba6be9864_82061_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-03/Arduino-03-02_hu27f7dc34c9db8fd2b063f3fba6be9864_82061_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2001"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;figure style="flex-grow: 53; flex-basis: 127px">
&lt;a href="https://blog.smallten.tk/p/arduino-03/Arduino-03-03.jpg" data-size="1080x2027">&lt;img src="https://blog.smallten.tk/p/arduino-03/Arduino-03-03.jpg"
srcset="https://blog.smallten.tk/p/arduino-03/Arduino-03-03_hu27f7dc34c9db8fd2b063f3fba6be9864_83693_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-03/Arduino-03-03_hu27f7dc34c9db8fd2b063f3fba6be9864_83693_1024x0_resize_q75_box.jpg 1024w"
width="1080"
height="2027"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h2 id="d1r2程式碼">D1R2程式碼&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;MaxMatrix.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;avr/pgmspace.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;ESP8266WiFi.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;BlynkSimpleEsp8266.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="color:#8be9fd">char&lt;/span> auth[] &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;Blynk auth&amp;#34;&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span style="color:#8be9fd">char&lt;/span> ssid[] &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;Wifi ssid&amp;#34;&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span style="color:#8be9fd">char&lt;/span> pass[] &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;Wifi password&amp;#34;&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10&lt;/span>PROGMEM &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> CH[] &lt;span style="color:#ff79c6">=&lt;/span> {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000000, B0000000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// space
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1011111, B0000000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// !
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000011, B0000000, B0000011, B0000000, B0000000, &lt;span style="color:#6272a4">// &amp;#34;
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0010100, B0111110, B0010100, B0111110, B0010100, &lt;span style="color:#6272a4">// #
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0100100, B1101010, B0101011, B0010010, B0000000, &lt;span style="color:#6272a4">// $
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100011, B0010011, B0001000, B1100100, B1100011, &lt;span style="color:#6272a4">// %
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0110110, B1001001, B1010110, B0100000, B1010000, &lt;span style="color:#6272a4">// &amp;amp;
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000011, B0000000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// &amp;#39;
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0011100, B0100010, B1000001, B0000000, B0000000, &lt;span style="color:#6272a4">// (
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000001, B0100010, B0011100, B0000000, B0000000, &lt;span style="color:#6272a4">// )
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0101000, B0011000, B0001110, B0011000, B0101000, &lt;span style="color:#6272a4">// *
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0001000, B0001000, B0111110, B0001000, B0001000, &lt;span style="color:#6272a4">// +
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B10110000, B1110000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// ,
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0001000, B0001000, B0001000, B0001000, B0000000, &lt;span style="color:#6272a4">// -
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100000, B1100000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// .
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100000, B0011000, B0000110, B0000001, B0000000, &lt;span style="color:#6272a4">// /
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111110, B1000001, B1000001, B0111110, B0000000, &lt;span style="color:#6272a4">// 0
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000010, B1111111, B1000000, B0000000, B0000000, &lt;span style="color:#6272a4">// 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100010, B1010001, B1001001, B1000110, B0000000, &lt;span style="color:#6272a4">// 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0100010, B1000001, B1001001, B0110110, B0000000, &lt;span style="color:#6272a4">// 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0011000, B0010100, B0010010, B1111111, B0000000, &lt;span style="color:#6272a4">// 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0100111, B1000101, B1000101, B0111001, B0000000, &lt;span style="color:#6272a4">// 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111110, B1001001, B1001001, B0110000, B0000000, &lt;span style="color:#6272a4">// 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100001, B0010001, B0001001, B0000111, B0000000, &lt;span style="color:#6272a4">// 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0110110, B1001001, B1001001, B0110110, B0000000, &lt;span style="color:#6272a4">// 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000110, B1001001, B1001001, B0111110, B0000000, &lt;span style="color:#6272a4">// 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B01010000, B0000000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// :
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B10000000, B01010000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// ;
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0010000, B0101000, B1000100, B0000000, B0000000, &lt;span style="color:#6272a4">// &amp;lt;
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0010100, B0010100, B0010100, B0000000, B0000000, &lt;span style="color:#6272a4">// =
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000100, B0101000, B0010000, B0000000, B0000000, &lt;span style="color:#6272a4">// &amp;gt;
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000010, B1011001, B0001001, B0000110, B0000000, &lt;span style="color:#6272a4">// ?
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111110, B1001001, B1010101, B1011101, B0001110, &lt;span style="color:#6272a4">// @
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111110, B0010001, B0010001, B1111110, B0000000, &lt;span style="color:#6272a4">// A
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B1001001, B1001001, B0110110, B0000000, &lt;span style="color:#6272a4">// B
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111110, B1000001, B1000001, B0100010, B0000000, &lt;span style="color:#6272a4">// C
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B1000001, B1000001, B0111110, B0000000, &lt;span style="color:#6272a4">// D
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B1001001, B1001001, B1000001, B0000000, &lt;span style="color:#6272a4">// E
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0001001, B0001001, B0000001, B0000000, &lt;span style="color:#6272a4">// F
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111110, B1000001, B1001001, B1111010, B0000000, &lt;span style="color:#6272a4">// G
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0001000, B0001000, B1111111, B0000000, &lt;span style="color:#6272a4">// H
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000001, B1111111, B1000001, B0000000, B0000000, &lt;span style="color:#6272a4">// I
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0110000, B1000000, B1000001, B0111111, B0000000, &lt;span style="color:#6272a4">// J
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0001000, B0010100, B1100011, B0000000, &lt;span style="color:#6272a4">// K
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B1000000, B1000000, B1000000, B0000000, &lt;span style="color:#6272a4">// L
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0000010, B0001100, B0000010, B1111111, &lt;span style="color:#6272a4">// M
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0000100, B0001000, B0010000, B1111111, &lt;span style="color:#6272a4">// N
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111110, B1000001, B1000001, B0111110, B0000000, &lt;span style="color:#6272a4">// O
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0001001, B0001001, B0000110, B0000000, &lt;span style="color:#6272a4">// P
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111110, B1000001, B1000001, B10111110, B0000000, &lt;span style="color:#6272a4">// Q
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0001001, B0001001, B1110110, B0000000, &lt;span style="color:#6272a4">// R
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000110, B1001001, B1001001, B0110010, B0000000, &lt;span style="color:#6272a4">// S
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000001, B0000001, B1111111, B0000001, B0000001, &lt;span style="color:#6272a4">// T
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111111, B1000000, B1000000, B0111111, B0000000, &lt;span style="color:#6272a4">// U
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0001111, B0110000, B1000000, B0110000, B0001111, &lt;span style="color:#6272a4">// V
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111111, B1000000, B0111000, B1000000, B0111111, &lt;span style="color:#6272a4">// W
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100011, B0010100, B0001000, B0010100, B1100011, &lt;span style="color:#6272a4">// X
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000111, B0001000, B1110000, B0001000, B0000111, &lt;span style="color:#6272a4">// Y
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100001, B1010001, B1001001, B1000111, B0000000, &lt;span style="color:#6272a4">// Z
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B1000001, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// [
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000001, B0000110, B0011000, B1100000, B0000000, &lt;span style="color:#6272a4">// backslash
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000001, B1111111, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// ]
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000010, B0000001, B0000010, B0000000, B0000000, &lt;span style="color:#6272a4">// hat
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000000, B1000000, B1000000, B1000000, B0000000, &lt;span style="color:#6272a4">// _
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000001, B0000010, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// `
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0100000, B1010100, B1010100, B1111000, B0000000, &lt;span style="color:#6272a4">// a
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B1000100, B1000100, B0111000, B0000000, &lt;span style="color:#6272a4">// b
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111000, B1000100, B1000100, B0101000, B0000000, &lt;span style="color:#6272a4">// c
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111000, B1000100, B1000100, B1111111, B0000000, &lt;span style="color:#6272a4">// d
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111000, B1010100, B1010100, B0011000, B0000000, &lt;span style="color:#6272a4">// e
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000100, B1111110, B0000101, B0000000, B0000000, &lt;span style="color:#6272a4">// f
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B10011000, B10100100, B10100100, B01111000, B0000000, &lt;span style="color:#6272a4">// g
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0000100, B0000100, B1111000, B0000000, &lt;span style="color:#6272a4">// h
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000100, B1111101, B1000000, B0000000, B0000000, &lt;span style="color:#6272a4">// i
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000000, B10000000, B10000100, B1111101, B0000000, &lt;span style="color:#6272a4">// j
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0010000, B0101000, B1000100, B0000000, &lt;span style="color:#6272a4">// k
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000001, B1111111, B1000000, B0000000, B0000000, &lt;span style="color:#6272a4">// l
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111100, B0000100, B1111100, B0000100, B1111000, &lt;span style="color:#6272a4">// m
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111100, B0000100, B0000100, B1111000, B0000000, &lt;span style="color:#6272a4">// n
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111000, B1000100, B1000100, B0111000, B0000000, &lt;span style="color:#6272a4">// o
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B11111100, B0100100, B0100100, B0011000, B0000000, &lt;span style="color:#6272a4">// p
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0011000, B0100100, B0100100, B11111100, B0000000, &lt;span style="color:#6272a4">// q
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111100, B0001000, B0000100, B0000100, B0000000, &lt;span style="color:#6272a4">// r
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1001000, B1010100, B1010100, B0100100, B0000000, &lt;span style="color:#6272a4">// s
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0000100, B0111111, B1000100, B0000000, B0000000, &lt;span style="color:#6272a4">// t
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111100, B1000000, B1000000, B1111100, B0000000, &lt;span style="color:#6272a4">// u
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0011100, B0100000, B1000000, B0100000, B0011100, &lt;span style="color:#6272a4">// v
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0111100, B1000000, B0111100, B1000000, B0111100, &lt;span style="color:#6272a4">// w
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000100, B0101000, B0010000, B0101000, B1000100, &lt;span style="color:#6272a4">// x
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B10011100, B10100000, B10100000, B1111100, B0000000, &lt;span style="color:#6272a4">// y
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1100100, B1010100, B1001100, B0000000, B0000000, &lt;span style="color:#6272a4">// z
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0001000, B0110110, B1000001, B0000000, B0000000, &lt;span style="color:#6272a4">// {
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">1&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1111111, B0000000, B0000000, B0000000, B0000000, &lt;span style="color:#6272a4">// |
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">3&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B1000001, B0110110, B0001000, B0000000, B0000000, &lt;span style="color:#6272a4">// }
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105&lt;/span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#bd93f9">4&lt;/span>, &lt;span style="color:#bd93f9">8&lt;/span>, B0001000, B0000100, B0001000, B0000100, B0000000, &lt;span style="color:#6272a4">// ~
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106&lt;/span>&lt;span style="color:#6272a4">&lt;/span>};
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108&lt;/span>&lt;span style="color:#ff79c6">const&lt;/span> byte data &lt;span style="color:#ff79c6">=&lt;/span> D7;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109&lt;/span>&lt;span style="color:#ff79c6">const&lt;/span> byte cs &lt;span style="color:#ff79c6">=&lt;/span> D8;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110&lt;/span>&lt;span style="color:#ff79c6">const&lt;/span> byte clk &lt;span style="color:#ff79c6">=&lt;/span> D5;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111&lt;/span>&lt;span style="color:#ff79c6">const&lt;/span> byte maxInUse &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>; &lt;span style="color:#6272a4">//使用的點陣模塊數量
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112&lt;/span>&lt;span style="color:#6272a4">&lt;/span>MaxMatrix &lt;span style="color:#50fa7b">m&lt;/span>(data, cs, clk, maxInUse);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113&lt;/span>byte buffer[&lt;span style="color:#bd93f9">8&lt;/span>];
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114&lt;/span>String str;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> speed &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">100&lt;/span>; &lt;span style="color:#6272a4">//移動的速度，單位ms
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116&lt;/span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> light &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">5&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117&lt;/span>&lt;span style="color:#8be9fd">bool&lt;/span> islight &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">false&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">printChar&lt;/span>(&lt;span style="color:#8be9fd">char&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121&lt;/span>BLYNK_WRITE(V0){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122&lt;/span> str &lt;span style="color:#ff79c6">=&lt;/span> param.asStr();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> i&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>; i&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>maxInUse; &lt;span style="color:#ff79c6">++&lt;/span>i)
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124&lt;/span> str&lt;span style="color:#ff79c6">+=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34; &amp;#34;&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">127&lt;/span>BLYNK_WRITE(V1){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">128&lt;/span> light &lt;span style="color:#ff79c6">=&lt;/span> param.asInt();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">129&lt;/span> islight &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">true&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">130&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">131&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">132&lt;/span>BLYNK_WRITE(V2){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">133&lt;/span> speed &lt;span style="color:#ff79c6">=&lt;/span> param.asInt();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">136&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">setup&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">137&lt;/span> Serial.begin(&lt;span style="color:#bd93f9">115200&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">138&lt;/span> &lt;span style="color:#6272a4">//Blynk
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">139&lt;/span>&lt;span style="color:#6272a4">&lt;/span> Blynk.begin(auth, ssid, pass);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">140&lt;/span> Blynk.virtualWrite(V1, light);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">141&lt;/span> Blynk.virtualWrite(V2, speed);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">142&lt;/span> &lt;span style="color:#6272a4">//8*8 led
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">143&lt;/span>&lt;span style="color:#6272a4">&lt;/span> m.init();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">144&lt;/span> m.setIntensity(light); &lt;span style="color:#6272a4">//點陣模組的亮度
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">145&lt;/span>&lt;span style="color:#6272a4">&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">146&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">147&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">loop&lt;/span>() {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">148&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(Blynk.connected()){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">149&lt;/span> Blynk.run();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">150&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(islight){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">151&lt;/span> m.setIntensity(light);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">152&lt;/span> islight &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">false&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">153&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">154&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> len &lt;span style="color:#ff79c6">=&lt;/span> str.length();
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">155&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> i&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>; i&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>len; &lt;span style="color:#ff79c6">++&lt;/span>i){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">156&lt;/span> printChar(str[i]);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">157&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">158&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">159&lt;/span> &lt;span style="color:#ff79c6">else&lt;/span>{
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">160&lt;/span> Blynk.begin(auth, ssid, pass);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">161&lt;/span> Serial.println(&lt;span style="color:#f1fa8c">&amp;#34;Reconnected!&amp;#34;&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">162&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">163&lt;/span>}
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">164&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">165&lt;/span>&lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">printChar&lt;/span>(&lt;span style="color:#8be9fd">char&lt;/span> c) {
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">166&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span>(c&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>&lt;span style="color:#bd93f9">32&lt;/span>) &lt;span style="color:#ff79c6">return&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">167&lt;/span> c&lt;span style="color:#ff79c6">-=&lt;/span>&lt;span style="color:#bd93f9">32&lt;/span>;
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">168&lt;/span> memcpy_P(buffer, CH&lt;span style="color:#ff79c6">+&lt;/span>&lt;span style="color:#bd93f9">7&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span>c, &lt;span style="color:#bd93f9">7&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">169&lt;/span> m.writeSprite(&lt;span style="color:#bd93f9">32&lt;/span>, &lt;span style="color:#bd93f9">0&lt;/span>, buffer);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">170&lt;/span> m.setColumn(&lt;span style="color:#bd93f9">32&lt;/span>&lt;span style="color:#ff79c6">+&lt;/span>buffer[&lt;span style="color:#bd93f9">0&lt;/span>], &lt;span style="color:#bd93f9">0&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">171&lt;/span> &lt;span style="color:#ff79c6">for&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> i&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">0&lt;/span>; i&lt;span style="color:#ff79c6">&amp;lt;=&lt;/span>buffer[&lt;span style="color:#bd93f9">0&lt;/span>]; &lt;span style="color:#ff79c6">++&lt;/span>i){
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">172&lt;/span> delay(speed);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">173&lt;/span> &lt;span style="color:#6272a4">/*往左位移，第一個參數false，代表不旋轉；
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">174&lt;/span>&lt;span style="color:#6272a4"> 第二個參數false，代表不清空顯示；若設成true，顯示器將不呈現資料。*/&lt;/span>
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">175&lt;/span> m.shiftLeft(&lt;span style="color:#8be9fd;font-style:italic">false&lt;/span>, &lt;span style="color:#8be9fd;font-style:italic">false&lt;/span>);
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">176&lt;/span> }
&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">177&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="補充">補充&lt;/h1>
&lt;ul>
&lt;li>若是覺得Blynk的能量太少，可自行架設 &lt;a class="link" href="https://github.com/blynkkk/blynk-server" target="_blank" rel="noopener"
>Server&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Arduino-02：UNOJOY</title><link>https://blog.smallten.tk/p/arduino-02/</link><pubDate>Thu, 09 Apr 2020 08:16:57 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-02/</guid><description>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;ul>
&lt;li>這篇內容將帶領大家把Arduino手把變成電腦手把&lt;/li>
&lt;/ul>
&lt;h1 id="所需硬體">所需硬體&lt;/h1>
&lt;ul>
&lt;li>Arduino Uno R3 * 1&lt;/li>
&lt;li>JoyStick 雙軸按鍵搖桿模組 * 1&lt;/li>
&lt;/ul>
&lt;h1 id="下載檔案">下載檔案&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/FLIP" target="_blank" rel="noopener"
>FLIP&lt;/a> － 請下載包含JRE的檔案(Java Runtime Environment included)&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/AlanChatham/UnoJoy" target="_blank" rel="noopener"
>UnoJoy&lt;/a> － 將Uno變成電腦手把&lt;/li>
&lt;li>&lt;a class="link" href="https://www.x360ce.com/" target="_blank" rel="noopener"
>x360ce&lt;/a> － 將手把模擬成xbox 360的手把&lt;/li>
&lt;/ul>
&lt;h1 id="教學開始">教學開始&lt;/h1>
&lt;ol>
&lt;li>將下載好的FLIP安裝至電腦&lt;/li>
&lt;li>確定電腦已安裝Arduino IDE，並已連接Uno板至電腦，可在裝置管理員查看狀態（如下圖）
&lt;figure style="flex-grow: 136; flex-basis: 327px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-01.png" data-size="976x715">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-01.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-01_hu90d6f7b7fa99914680e5f4bf53d16a63_121892_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-01_hu90d6f7b7fa99914680e5f4bf53d16a63_121892_1024x0_resize_box_2.png 1024w"
width="976"
height="715"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>打開剛剛下載的UnoJoy資料夾下的檔案，並將它上傳進Uno板中 &lt;code>UnoJoy-master\UnoJoy\UnoJoyArduinoSample\UnoJoyArduinoSample.ino&lt;/code>&lt;/li>
&lt;li>關閉Arduino IDE，進入DFU Mode，進入方式：用導線同時接觸下圖框起處的兩根針腳
&lt;figure style="flex-grow: 133; flex-basis: 321px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-02.jpg" data-size="1358x1014">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-02.jpg"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-02_hu8b11114da834c901b391eecfc0650259_230764_480x0_resize_q75_box.jpg 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-02_hu8b11114da834c901b391eecfc0650259_230764_1024x0_resize_q75_box.jpg 1024w"
width="1358"
height="1014"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>確認已進入 DFU Mode，如下圖
&lt;figure style="flex-grow: 136; flex-basis: 327px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-03.png" data-size="976x715">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-03.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-03_hudcfafbb358511a7db2186a1c644da5ec_110930_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-03_hudcfafbb358511a7db2186a1c644da5ec_110930_1024x0_resize_box_2.png 1024w"
width="976"
height="715"
loading="lazy"
>
&lt;/a>
&lt;/figure>
&lt;ul>
&lt;li>若找不到驅動可手動新增驅動，選擇資料夾為 &lt;code>C:\Program Files (x86)\Atmel\Flip 3.4.7\usb&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>打開UnoJoy資料夾，啟動TurnIntoAJoystick的批次檔，檔案路徑 &lt;code>UnoJoy-master\UnoJoy\TurnIntoAJoystick.bat&lt;/code>，執行成功結果如下圖
&lt;figure style="flex-grow: 191; flex-basis: 459px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-04.png" data-size="1222x638">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-04.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-04_hu995e3f612868d33bddd627def52639d4_26769_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-04_hu995e3f612868d33bddd627def52639d4_26769_1024x0_resize_box_2.png 1024w"
width="1222"
height="638"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>至此已完成將Uno變成電腦搖桿，之後插上Uno板皆為UnoJoy Joystick，可在以下路徑查看 &lt;code>控制台\硬體和音效\裝置和印表機&lt;/code>&lt;/li>
&lt;li>將搖桿的vrx和vry分別連接至Uno板的A0和A1，在 &lt;code>控制台\硬體和音效\裝置和印表機&lt;/code> 裡的UnoJoy Joystick圖示上右鍵-&amp;gt;遊戲控制器-&amp;gt;內容，可查看搖桿狀態，如下圖
&lt;figure style="flex-grow: 91; flex-basis: 219px">
&lt;a href="https://blog.smallten.tk/p/arduino-02/Arduino-02-05.png" data-size="595x651">&lt;img src="https://blog.smallten.tk/p/arduino-02/Arduino-02-05.png"
srcset="https://blog.smallten.tk/p/arduino-02/Arduino-02-05_hu70af4f0a87379970da1ec6ad06c206c4_21607_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-02/Arduino-02-05_hu70af4f0a87379970da1ec6ad06c206c4_21607_1024x0_resize_box_2.png 1024w"
width="595"
height="651"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;li>最後進入起動x360ce，新建立一個搖桿的設定檔，並選取模擬的位置，點選[Record]，依圖示移動搖桿方向即設定完成&lt;/li>
&lt;/ol>
&lt;h1 id="補充">補充&lt;/h1>
&lt;ul>
&lt;li>如何將UnoJoy Joystick變回一般的Arduino Uno板
&lt;ol>
&lt;li>連接UnoJoy Joystick，並進入DFU Mode&lt;/li>
&lt;li>打開UnoJoy資料夾，啟動TurnIntoAnArduino的批次檔，檔案路徑 &lt;code>UnoJoy-master\UnoJoy\TurnIntoAnArduino.bat&lt;/code>&lt;/li>
&lt;li>將Uno的usb重新接上電腦，即可看到已變回&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>如果UnoJoy檔案下載太慢，可至 &lt;a class="link" href="https://code.google.com/archive/p/unojoy/" target="_blank" rel="noopener"
>這裡&lt;/a> 下載，但此載點內容僅包含uno板的檔案（Github的檔案裡包含其他板子變成手把的檔案，故檔案相對較大）&lt;/li>
&lt;li>如何在電腦遊戲中使用此手把
&lt;ul>
&lt;li>將剛剛x360ce創建的兩個檔案（x360ce.ini/xinput.dll）放進遊戲資料夾的根目錄即可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>此範例檔案預設搖桿資訊
&lt;ul>
&lt;li>A0~A1 － 為左搖桿的x，y&lt;/li>
&lt;li>A2~A3 － 為右搖桿的x，y&lt;/li>
&lt;li>D2~D5 － 為PS搖桿的右側功能鍵&lt;/li>
&lt;li>D6~D9 － 為PS搖桿的左側方向鍵&lt;/li>
&lt;li>D10~D11 － 為PS搖桿的L1R1&lt;/li>
&lt;li>D12 － select&lt;/li>
&lt;li>A4 － start&lt;/li>
&lt;li>A5 － home&lt;/li>
&lt;li>但由於是模擬成xbox的手把，故可自由接線，再由x360ce中直接[Record]即可&lt;/li>
&lt;li>若是腳位不夠可自行替換成mega板&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Arduino-01：安裝IDE</title><link>https://blog.smallten.tk/p/arduino-01/</link><pubDate>Thu, 09 Apr 2020 08:08:43 +0800</pubDate><guid>https://blog.smallten.tk/p/arduino-01/</guid><description>&lt;h1 id="官方ide">官方IDE&lt;/h1>
&lt;ul>
&lt;li>此IDE由官方提供，可在此查看&lt;a class="link" href="https://www.arduino.cc/" target="_blank" rel="noopener"
>官網&lt;/a>&lt;/li>
&lt;li>下載－&lt;a class="link" href="https://www.arduino.cc/en/software" target="_blank" rel="noopener"
>官方載點&lt;/a>
&lt;figure style="flex-grow: 214; flex-basis: 514px">
&lt;a href="https://blog.smallten.tk/p/arduino-01/arduino-01-01.png" data-size="1376x642">&lt;img src="https://blog.smallten.tk/p/arduino-01/arduino-01-01.png"
srcset="https://blog.smallten.tk/p/arduino-01/arduino-01-01_hu090779c2365445c0c56d62c8be35f1d9_133173_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-01/arduino-01-01_hu090779c2365445c0c56d62c8be35f1d9_133173_1024x0_resize_box_2.png 1024w"
width="1376"
height="642"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;h1 id="vscode--platformio">VSCode + PlatformIO&lt;/h1>
&lt;ul>
&lt;li>先下載 &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>VSCode&lt;/a>&lt;/li>
&lt;li>再安裝 PlatformIO 的插件
&lt;figure style="flex-grow: 188; flex-basis: 451px">
&lt;a href="https://blog.smallten.tk/p/arduino-01/arduino-01-02.png" data-size="1920x1020">&lt;img src="https://blog.smallten.tk/p/arduino-01/arduino-01-02.png"
srcset="https://blog.smallten.tk/p/arduino-01/arduino-01-02_hu7035091ccabc2dfaeaba4e637c83e092_290858_480x0_resize_box_2.png 480w, https://blog.smallten.tk/p/arduino-01/arduino-01-02_hu7035091ccabc2dfaeaba4e637c83e092_290858_1024x0_resize_box_2.png 1024w"
width="1920"
height="1020"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul></description></item></channel></rss>