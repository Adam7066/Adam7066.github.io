<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C on 小十的部落格</title><link>https://blog.smallten.me/tags/c/</link><description>Recent content in C on 小十的部落格</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Jul 2021 22:25:50 +0800</lastBuildDate><atom:link href="https://blog.smallten.me/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>程式設計(二)-08：Linux List</title><link>https://blog.smallten.me/p/computer_programming_2-08/</link><pubDate>Tue, 13 Jul 2021 22:25:50 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-08/</guid><description>linuxlist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69</description></item><item><title>程式設計(二)-07：Some Tricks</title><link>https://blog.smallten.me/p/computer_programming_2-07/</link><pubDate>Tue, 13 Jul 2021 21:39:10 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-07/</guid><description>Predefined Macros Standard Predefined Macros 1 2 3 4 5 6 7 8 9 10 11 12 13 #include &amp;lt;stdio.h&amp;gt;int main() { printf(&amp;#34;line: %d \n&amp;#34;, __LINE__); printf(&amp;#34;file: %s \n&amp;#34;, __FILE__); printf(&amp;#34;function: %s \n&amp;#34;, __FUNCTION__); // gcc printf(&amp;#34;function: %s \n&amp;#34;, __func__); // C99 printf(&amp;#34;time: %s \n&amp;#34;, __TIME__); printf(&amp;#34;date: %s \n&amp;#34;, __DATE__); printf(&amp;#34;STDC: %d \n&amp;#34;, __STDC__); printf(&amp;#34;STDC_VERSION: %ld \n&amp;#34;, __STDC_VERSION__); printf(&amp;#34;TIMESTAMP: %s \n&amp;#34;, __TIMESTAMP__); return 0; } 我們可以怎</description></item><item><title>程式設計(二)-06：Macro</title><link>https://blog.smallten.me/p/computer_programming_2-06/</link><pubDate>Tue, 13 Jul 2021 20:47:06 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-06/</guid><description>Preprocessor 預處理器 在編譯器將您的源代碼編譯為組語前，還有一個稱為預處理的附加階段。 Objective: Produce a source code file with preprocessing commands properly sorted out. Preprocessor commands are known as Directives. Preprocessor provides certain features, which are called preprocessor directives. Preprocessor directive 以 # 為開</description></item><item><title>程式設計(二)-05：Variable Length Arguments List</title><link>https://blog.smallten.me/p/computer_programming_2-05/</link><pubDate>Mon, 12 Jul 2021 21:57:26 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-05/</guid><description>Program Argument argc, argv 1 2 3 4 5 6 7 8 9 #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;stdint.h&amp;gt;int main(int argc, char *argv[]) { printf(&amp;#34;argc: %d\n&amp;#34;, argc); for(int32_t i = 0 ; i &amp;lt; argc ; i++) printf(&amp;#34;argv[%d]: %s\n&amp;#34;, i, argv[i]); return 0; } 誰呼叫了 main 函式? 誰提供了 argc 和 argv 到 main 函式? Is main() the actual starting entry point? No!</description></item><item><title>程式設計(二)-04：File Processing-02</title><link>https://blog.smallten.me/p/computer_programming_2-04/</link><pubDate>Sat, 08 May 2021 17:23:11 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-04/</guid><description>如何顯示 BMP 檔 ? 有很多 libraries 可以幫助您做到這一點。實際上，您應該使用它們而不是從頭開始開發。 如何在螢幕上顯示圖像？ 您必須至少學習一個 GUI 庫，例如 Gt</description></item><item><title>程式設計(二)-03：File Processing-01</title><link>https://blog.smallten.me/p/computer_programming_2-03/</link><pubDate>Fri, 02 Apr 2021 17:58:22 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-03/</guid><description>File C 將每個檔案視為一個連續的 bytes stream 每個檔案以 end-of-file 為結尾，這是由系統提供而不是文件。 It looks like there is an additional byte appended to the file. However, that additional byte does not exist. Instead, it is a signal raised by your system. int feof(FILE *stream);</description></item><item><title>程式設計(二)-02：Structure</title><link>https://blog.smallten.me/p/computer_programming_2-02/</link><pubDate>Fri, 02 Apr 2021 16:24:46 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-02/</guid><description>Structure Structures 就是將一堆相關的變數整合在一個名字下。 關鍵字：struct 資料型別：struct _name_ 成員：在 struct 的大括號內宣告的變數。 同一個結構體下的成員名</description></item><item><title>程式設計(二)-01：String</title><link>https://blog.smallten.me/p/computer_programming_2-01/</link><pubDate>Fri, 02 Apr 2021 14:40:30 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_2-01/</guid><description>字元 在講字串之前我們先來看什麼是字元。 ASCII American Standard Code for Information Interchange. 電子通訊的字元編碼標準 基於英文字母，ASCII 將 128 個字元編碼成 7 個位元長。 95 個可印字元：</description></item><item><title>程式設計(一)-08：Pointer</title><link>https://blog.smallten.me/p/computer_programming_1-08/</link><pubDate>Wed, 23 Dec 2020 19:38:14 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_1-08/</guid><description>Pointer 許多人不喜歡C是因為有「指標」 這可能是C中最困難的一個部分 指標是一個變數，其值為記憶體位置 宣告：int32_t *p p 是一個指標 指向的記憶體區</description></item><item><title>程式設計(一)-07：Array</title><link>https://blog.smallten.me/p/computer_programming_1-07/</link><pubDate>Mon, 07 Dec 2020 19:38:14 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_1-07/</guid><description>Array 陣列是一種可以儲存大量相同型別資料的方法。 連續的記憶體位置。 永遠從0開始 int32_t a[10] -&amp;gt; a[0] ~ a[9] 計數變數 i 的型別可以宣告為 size_t，它是一個無號的</description></item><item><title>程式設計(一)-05：Function</title><link>https://blog.smallten.me/p/computer_programming_1-05/</link><pubDate>Sat, 21 Nov 2020 21:48:47 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_1-05/</guid><description>Function 函式 double double 是一種浮點數型別，就像是 float 就如同它的名字，它使用的記憶體大小為 float 的兩倍 建議: 當你需要浮點數的話，一律使用 double 到目前為止我們最常使用到</description></item><item><title>程式設計(一)-04：Loop</title><link>https://blog.smallten.me/p/computer_programming_1-04/</link><pubDate>Sun, 18 Oct 2020 20:33:18 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_1-04/</guid><description>Loop - `while` - `for` - `do while` While Loop 1 2 3 while(條件){ 執行區塊 } %.200f 會發生什麼事? -&amp;gt; 精度不夠沒有意義 while(1) -&amp;gt; 無窮迴圈 For Loop 1 2 3 for(初始化; 條件; 執行後</description></item><item><title>程式設計(一)-03：Condition Control</title><link>https://blog.smallten.me/p/computer_programming_1-03/</link><pubDate>Thu, 15 Oct 2020 20:53:14 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_1-03/</guid><description>Condition Control 簡介 我們想要讓電腦去做基礎的判斷 if switch If 1 2 3 4 5 6 7 8 9 if (condition1) { statements; } else if (condition2){ ... } else { ... } 如果條件不是錯誤，那麼將會執行大括號裡的敘述 簡而言之</description></item><item><title>程式設計(一)-02：Arithmetic</title><link>https://blog.smallten.me/p/computer_programming_1-02/</link><pubDate>Thu, 15 Oct 2020 11:19:09 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_1-02/</guid><description>Arithmetic 1 2 3 4 5 6 7 #include &amp;lt;stdio.h&amp;gt;int main(){ int a = 1, b = 2, sum = 0; sum = a + b; printf(&amp;#34;%d&amp;#34;, sum); return 0; } 變數 每個變數都必須有它的型別 在使用變數前必須先宣告它 在C裡面， = 意思為”指定”</description></item><item><title>程式設計(一)-01：Your first program</title><link>https://blog.smallten.me/p/computer_programming_1-01/</link><pubDate>Sun, 04 Oct 2020 11:00:48 +0800</pubDate><guid>https://blog.smallten.me/p/computer_programming_1-01/</guid><description>Hello World 1 2 3 4 5 6 #include &amp;lt;stdio.h&amp;gt;//Your first code. int main(){ printf(&amp;#34;Hello World\n&amp;#34;); return 0; } main是每個C程式的進入點，我們稱它為main function(主函式) int 及 return 是C裡面的Keywor</description></item></channel></rss>