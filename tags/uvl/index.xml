<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UVL on 小十的部落格</title><link>https://blog.smallten.tk/tags/uvl/</link><description>Recent content in UVL on 小十的部落格</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Aug 2021 23:50:17 +0800</lastBuildDate><atom:link href="https://blog.smallten.tk/tags/uvl/index.xml" rel="self" type="application/rss+xml"/><item><title>StarCoder2021暑訓：Week05</title><link>https://blog.smallten.tk/p/star_coder-06/</link><pubDate>Tue, 10 Aug 2021 23:50:17 +0800</pubDate><guid>https://blog.smallten.tk/p/star_coder-06/</guid><description>主題 最小生成樹 MST 模板 Kruskal&amp;rsquo;s Algorithm 時間複雜度 O(ElogE) struct edge { int u, v, w; bool operator &amp;lt; (const edge &amp;amp;r) const { return w &amp;lt; r.w; } }; int vn, en; // vertex num, edge num vector&amp;lt;edge&amp;gt; ve; vector&amp;lt;int&amp;gt; dsu; int Find(int x) { if(x == dsu[x]) return x; return dsu[x] = Find(dsu[x]); } bool Union(int x, int y) { int a = Find(x), b = Find(y); if(a !</description></item></channel></rss>