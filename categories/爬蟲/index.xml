<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>爬蟲 on 小十的部落格</title><link>https://blog.smallten.tk/categories/%E7%88%AC%E8%9F%B2/</link><description>Recent content in 爬蟲 on 小十的部落格</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 04 Oct 2020 16:36:35 +0800</lastBuildDate><atom:link href="https://blog.smallten.tk/categories/%E7%88%AC%E8%9F%B2/index.xml" rel="self" type="application/rss+xml"/><item><title>Python-04：多線程-ts下載並合併成mp4</title><link>https://blog.smallten.tk/p/python-04/</link><pubDate>Sun, 04 Oct 2020 16:36:35 +0800</pubDate><guid>https://blog.smallten.tk/p/python-04/</guid><description>簡介  這篇將帶你下載m3u8檔並分析出ts的檔案，再透過多線程來加速下載，之後再由FFmpeg合併成mp4。
Python 下載m3u8 m3u8Url = &amp;#39;https://.../index.m3u8&amp;#39; def downloadM3u8(url): r = requests.get(url) with open(&amp;#39;./index.m3u8&amp;#39;, &amp;#39;wb&amp;#39;) as f: f.write(r.content) 分析m3u8 這部份請依照你所取得的m3u8檔進行分析，並將完整的ts檔的url放進tsList即可。 tsList = [] tsCnt = 0 def analyzeM3u8(): tsList.clear() tempUrl = m3u8Url.rsplit(&amp;#39;/&amp;#39;, 1)[0] + &amp;#39;/&amp;#39; with open(&amp;#39;./index.m3u8&amp;#39;, &amp;#39;r&amp;#39;) as f: text = f.read() textList = text.split(&amp;#39;\n&amp;#39;) while textList[-1] != &amp;#39;#EXT-X-ENDLIST&amp;#39;: textList.pop(-1) for i in textList: if i[0] != &amp;#39;#&amp;#39;: tsList.append(tempUrl + i) global tsCnt tsCnt = len(tsList) 下載ts檔 q = queue.</description></item><item><title>Python-03：m3u8影片下載</title><link>https://blog.smallten.tk/p/python-03/</link><pubDate>Sun, 04 Oct 2020 11:07:24 +0800</pubDate><guid>https://blog.smallten.tk/p/python-03/</guid><description>簡介 現今你時常能在影音媒體網站看到 .m3u8 的檔案，以及許多 .ts 的分段媒體，本篇將教你如何簡單的下載成 .mp4 檔。 這篇並不詳加敘述 HLS 之類的觀念，若有興趣深入了解請自行查找資料。 FFmpeg FFmpeg官網 下載安裝完後，若為 windows 用戶請將 %ffmpeg%\bin 的路徑加入環境變數中，並於terminal中執行 ffmpeg -version 來查看是否成功加入。 下載檔案，直接在 terminal 輸入 ffmpeg -i m3u8URL -c copy filname.mp4，即可完成下載。(下面將提供Python的寫法) Python # -*- coding: UTF-8 -*- import ffmpeg_streaming from ffmpeg_streaming import Formats url = &amp;#39;https://.../index.m3u8&amp;#39; filename = &amp;#39;test.mp4&amp;#39; def ffmpeg_download(input_path, output_path): video = ffmpeg_streaming.input(input_path) stream = video.stream2file(Formats.h264()) stream.output(output_path) if __name__ == &amp;#34;__main__&amp;#34;: ffmpeg_download(url, &amp;#39;./&amp;#39; + filename) 下一篇將教你如何直接從 m3u8 裡讀取目錄，並使用多線程下載 ts 並合併成 mp4</description></item><item><title>Python-02：多線程-加速圖片下載</title><link>https://blog.smallten.tk/p/python-02/</link><pubDate>Mon, 03 Aug 2020 00:56:43 +0800</pubDate><guid>https://blog.smallten.tk/p/python-02/</guid><description>簡介 接續上一篇Python-01：爬蟲-圖片下載的內容，這篇文章將帶領大家使用多線程來加速圖片的下載 教學開始 首先我們先看個簡單的多線程範例 import time, threading # 子執行緒的工作函數 def job(): for i in range(5): print(&amp;#34;Child thread:&amp;#34;, i) time.sleep(1) # 建立一個子執行緒 t = threading.Thread(target = job) # 執行該子執行緒 t.start() # 主執行緒繼續執行自己的工作 for i in range(3): print(&amp;#34;Main thread:&amp;#34;, i) time.sleep(1) # 等待 t 這個子執行緒結束 t.join() print(&amp;#34;Done.&amp;#34;) import time, threading # 子執行緒的工作函數 def job(num): print(&amp;#34;Thread&amp;#34;, num) time.sleep(1) # 建立 5 個子執行緒 threads = [] for i in range(5): threads.</description></item><item><title>Python-01：爬蟲-圖片下載</title><link>https://blog.smallten.tk/p/python-01/</link><pubDate>Mon, 03 Aug 2020 00:39:24 +0800</pubDate><guid>https://blog.smallten.tk/p/python-01/</guid><description>簡介 這一篇將帶領大家透過Python的爬蟲自動化的下載圖片 安裝 打開終端機，安裝下列套件 pip install requests pip install BeautifulSoup4 pip install lxml pip install selenium 至 Chrome Driver 下載當前電腦中Chrome所對應版本的Driver 教學開始 首先因為這次的主題為圖片下載，因此我們找了一個擁有大量圖片的漫畫網頁來進行教學。 由於這個網頁的圖片是由JavaScript加載的，因此一開始我們使用Selenium來開啟網頁 from selenium import webdriver url = &amp;#39;https://www.ohmanhua.com/13621/1/1.html&amp;#39; #使用crx插件 chop = webdriver.ChromeOptions() chop.add_extension(&amp;#39;Adblock-Plus_v3.8.4.crx&amp;#39;) browser = webdriver.Chrome(options = chop) browser.implicitly_wait(10) browser.get(url) 當然若不想顯示瀏覽器的視窗可以使用headless模式 chop.add_argument(&amp;#39;--headless&amp;#39;) #規避google bug chop.add_argument(&amp;#39;--disable-gpu&amp;#39;) 接下來使用BeautifulSoup4來分析頁面，並取得圖片網址，和共幾張圖片 img_count = int(soup.find(&amp;#39;select&amp;#39;, {&amp;#39;class&amp;#39;: &amp;#39;mh_select&amp;#39;}).find_all(&amp;#39;option&amp;#39;)[-1].get(&amp;#39;value&amp;#39;)) img_url = soup.find_all(&amp;#39;div&amp;#39;, {&amp;#39;class&amp;#39;: &amp;#39;mh_comicpic&amp;#39;})[0].find(&amp;#39;img&amp;#39;).get(&amp;#39;src&amp;#39;) if img_url[0] == &amp;#39;/&amp;#39;: img_url = &amp;#39;https:&amp;#39; + img_url m = len(img_url.</description></item></channel></rss>