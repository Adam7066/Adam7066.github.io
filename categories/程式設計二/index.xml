<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>程式設計(二) on 小十的部落格</title><link>https://blog.smallten.tk/categories/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E4%BA%8C/</link><description>Recent content in 程式設計(二) on 小十的部落格</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 Apr 2021 17:58:22 +0800</lastBuildDate><atom:link href="https://blog.smallten.tk/categories/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E4%BA%8C/index.xml" rel="self" type="application/rss+xml"/><item><title>程式設計(二)-03：File Processing</title><link>https://blog.smallten.tk/p/computer_programming_2-03/</link><pubDate>Fri, 02 Apr 2021 17:58:22 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-03/</guid><description>File C 將每個檔案視為一個連續的 bytes stream 每個檔案以 end-of-file 為結尾，這是由系統提供而不是文件。 It looks like there is an additional byte appended to the file. However, that additional byte does not exist. Instead, it is a signal raised by your system. int feof(FILE *stream); File Stream Streams 提供了更高級別的介面(interface)讓你存取資料。 fprintf fscanf 事實上，你已經使用過 file stream ! 三種標準流 標準輸入 0 (standard input.) 標準輸出 1 (standard output.) 標準錯誤 2 (standard error.</description></item><item><title>程式設計(二)-02：Structure</title><link>https://blog.smallten.tk/p/computer_programming_2-02/</link><pubDate>Fri, 02 Apr 2021 16:24:46 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-02/</guid><description>Structure Structures 就是將一堆相關的變數整合在一個名字下。 關鍵字：struct 資料型別：struct _name_ 成員：在 struct 的大括號內宣告的變數。 同一個結構體下的成員名稱是唯一的。 1struct _sCard{ 2 uint8_t suit, face; 3}; 初始化 1struct _sCard a_card = {.suit = 1, .face = 2}; 2struct _sCard a_card = {1, 2}; structure member operator -&amp;gt; . structure pointer operator -&amp;gt; -&amp;gt; 1a_card_ptr = &amp;amp;a_card; 2a_card_ptr-&amp;gt;face = 5; 3// Equivalent to 4(*a_card_ptr).face = 5; CPU Alignment CPU 有時候會為了減少從記憶體呼叫變數的次數，而主動將變數的記憶體放在連續的地方。 為了避免 alignment，你可以使用以下兩種方法： __attribute__((packed)) pragma 1#pragma pack(push) 2#pragma pack(1) 3#pragma pack(pop) 1// 法一 2struct st{ 3 .</description></item><item><title>程式設計(二)-01：String</title><link>https://blog.smallten.tk/p/computer_programming_2-01/</link><pubDate>Fri, 02 Apr 2021 14:40:30 +0800</pubDate><guid>https://blog.smallten.tk/p/computer_programming_2-01/</guid><description>字元 在講字串之前我們先來看什麼是字元。 ASCII American Standard Code for Information Interchange. 電子通訊的字元編碼標準 基於英文字母，ASCII 將 128 個字元編碼成 7 個位元長。 95 個可印字元：A-Z, a-z, 0-9, 標點符號 不可印字元：換行符號 在電腦中我們使用 8-bit 的記憶體儲存字元。 在 C 語言中，使用 char 這個型別。 %c -&amp;gt; 輸出字元 %x or %X -&amp;gt; 印出 hex or HEX 的值。 在以前，許多情況下，有些人使用 unsigned char 作為 one byte 的資料型別，但現今你應該使用的是 uint8_t。 請把 char 留給字串，盡管事實上對電腦來說都是一樣的。 其他編碼：Big5、UTF-8 字串 事實上，字串就是一連串的可印字元。 這樣看起來很像陣列對吧?</description></item></channel></rss>